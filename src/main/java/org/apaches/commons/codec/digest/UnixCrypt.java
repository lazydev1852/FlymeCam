package org.apaches.commons.codec.digest;

import com.arcsoft.livebroadcast.ArcSpotlightFaceAlignment;
import org.apaches.commons.codec.Charsets;
import vendor.mediatek.hardware.power.V1_1.MtkHintOp;

public class UnixCrypt {
    private static final int[] CON_SALT;
    private static final int[] COV2CHAR = {46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, ArcSpotlightFaceAlignment.ASL_OUTLINE_POINT_COUNT};
    private static final char[] SALT_CHARS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789./".toCharArray();
    private static final boolean[] SHIFT2;
    private static final int[][] SKB;
    private static final int[][] SPTRANS;

    private static int byteToUnsigned(byte b) {
        return b < 0 ? b + 256 : b;
    }

    private static int hPermOp(int i, int i2, int i3) {
        int i4 = 16 - i2;
        int i5 = i3 & ((i << i4) ^ i);
        return (i ^ i5) ^ (i5 >>> i4);
    }

    static {
        int[] iArr = new int[128];
        iArr[47] = 1;
        iArr[48] = 2;
        iArr[49] = 3;
        iArr[50] = 4;
        iArr[51] = 5;
        iArr[52] = 6;
        iArr[53] = 7;
        iArr[54] = 8;
        iArr[55] = 9;
        iArr[56] = 10;
        iArr[57] = 11;
        iArr[58] = 5;
        iArr[59] = 6;
        iArr[60] = 7;
        iArr[61] = 8;
        iArr[62] = 9;
        iArr[63] = 10;
        iArr[64] = 11;
        iArr[65] = 12;
        iArr[66] = 13;
        iArr[67] = 14;
        iArr[68] = 15;
        iArr[69] = 16;
        iArr[70] = 17;
        iArr[71] = 18;
        iArr[72] = 19;
        iArr[73] = 20;
        iArr[74] = 21;
        iArr[75] = 22;
        iArr[76] = 23;
        iArr[77] = 24;
        iArr[78] = 25;
        iArr[79] = 26;
        iArr[80] = 27;
        iArr[81] = 28;
        iArr[82] = 29;
        iArr[83] = 30;
        iArr[84] = 31;
        iArr[85] = 32;
        iArr[86] = 33;
        iArr[87] = 34;
        iArr[88] = 35;
        iArr[89] = 36;
        iArr[90] = 37;
        iArr[91] = 32;
        iArr[92] = 33;
        iArr[93] = 34;
        iArr[94] = 35;
        iArr[95] = 36;
        iArr[96] = 37;
        iArr[97] = 38;
        iArr[98] = 39;
        iArr[99] = 40;
        iArr[100] = 41;
        iArr[101] = 42;
        iArr[102] = 43;
        iArr[103] = 44;
        iArr[104] = 45;
        iArr[105] = 46;
        iArr[106] = 47;
        iArr[107] = 48;
        iArr[108] = 49;
        iArr[109] = 50;
        iArr[110] = 51;
        iArr[111] = 52;
        iArr[112] = 53;
        iArr[113] = 54;
        iArr[114] = 55;
        iArr[115] = 56;
        iArr[116] = 57;
        iArr[117] = 58;
        iArr[118] = 59;
        iArr[119] = 60;
        iArr[120] = 61;
        iArr[121] = 62;
        iArr[122] = 63;
        CON_SALT = iArr;
        boolean[] zArr = new boolean[16];
        zArr[2] = true;
        zArr[3] = true;
        zArr[4] = true;
        zArr[5] = true;
        zArr[6] = true;
        zArr[7] = true;
        zArr[9] = true;
        zArr[10] = true;
        zArr[11] = true;
        zArr[12] = true;
        zArr[13] = true;
        zArr[14] = true;
        SHIFT2 = zArr;
        int[] iArr2 = new int[64];
        iArr2[1] = 16;
        iArr2[2] = 536870912;
        iArr2[3] = 536870928;
        iArr2[4] = 65536;
        iArr2[5] = 65552;
        iArr2[6] = 536936448;
        iArr2[7] = 536936464;
        iArr2[8] = 2048;
        iArr2[9] = 2064;
        iArr2[10] = 536872960;
        iArr2[11] = 536872976;
        iArr2[12] = 67584;
        iArr2[13] = 67600;
        iArr2[14] = 536938496;
        iArr2[15] = 536938512;
        iArr2[16] = 32;
        iArr2[17] = 48;
        iArr2[18] = 536870944;
        iArr2[19] = 536870960;
        iArr2[20] = 65568;
        iArr2[21] = 65584;
        iArr2[22] = 536936480;
        iArr2[23] = 536936496;
        iArr2[24] = 2080;
        iArr2[25] = 2096;
        iArr2[26] = 536872992;
        iArr2[27] = 536873008;
        iArr2[28] = 67616;
        iArr2[29] = 67632;
        iArr2[30] = 536938528;
        iArr2[31] = 536938544;
        iArr2[32] = 524288;
        iArr2[33] = 524304;
        iArr2[34] = 537395200;
        iArr2[35] = 537395216;
        iArr2[36] = 589824;
        iArr2[37] = 589840;
        iArr2[38] = 537460736;
        iArr2[39] = 537460752;
        iArr2[40] = 526336;
        iArr2[41] = 526352;
        iArr2[42] = 537397248;
        iArr2[43] = 537397264;
        iArr2[44] = 591872;
        iArr2[45] = 591888;
        iArr2[46] = 537462784;
        iArr2[47] = 537462800;
        iArr2[48] = 524320;
        iArr2[49] = 524336;
        iArr2[50] = 537395232;
        iArr2[51] = 537395248;
        iArr2[52] = 589856;
        iArr2[53] = 589872;
        iArr2[54] = 537460768;
        iArr2[55] = 537460784;
        iArr2[56] = 526368;
        iArr2[57] = 526384;
        iArr2[58] = 537397280;
        iArr2[59] = 537397296;
        iArr2[60] = 591904;
        iArr2[61] = 591920;
        iArr2[62] = 537462816;
        iArr2[63] = 537462832;
        int[] iArr3 = new int[64];
        iArr3[1] = 33554432;
        iArr3[2] = 8192;
        iArr3[3] = 33562624;
        iArr3[4] = 2097152;
        iArr3[5] = 35651584;
        iArr3[6] = 2105344;
        iArr3[7] = 35659776;
        iArr3[8] = 4;
        iArr3[9] = 33554436;
        iArr3[10] = 8196;
        iArr3[11] = 33562628;
        iArr3[12] = 2097156;
        iArr3[13] = 35651588;
        iArr3[14] = 2105348;
        iArr3[15] = 35659780;
        iArr3[16] = 1024;
        iArr3[17] = 33555456;
        iArr3[18] = 9216;
        iArr3[19] = 33563648;
        iArr3[20] = 2098176;
        iArr3[21] = 35652608;
        iArr3[22] = 2106368;
        iArr3[23] = 35660800;
        iArr3[24] = 1028;
        iArr3[25] = 33555460;
        iArr3[26] = 9220;
        iArr3[27] = 33563652;
        iArr3[28] = 2098180;
        iArr3[29] = 35652612;
        iArr3[30] = 2106372;
        iArr3[31] = 35660804;
        iArr3[32] = 268435456;
        iArr3[33] = 301989888;
        iArr3[34] = 268443648;
        iArr3[35] = 301998080;
        iArr3[36] = 270532608;
        iArr3[37] = 304087040;
        iArr3[38] = 270540800;
        iArr3[39] = 304095232;
        iArr3[40] = 268435460;
        iArr3[41] = 301989892;
        iArr3[42] = 268443652;
        iArr3[43] = 301998084;
        iArr3[44] = 270532612;
        iArr3[45] = 304087044;
        iArr3[46] = 270540804;
        iArr3[47] = 304095236;
        iArr3[48] = 268436480;
        iArr3[49] = 301990912;
        iArr3[50] = 268444672;
        iArr3[51] = 301999104;
        iArr3[52] = 270533632;
        iArr3[53] = 304088064;
        iArr3[54] = 270541824;
        iArr3[55] = 304096256;
        iArr3[56] = 268436484;
        iArr3[57] = 301990916;
        iArr3[58] = 268444676;
        iArr3[59] = 301999108;
        iArr3[60] = 270533636;
        iArr3[61] = 304088068;
        iArr3[62] = 270541828;
        iArr3[63] = 304096260;
        int[] iArr4 = new int[64];
        iArr4[1] = 1;
        iArr4[2] = 262144;
        iArr4[3] = 262145;
        iArr4[4] = 16777216;
        iArr4[5] = 16777217;
        iArr4[6] = 17039360;
        iArr4[7] = 17039361;
        iArr4[8] = 2;
        iArr4[9] = 3;
        iArr4[10] = 262146;
        iArr4[11] = 262147;
        iArr4[12] = 16777218;
        iArr4[13] = 16777219;
        iArr4[14] = 17039362;
        iArr4[15] = 17039363;
        iArr4[16] = 512;
        iArr4[17] = 513;
        iArr4[18] = 262656;
        iArr4[19] = 262657;
        iArr4[20] = 16777728;
        iArr4[21] = 16777729;
        iArr4[22] = 17039872;
        iArr4[23] = 17039873;
        iArr4[24] = 514;
        iArr4[25] = 515;
        iArr4[26] = 262658;
        iArr4[27] = 262659;
        iArr4[28] = 16777730;
        iArr4[29] = 16777731;
        iArr4[30] = 17039874;
        iArr4[31] = 17039875;
        iArr4[32] = 134217728;
        iArr4[33] = 134217729;
        iArr4[34] = 134479872;
        iArr4[35] = 134479873;
        iArr4[36] = 150994944;
        iArr4[37] = 150994945;
        iArr4[38] = 151257088;
        iArr4[39] = 151257089;
        iArr4[40] = 134217730;
        iArr4[41] = 134217731;
        iArr4[42] = 134479874;
        iArr4[43] = 134479875;
        iArr4[44] = 150994946;
        iArr4[45] = 150994947;
        iArr4[46] = 151257090;
        iArr4[47] = 151257091;
        iArr4[48] = 134218240;
        iArr4[49] = 134218241;
        iArr4[50] = 134480384;
        iArr4[51] = 134480385;
        iArr4[52] = 150995456;
        iArr4[53] = 150995457;
        iArr4[54] = 151257600;
        iArr4[55] = 151257601;
        iArr4[56] = 134218242;
        iArr4[57] = 134218243;
        iArr4[58] = 134480386;
        iArr4[59] = 134480387;
        iArr4[60] = 150995458;
        iArr4[61] = 150995459;
        iArr4[62] = 151257602;
        iArr4[63] = 151257603;
        int[] iArr5 = new int[64];
        iArr5[1] = 1048576;
        iArr5[2] = 256;
        iArr5[3] = 1048832;
        iArr5[4] = 8;
        iArr5[5] = 1048584;
        iArr5[6] = 264;
        iArr5[7] = 1048840;
        iArr5[8] = 4096;
        iArr5[9] = 1052672;
        iArr5[10] = 4352;
        iArr5[11] = 1052928;
        iArr5[12] = 4104;
        iArr5[13] = 1052680;
        iArr5[14] = 4360;
        iArr5[15] = 1052936;
        iArr5[16] = 67108864;
        iArr5[17] = 68157440;
        iArr5[18] = 67109120;
        iArr5[19] = 68157696;
        iArr5[20] = 67108872;
        iArr5[21] = 68157448;
        iArr5[22] = 67109128;
        iArr5[23] = 68157704;
        iArr5[24] = 67112960;
        iArr5[25] = 68161536;
        iArr5[26] = 67113216;
        iArr5[27] = 68161792;
        iArr5[28] = 67112968;
        iArr5[29] = 68161544;
        iArr5[30] = 67113224;
        iArr5[31] = 68161800;
        iArr5[32] = 131072;
        iArr5[33] = 1179648;
        iArr5[34] = 131328;
        iArr5[35] = 1179904;
        iArr5[36] = 131080;
        iArr5[37] = 1179656;
        iArr5[38] = 131336;
        iArr5[39] = 1179912;
        iArr5[40] = 135168;
        iArr5[41] = 1183744;
        iArr5[42] = 135424;
        iArr5[43] = 1184000;
        iArr5[44] = 135176;
        iArr5[45] = 1183752;
        iArr5[46] = 135432;
        iArr5[47] = 1184008;
        iArr5[48] = 67239936;
        iArr5[49] = 68288512;
        iArr5[50] = 67240192;
        iArr5[51] = 68288768;
        iArr5[52] = 67239944;
        iArr5[53] = 68288520;
        iArr5[54] = 67240200;
        iArr5[55] = 68288776;
        iArr5[56] = 67244032;
        iArr5[57] = 68292608;
        iArr5[58] = 67244288;
        iArr5[59] = 68292864;
        iArr5[60] = 67244040;
        iArr5[61] = 68292616;
        iArr5[62] = 67244296;
        iArr5[63] = 68292872;
        int[] iArr6 = new int[64];
        iArr6[1] = 268435456;
        iArr6[2] = 65536;
        iArr6[3] = 268500992;
        iArr6[4] = 4;
        iArr6[5] = 268435460;
        iArr6[6] = 65540;
        iArr6[7] = 268500996;
        iArr6[8] = 536870912;
        iArr6[9] = 805306368;
        iArr6[10] = 536936448;
        iArr6[11] = 805371904;
        iArr6[12] = 536870916;
        iArr6[13] = 805306372;
        iArr6[14] = 536936452;
        iArr6[15] = 805371908;
        iArr6[16] = 1048576;
        iArr6[17] = 269484032;
        iArr6[18] = 1114112;
        iArr6[19] = 269549568;
        iArr6[20] = 1048580;
        iArr6[21] = 269484036;
        iArr6[22] = 1114116;
        iArr6[23] = 269549572;
        iArr6[24] = 537919488;
        iArr6[25] = 806354944;
        iArr6[26] = 537985024;
        iArr6[27] = 806420480;
        iArr6[28] = 537919492;
        iArr6[29] = 806354948;
        iArr6[30] = 537985028;
        iArr6[31] = 806420484;
        iArr6[32] = 4096;
        iArr6[33] = 268439552;
        iArr6[34] = 69632;
        iArr6[35] = 268505088;
        iArr6[36] = 4100;
        iArr6[37] = 268439556;
        iArr6[38] = 69636;
        iArr6[39] = 268505092;
        iArr6[40] = 536875008;
        iArr6[41] = 805310464;
        iArr6[42] = 536940544;
        iArr6[43] = 805376000;
        iArr6[44] = 536875012;
        iArr6[45] = 805310468;
        iArr6[46] = 536940548;
        iArr6[47] = 805376004;
        iArr6[48] = 1052672;
        iArr6[49] = 269488128;
        iArr6[50] = 1118208;
        iArr6[51] = 269553664;
        iArr6[52] = 1052676;
        iArr6[53] = 269488132;
        iArr6[54] = 1118212;
        iArr6[55] = 269553668;
        iArr6[56] = 537923584;
        iArr6[57] = 806359040;
        iArr6[58] = 537989120;
        iArr6[59] = 806424576;
        iArr6[60] = 537923588;
        iArr6[61] = 806359044;
        iArr6[62] = 537989124;
        iArr6[63] = 806424580;
        int[] iArr7 = new int[64];
        iArr7[1] = 134217728;
        iArr7[2] = 8;
        iArr7[3] = 134217736;
        iArr7[4] = 1024;
        iArr7[5] = 134218752;
        iArr7[6] = 1032;
        iArr7[7] = 134218760;
        iArr7[8] = 131072;
        iArr7[9] = 134348800;
        iArr7[10] = 131080;
        iArr7[11] = 134348808;
        iArr7[12] = 132096;
        iArr7[13] = 134349824;
        iArr7[14] = 132104;
        iArr7[15] = 134349832;
        iArr7[16] = 1;
        iArr7[17] = 134217729;
        iArr7[18] = 9;
        iArr7[19] = 134217737;
        iArr7[20] = 1025;
        iArr7[21] = 134218753;
        iArr7[22] = 1033;
        iArr7[23] = 134218761;
        iArr7[24] = 131073;
        iArr7[25] = 134348801;
        iArr7[26] = 131081;
        iArr7[27] = 134348809;
        iArr7[28] = 132097;
        iArr7[29] = 134349825;
        iArr7[30] = 132105;
        iArr7[31] = 134349833;
        iArr7[32] = 33554432;
        iArr7[33] = 167772160;
        iArr7[34] = 33554440;
        iArr7[35] = 167772168;
        iArr7[36] = 33555456;
        iArr7[37] = 167773184;
        iArr7[38] = 33555464;
        iArr7[39] = 167773192;
        iArr7[40] = 33685504;
        iArr7[41] = 167903232;
        iArr7[42] = 33685512;
        iArr7[43] = 167903240;
        iArr7[44] = 33686528;
        iArr7[45] = 167904256;
        iArr7[46] = 33686536;
        iArr7[47] = 167904264;
        iArr7[48] = 33554433;
        iArr7[49] = 167772161;
        iArr7[50] = 33554441;
        iArr7[51] = 167772169;
        iArr7[52] = 33555457;
        iArr7[53] = 167773185;
        iArr7[54] = 33555465;
        iArr7[55] = 167773193;
        iArr7[56] = 33685505;
        iArr7[57] = 167903233;
        iArr7[58] = 33685513;
        iArr7[59] = 167903241;
        iArr7[60] = 33686529;
        iArr7[61] = 167904257;
        iArr7[62] = 33686537;
        iArr7[63] = 167904265;
        int[] iArr8 = new int[64];
        iArr8[1] = 256;
        iArr8[2] = 524288;
        iArr8[3] = 524544;
        iArr8[4] = 16777216;
        iArr8[5] = 16777472;
        iArr8[6] = 17301504;
        iArr8[7] = 17301760;
        iArr8[8] = 16;
        iArr8[9] = 272;
        iArr8[10] = 524304;
        iArr8[11] = 524560;
        iArr8[12] = 16777232;
        iArr8[13] = 16777488;
        iArr8[14] = 17301520;
        iArr8[15] = 17301776;
        iArr8[16] = 2097152;
        iArr8[17] = 2097408;
        iArr8[18] = 2621440;
        iArr8[19] = 2621696;
        iArr8[20] = 18874368;
        iArr8[21] = 18874624;
        iArr8[22] = 19398656;
        iArr8[23] = 19398912;
        iArr8[24] = 2097168;
        iArr8[25] = 2097424;
        iArr8[26] = 2621456;
        iArr8[27] = 2621712;
        iArr8[28] = 18874384;
        iArr8[29] = 18874640;
        iArr8[30] = 19398672;
        iArr8[31] = 19398928;
        iArr8[32] = 512;
        iArr8[33] = 768;
        iArr8[34] = 524800;
        iArr8[35] = 525056;
        iArr8[36] = 16777728;
        iArr8[37] = 16777984;
        iArr8[38] = 17302016;
        iArr8[39] = 17302272;
        iArr8[40] = 528;
        iArr8[41] = 784;
        iArr8[42] = 524816;
        iArr8[43] = 525072;
        iArr8[44] = 16777744;
        iArr8[45] = 16778000;
        iArr8[46] = 17302032;
        iArr8[47] = 17302288;
        iArr8[48] = 2097664;
        iArr8[49] = 2097920;
        iArr8[50] = 2621952;
        iArr8[51] = 2622208;
        iArr8[52] = 18874880;
        iArr8[53] = 18875136;
        iArr8[54] = 19399168;
        iArr8[55] = 19399424;
        iArr8[56] = 2097680;
        iArr8[57] = 2097936;
        iArr8[58] = 2621968;
        iArr8[59] = 2622224;
        iArr8[60] = 18874896;
        iArr8[61] = 18875152;
        iArr8[62] = 19399184;
        iArr8[63] = 19399440;
        int[] iArr9 = new int[64];
        iArr9[1] = 67108864;
        iArr9[2] = 262144;
        iArr9[3] = 67371008;
        iArr9[4] = 2;
        iArr9[5] = 67108866;
        iArr9[6] = 262146;
        iArr9[7] = 67371010;
        iArr9[8] = 8192;
        iArr9[9] = 67117056;
        iArr9[10] = 270336;
        iArr9[11] = 67379200;
        iArr9[12] = 8194;
        iArr9[13] = 67117058;
        iArr9[14] = 270338;
        iArr9[15] = 67379202;
        iArr9[16] = 32;
        iArr9[17] = 67108896;
        iArr9[18] = 262176;
        iArr9[19] = 67371040;
        iArr9[20] = 34;
        iArr9[21] = 67108898;
        iArr9[22] = 262178;
        iArr9[23] = 67371042;
        iArr9[24] = 8224;
        iArr9[25] = 67117088;
        iArr9[26] = 270368;
        iArr9[27] = 67379232;
        iArr9[28] = 8226;
        iArr9[29] = 67117090;
        iArr9[30] = 270370;
        iArr9[31] = 67379234;
        iArr9[32] = 2048;
        iArr9[33] = 67110912;
        iArr9[34] = 264192;
        iArr9[35] = 67373056;
        iArr9[36] = 2050;
        iArr9[37] = 67110914;
        iArr9[38] = 264194;
        iArr9[39] = 67373058;
        iArr9[40] = 10240;
        iArr9[41] = 67119104;
        iArr9[42] = 272384;
        iArr9[43] = 67381248;
        iArr9[44] = 10242;
        iArr9[45] = 67119106;
        iArr9[46] = 272386;
        iArr9[47] = 67381250;
        iArr9[48] = 2080;
        iArr9[49] = 67110944;
        iArr9[50] = 264224;
        iArr9[51] = 67373088;
        iArr9[52] = 2082;
        iArr9[53] = 67110946;
        iArr9[54] = 264226;
        iArr9[55] = 67373090;
        iArr9[56] = 10272;
        iArr9[57] = 67119136;
        iArr9[58] = 272416;
        iArr9[59] = 67381280;
        iArr9[60] = 10274;
        iArr9[61] = 67119138;
        iArr9[62] = 272418;
        iArr9[63] = 67381282;
        SKB = new int[][]{iArr2, iArr3, iArr4, iArr5, iArr6, iArr7, iArr8, iArr9};
        int[] iArr10 = new int[64];
        iArr10[0] = 8520192;
        iArr10[1] = 131072;
        iArr10[2] = -2139095040;
        iArr10[3] = -2138963456;
        iArr10[4] = 8388608;
        iArr10[5] = -2147352064;
        iArr10[6] = -2147352576;
        iArr10[7] = -2139095040;
        iArr10[8] = -2147352064;
        iArr10[9] = 8520192;
        iArr10[10] = 8519680;
        iArr10[11] = -2147483136;
        iArr10[12] = -2139094528;
        iArr10[13] = 8388608;
        iArr10[15] = -2147352576;
        iArr10[16] = 131072;
        iArr10[17] = Integer.MIN_VALUE;
        iArr10[18] = 8389120;
        iArr10[19] = 131584;
        iArr10[20] = -2138963456;
        iArr10[21] = 8519680;
        iArr10[22] = -2147483136;
        iArr10[23] = 8389120;
        iArr10[24] = Integer.MIN_VALUE;
        iArr10[25] = 512;
        iArr10[26] = 131584;
        iArr10[27] = -2138963968;
        iArr10[28] = 512;
        iArr10[29] = -2139094528;
        iArr10[30] = -2138963968;
        iArr10[33] = -2138963456;
        iArr10[34] = 8389120;
        iArr10[35] = -2147352576;
        iArr10[36] = 8520192;
        iArr10[37] = 131072;
        iArr10[38] = -2147483136;
        iArr10[39] = 8389120;
        iArr10[40] = -2138963968;
        iArr10[41] = 512;
        iArr10[42] = 131584;
        iArr10[43] = -2139095040;
        iArr10[44] = -2147352064;
        iArr10[45] = Integer.MIN_VALUE;
        iArr10[46] = -2139095040;
        iArr10[47] = 8519680;
        iArr10[48] = -2138963456;
        iArr10[49] = 131584;
        iArr10[50] = 8519680;
        iArr10[51] = -2139094528;
        iArr10[52] = 8388608;
        iArr10[53] = -2147483136;
        iArr10[54] = -2147352576;
        iArr10[56] = 131072;
        iArr10[57] = 8388608;
        iArr10[58] = -2139094528;
        iArr10[59] = 8520192;
        iArr10[60] = Integer.MIN_VALUE;
        iArr10[61] = -2138963968;
        iArr10[62] = 512;
        iArr10[63] = -2147352064;
        int[] iArr11 = new int[64];
        iArr11[0] = 268705796;
        iArr11[2] = 270336;
        iArr11[3] = 268697600;
        iArr11[4] = 268435460;
        iArr11[5] = 8196;
        iArr11[6] = 268443648;
        iArr11[7] = 270336;
        iArr11[8] = 8192;
        iArr11[9] = 268697604;
        iArr11[10] = 4;
        iArr11[11] = 268443648;
        iArr11[12] = 262148;
        iArr11[13] = 268705792;
        iArr11[14] = 268697600;
        iArr11[15] = 4;
        iArr11[16] = 262144;
        iArr11[17] = 268443652;
        iArr11[18] = 268697604;
        iArr11[19] = 8192;
        iArr11[20] = 270340;
        iArr11[21] = 268435456;
        iArr11[23] = 262148;
        iArr11[24] = 268443652;
        iArr11[25] = 270340;
        iArr11[26] = 268705792;
        iArr11[27] = 268435460;
        iArr11[28] = 268435456;
        iArr11[29] = 262144;
        iArr11[30] = 8196;
        iArr11[31] = 268705796;
        iArr11[32] = 262148;
        iArr11[33] = 268705792;
        iArr11[34] = 268443648;
        iArr11[35] = 270340;
        iArr11[36] = 268705796;
        iArr11[37] = 262148;
        iArr11[38] = 268435460;
        iArr11[40] = 268435456;
        iArr11[41] = 8196;
        iArr11[42] = 262144;
        iArr11[43] = 268697604;
        iArr11[44] = 8192;
        iArr11[45] = 268435456;
        iArr11[46] = 270340;
        iArr11[47] = 268443652;
        iArr11[48] = 268705792;
        iArr11[49] = 8192;
        iArr11[51] = 268435460;
        iArr11[52] = 4;
        iArr11[53] = 268705796;
        iArr11[54] = 270336;
        iArr11[55] = 268697600;
        iArr11[56] = 268697604;
        iArr11[57] = 262144;
        iArr11[58] = 8196;
        iArr11[59] = 268443648;
        iArr11[60] = 268443652;
        iArr11[61] = 4;
        iArr11[62] = 268697600;
        iArr11[63] = 270336;
        int[] iArr12 = new int[64];
        iArr12[0] = 1090519040;
        iArr12[1] = 16842816;
        iArr12[2] = 64;
        iArr12[3] = 1090519104;
        iArr12[4] = 1073807360;
        iArr12[5] = 16777216;
        iArr12[6] = 1090519104;
        iArr12[7] = 65600;
        iArr12[8] = 16777280;
        iArr12[9] = 65536;
        iArr12[10] = 16842752;
        iArr12[11] = 1073741824;
        iArr12[12] = 1090584640;
        iArr12[13] = 1073741888;
        iArr12[14] = 1073741824;
        iArr12[15] = 1090584576;
        iArr12[17] = 1073807360;
        iArr12[18] = 16842816;
        iArr12[19] = 64;
        iArr12[20] = 1073741888;
        iArr12[21] = 1090584640;
        iArr12[22] = 65536;
        iArr12[23] = 1090519040;
        iArr12[24] = 1090584576;
        iArr12[25] = 16777280;
        iArr12[26] = 1073807424;
        iArr12[27] = 16842752;
        iArr12[28] = 65600;
        iArr12[30] = 16777216;
        iArr12[31] = 1073807424;
        iArr12[32] = 16842816;
        iArr12[33] = 64;
        iArr12[34] = 1073741824;
        iArr12[35] = 65536;
        iArr12[36] = 1073741888;
        iArr12[37] = 1073807360;
        iArr12[38] = 16842752;
        iArr12[39] = 1090519104;
        iArr12[41] = 16842816;
        iArr12[42] = 65600;
        iArr12[43] = 1090584576;
        iArr12[44] = 1073807360;
        iArr12[45] = 16777216;
        iArr12[46] = 1090584640;
        iArr12[47] = 1073741824;
        iArr12[48] = 1073807424;
        iArr12[49] = 1090519040;
        iArr12[50] = 16777216;
        iArr12[51] = 1090584640;
        iArr12[52] = 65536;
        iArr12[53] = 16777280;
        iArr12[54] = 1090519104;
        iArr12[55] = 65600;
        iArr12[56] = 16777280;
        iArr12[58] = 1090584576;
        iArr12[59] = 1073741888;
        iArr12[60] = 1090519040;
        iArr12[61] = 1073807424;
        iArr12[62] = 64;
        iArr12[63] = 16842752;
        int[] iArr13 = new int[64];
        iArr13[0] = 1049602;
        iArr13[1] = 67109888;
        iArr13[2] = 2;
        iArr13[3] = 68158466;
        iArr13[5] = 68157440;
        iArr13[6] = 67109890;
        iArr13[7] = 1048578;
        iArr13[8] = 68158464;
        iArr13[9] = 67108866;
        iArr13[10] = 67108864;
        iArr13[11] = 1026;
        iArr13[12] = 67108866;
        iArr13[13] = 1049602;
        iArr13[14] = 1048576;
        iArr13[15] = 67108864;
        iArr13[16] = 68157442;
        iArr13[17] = 1049600;
        iArr13[18] = 1024;
        iArr13[19] = 2;
        iArr13[20] = 1049600;
        iArr13[21] = 67109890;
        iArr13[22] = 68157440;
        iArr13[23] = 1024;
        iArr13[24] = 1026;
        iArr13[26] = 1048578;
        iArr13[27] = 68158464;
        iArr13[28] = 67109888;
        iArr13[29] = 68157442;
        iArr13[30] = 68158466;
        iArr13[31] = 1048576;
        iArr13[32] = 68157442;
        iArr13[33] = 1026;
        iArr13[34] = 1048576;
        iArr13[35] = 67108866;
        iArr13[36] = 1049600;
        iArr13[37] = 67109888;
        iArr13[38] = 2;
        iArr13[39] = 68157440;
        iArr13[40] = 67109890;
        iArr13[42] = 1024;
        iArr13[43] = 1048578;
        iArr13[45] = 68157442;
        iArr13[46] = 68158464;
        iArr13[47] = 1024;
        iArr13[48] = 67108864;
        iArr13[49] = 68158466;
        iArr13[50] = 1049602;
        iArr13[51] = 1048576;
        iArr13[52] = 68158466;
        iArr13[53] = 2;
        iArr13[54] = 67109888;
        iArr13[55] = 1049602;
        iArr13[56] = 1048578;
        iArr13[57] = 1049600;
        iArr13[58] = 68157440;
        iArr13[59] = 67109890;
        iArr13[60] = 1026;
        iArr13[61] = 67108864;
        iArr13[62] = 67108866;
        iArr13[63] = 68158464;
        int[] iArr14 = new int[64];
        iArr14[0] = 33554432;
        iArr14[1] = 16384;
        iArr14[2] = 256;
        iArr14[3] = 33571080;
        iArr14[4] = 33570824;
        iArr14[5] = 33554688;
        iArr14[6] = 16648;
        iArr14[7] = 33570816;
        iArr14[8] = 16384;
        iArr14[9] = 8;
        iArr14[10] = 33554440;
        iArr14[11] = 16640;
        iArr14[12] = 33554696;
        iArr14[13] = 33570824;
        iArr14[14] = 33571072;
        iArr14[16] = 16640;
        iArr14[17] = 33554432;
        iArr14[18] = 16392;
        iArr14[19] = 264;
        iArr14[20] = 33554688;
        iArr14[21] = 16648;
        iArr14[23] = 33554440;
        iArr14[24] = 8;
        iArr14[25] = 33554696;
        iArr14[26] = 33571080;
        iArr14[27] = 16392;
        iArr14[28] = 33570816;
        iArr14[29] = 256;
        iArr14[30] = 264;
        iArr14[31] = 33571072;
        iArr14[32] = 33571072;
        iArr14[33] = 33554696;
        iArr14[34] = 16392;
        iArr14[35] = 33570816;
        iArr14[36] = 16384;
        iArr14[37] = 8;
        iArr14[38] = 33554440;
        iArr14[39] = 33554688;
        iArr14[40] = 33554432;
        iArr14[41] = 16640;
        iArr14[42] = 33571080;
        iArr14[44] = 16648;
        iArr14[45] = 33554432;
        iArr14[46] = 256;
        iArr14[47] = 16392;
        iArr14[48] = 33554696;
        iArr14[49] = 256;
        iArr14[51] = 33571080;
        iArr14[52] = 33570824;
        iArr14[53] = 33571072;
        iArr14[54] = 264;
        iArr14[55] = 16384;
        iArr14[56] = 16640;
        iArr14[57] = 33570824;
        iArr14[58] = 33554688;
        iArr14[59] = 264;
        iArr14[60] = 8;
        iArr14[61] = 16648;
        iArr14[62] = 33570816;
        iArr14[63] = 33554440;
        int[] iArr15 = new int[64];
        iArr15[0] = 536870928;
        iArr15[1] = 524304;
        iArr15[3] = 537397248;
        iArr15[4] = 524304;
        iArr15[5] = 2048;
        iArr15[6] = 536872976;
        iArr15[7] = 524288;
        iArr15[8] = 2064;
        iArr15[9] = 537397264;
        iArr15[10] = 526336;
        iArr15[11] = 536870912;
        iArr15[12] = 536872960;
        iArr15[13] = 536870928;
        iArr15[14] = 537395200;
        iArr15[15] = 526352;
        iArr15[16] = 524288;
        iArr15[17] = 536872976;
        iArr15[18] = 537395216;
        iArr15[20] = 2048;
        iArr15[21] = 16;
        iArr15[22] = 537397248;
        iArr15[23] = 537395216;
        iArr15[24] = 537397264;
        iArr15[25] = 537395200;
        iArr15[26] = 536870912;
        iArr15[27] = 2064;
        iArr15[28] = 16;
        iArr15[29] = 526336;
        iArr15[30] = 526352;
        iArr15[31] = 536872960;
        iArr15[32] = 2064;
        iArr15[33] = 536870912;
        iArr15[34] = 536872960;
        iArr15[35] = 526352;
        iArr15[36] = 537397248;
        iArr15[37] = 524304;
        iArr15[39] = 536872960;
        iArr15[40] = 536870912;
        iArr15[41] = 2048;
        iArr15[42] = 537395216;
        iArr15[43] = 524288;
        iArr15[44] = 524304;
        iArr15[45] = 537397264;
        iArr15[46] = 526336;
        iArr15[47] = 16;
        iArr15[48] = 537397264;
        iArr15[49] = 526336;
        iArr15[50] = 524288;
        iArr15[51] = 536872976;
        iArr15[52] = 536870928;
        iArr15[53] = 537395200;
        iArr15[54] = 526352;
        iArr15[56] = 2048;
        iArr15[57] = 536870928;
        iArr15[58] = 536872976;
        iArr15[59] = 537397248;
        iArr15[60] = 537395200;
        iArr15[61] = 2064;
        iArr15[62] = 16;
        iArr15[63] = 537395216;
        int[] iArr16 = new int[64];
        iArr16[0] = 4096;
        iArr16[1] = 128;
        iArr16[2] = 4194432;
        iArr16[3] = 4194305;
        iArr16[4] = 4198529;
        iArr16[5] = 4097;
        iArr16[6] = 4224;
        iArr16[8] = 4194304;
        iArr16[9] = 4194433;
        iArr16[10] = 129;
        iArr16[11] = 4198400;
        iArr16[12] = 1;
        iArr16[13] = 4198528;
        iArr16[14] = 4198400;
        iArr16[15] = 129;
        iArr16[16] = 4194433;
        iArr16[17] = 4096;
        iArr16[18] = 4097;
        iArr16[19] = 4198529;
        iArr16[21] = 4194432;
        iArr16[22] = 4194305;
        iArr16[23] = 4224;
        iArr16[24] = 4198401;
        iArr16[25] = 4225;
        iArr16[26] = 4198528;
        iArr16[27] = 1;
        iArr16[28] = 4225;
        iArr16[29] = 4198401;
        iArr16[30] = 128;
        iArr16[31] = 4194304;
        iArr16[32] = 4225;
        iArr16[33] = 4198400;
        iArr16[34] = 4198401;
        iArr16[35] = 129;
        iArr16[36] = 4096;
        iArr16[37] = 128;
        iArr16[38] = 4194304;
        iArr16[39] = 4198401;
        iArr16[40] = 4194433;
        iArr16[41] = 4225;
        iArr16[42] = 4224;
        iArr16[44] = 128;
        iArr16[45] = 4194305;
        iArr16[46] = 1;
        iArr16[47] = 4194432;
        iArr16[49] = 4194433;
        iArr16[50] = 4194432;
        iArr16[51] = 4224;
        iArr16[52] = 129;
        iArr16[53] = 4096;
        iArr16[54] = 4198529;
        iArr16[55] = 4194304;
        iArr16[56] = 4198528;
        iArr16[57] = 1;
        iArr16[58] = 4097;
        iArr16[59] = 4198529;
        iArr16[60] = 4194305;
        iArr16[61] = 4198528;
        iArr16[62] = 4198400;
        iArr16[63] = 4097;
        int[] iArr17 = new int[64];
        iArr17[0] = 136314912;
        iArr17[1] = 136347648;
        iArr17[2] = 32800;
        iArr17[4] = 134250496;
        iArr17[5] = 2097184;
        iArr17[6] = 136314880;
        iArr17[7] = 136347680;
        iArr17[8] = 32;
        iArr17[9] = 134217728;
        iArr17[10] = 2129920;
        iArr17[11] = 32800;
        iArr17[12] = 2129952;
        iArr17[13] = 134250528;
        iArr17[14] = 134217760;
        iArr17[15] = 136314880;
        iArr17[16] = 32768;
        iArr17[17] = 2129952;
        iArr17[18] = 2097184;
        iArr17[19] = 134250496;
        iArr17[20] = 136347680;
        iArr17[21] = 134217760;
        iArr17[23] = 2129920;
        iArr17[24] = 134217728;
        iArr17[25] = 2097152;
        iArr17[26] = 134250528;
        iArr17[27] = 136314912;
        iArr17[28] = 2097152;
        iArr17[29] = 32768;
        iArr17[30] = 136347648;
        iArr17[31] = 32;
        iArr17[32] = 2097152;
        iArr17[33] = 32768;
        iArr17[34] = 134217760;
        iArr17[35] = 136347680;
        iArr17[36] = 32800;
        iArr17[37] = 134217728;
        iArr17[39] = 2129920;
        iArr17[40] = 136314912;
        iArr17[41] = 134250528;
        iArr17[42] = 134250496;
        iArr17[43] = 2097184;
        iArr17[44] = 136347648;
        iArr17[45] = 32;
        iArr17[46] = 2097184;
        iArr17[47] = 134250496;
        iArr17[48] = 136347680;
        iArr17[49] = 2097152;
        iArr17[50] = 136314880;
        iArr17[51] = 134217760;
        iArr17[52] = 2129920;
        iArr17[53] = 32800;
        iArr17[54] = 134250528;
        iArr17[55] = 136314880;
        iArr17[56] = 32;
        iArr17[57] = 136347648;
        iArr17[58] = 2129952;
        iArr17[60] = 134217728;
        iArr17[61] = 136314912;
        iArr17[62] = 32768;
        iArr17[63] = 2129952;
        SPTRANS = new int[][]{iArr10, iArr11, iArr12, iArr13, iArr14, iArr15, iArr16, iArr17};
    }

    public static String crypt(byte[] bArr) {
        return crypt(bArr, (String) null);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v6, resolved type: byte} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v7, resolved type: byte} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v8, resolved type: byte} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v9, resolved type: byte} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static java.lang.String crypt(byte[] r11, java.lang.String r12) {
        /*
            if (r12 != 0) goto L_0x002a
            java.util.Random r12 = new java.util.Random
            r12.<init>()
            char[] r0 = SALT_CHARS
            int r0 = r0.length
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            char[] r2 = SALT_CHARS
            int r3 = r12.nextInt(r0)
            char r2 = r2[r3]
            r1.append(r2)
            char[] r2 = SALT_CHARS
            int r12 = r12.nextInt(r0)
            char r12 = r2[r12]
            r1.append(r12)
            java.lang.String r12 = r1.toString()
            goto L_0x0032
        L_0x002a:
            java.lang.String r0 = "^[./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]{2,}$"
            boolean r0 = r12.matches(r0)
            if (r0 == 0) goto L_0x00c1
        L_0x0032:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            java.lang.String r1 = "             "
            r0.<init>(r1)
            r1 = 0
            char r2 = r12.charAt(r1)
            r3 = 1
            char r12 = r12.charAt(r3)
            r0.setCharAt(r1, r2)
            r0.setCharAt(r3, r12)
            int[] r4 = CON_SALT
            r2 = r4[r2]
            int[] r4 = CON_SALT
            r12 = r4[r12]
            r4 = 4
            int r5 = r12 << 4
            r6 = 8
            byte[] r7 = new byte[r6]
            r12 = 0
        L_0x0059:
            int r8 = r7.length
            if (r12 < r8) goto L_0x00bc
            r12 = 0
        L_0x005d:
            int r8 = r7.length
            if (r12 >= r8) goto L_0x006d
            int r8 = r11.length
            if (r12 < r8) goto L_0x0064
            goto L_0x006d
        L_0x0064:
            byte r8 = r11[r12]
            int r8 = r8 << r3
            byte r8 = (byte) r8
            r7[r12] = r8
            int r12 = r12 + 1
            goto L_0x005d
        L_0x006d:
            int[] r11 = desSetKey(r7)
            int[] r11 = body(r11, r2, r5)
            r12 = 9
            byte[] r8 = new byte[r12]
            r12 = r11[r1]
            intToFourBytes(r12, r8, r1)
            r11 = r11[r3]
            intToFourBytes(r11, r8, r4)
            r8[r6] = r1
            r11 = 2
            r9 = 128(0x80, float:1.794E-43)
            r11 = 0
            r12 = 128(0x80, float:1.794E-43)
            r10 = 2
        L_0x008c:
            r2 = 13
            if (r10 < r2) goto L_0x0095
            java.lang.String r11 = r0.toString()
            return r11
        L_0x0095:
            r2 = r11
            r4 = r12
            r11 = 0
            r12 = 0
        L_0x0099:
            r5 = 6
            if (r11 < r5) goto L_0x00a1
            int r10 = r10 + 1
            r11 = r2
            r12 = r4
            goto L_0x008c
        L_0x00a1:
            int r12 = r12 << r3
            byte r5 = r8[r2]
            r5 = r5 & r4
            if (r5 == 0) goto L_0x00a9
            r12 = r12 | 1
        L_0x00a9:
            int r4 = r4 >>> 1
            if (r4 != 0) goto L_0x00b1
            int r2 = r2 + 1
            r4 = 128(0x80, float:1.794E-43)
        L_0x00b1:
            int[] r5 = COV2CHAR
            r5 = r5[r12]
            char r5 = (char) r5
            r0.setCharAt(r10, r5)
            int r11 = r11 + 1
            goto L_0x0099
        L_0x00bc:
            r7[r12] = r1
            int r12 = r12 + 1
            goto L_0x0059
        L_0x00c1:
            java.lang.IllegalArgumentException r11 = new java.lang.IllegalArgumentException
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            java.lang.String r1 = "Invalid salt value: "
            r0.<init>(r1)
            r0.append(r12)
            java.lang.String r12 = r0.toString()
            r11.<init>(r12)
            throw r11
        */
        throw new UnsupportedOperationException("Method not decompiled: org.apaches.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String):java.lang.String");
    }

    public static String crypt(String str) {
        return crypt(str.getBytes(Charsets.UTF_8));
    }

    public static String crypt(String str, String str2) {
        return crypt(str.getBytes(Charsets.UTF_8), str2);
    }

    private static int[] body(int[] iArr, int i, int i2) {
        int i3 = 0;
        int i4 = 0;
        int i5 = 0;
        while (i3 < 25) {
            int i6 = i5;
            i5 = i4;
            for (int i7 = 0; i7 < 32; i7 += 4) {
                int i8 = i5;
                i6 = dEncrypt(i6, i8, i7, i, i2, iArr);
                i5 = dEncrypt(i8, i6, i7 + 2, i, i2, iArr);
            }
            i3++;
            i4 = i6;
        }
        int[] iArr2 = new int[2];
        permOp((i5 >>> 1) | (i5 << 31), (i4 >>> 1) | (i4 << 31), 1, 1431655765, iArr2);
        permOp(iArr2[1], iArr2[0], 8, 16711935, iArr2);
        permOp(iArr2[1], iArr2[0], 2, 858993459, iArr2);
        permOp(iArr2[1], iArr2[0], 16, 65535, iArr2);
        permOp(iArr2[1], iArr2[0], 4, 252645135, iArr2);
        return new int[]{iArr2[1], iArr2[0]};
    }

    private static int dEncrypt(int i, int i2, int i3, int i4, int i5, int[] iArr) {
        int i6 = (i2 >>> 16) ^ i2;
        int i7 = i4 & i6;
        int i8 = i5 & i6;
        int i9 = ((i7 ^ (i7 << 16)) ^ i2) ^ iArr[i3];
        int i10 = (i2 ^ (i8 ^ (i8 << 16))) ^ iArr[i3 + 1];
        int i11 = (i10 << 28) | (i10 >>> 4);
        return i ^ (((((SPTRANS[7][(i11 >>> 24) & 63] | ((SPTRANS[1][i11 & 63] | SPTRANS[3][(i11 >>> 8) & 63]) | SPTRANS[5][(i11 >>> 16) & 63])) | SPTRANS[0][i9 & 63]) | SPTRANS[2][(i9 >>> 8) & 63]) | SPTRANS[4][(i9 >>> 16) & 63]) | SPTRANS[6][(i9 >>> 24) & 63]);
    }

    private static int[] desSetKey(byte[] bArr) {
        int i;
        int i2;
        int i3;
        byte[] bArr2 = bArr;
        int[] iArr = new int[32];
        int[] iArr2 = new int[2];
        permOp(fourBytesToInt(bArr2, 4), fourBytesToInt(bArr2, 0), 4, 252645135, iArr2);
        int i4 = iArr2[0];
        permOp(hPermOp(i4, -2, -859045888), hPermOp(iArr2[1], -2, -859045888), 1, 1431655765, iArr2);
        permOp(iArr2[1], iArr2[0], 8, 16711935, iArr2);
        permOp(iArr2[1], iArr2[0], 1, 1431655765, iArr2);
        int i5 = iArr2[0];
        int i6 = iArr2[1];
        int i7 = i6 & MtkHintOp.MTK_HINT_ALWAYS_ENABLE;
        int i8 = ((i5 & 16711680) >>> 16) | ((i5 & 255) << 16) | (65280 & i5) | ((-268435456 & i6) >>> 4);
        int i9 = 0;
        int i10 = 0;
        while (i9 < 16) {
            if (SHIFT2[i9]) {
                i3 = (i7 << 26) | (i7 >>> 2);
                i = i8 >>> 2;
                i2 = i8 << 26;
            } else {
                i3 = (i7 << 27) | (i7 >>> 1);
                i = i8 >>> 1;
                i2 = i8 << 27;
            }
            i7 = i3 & MtkHintOp.MTK_HINT_ALWAYS_ENABLE;
            i8 = (i2 | i) & MtkHintOp.MTK_HINT_ALWAYS_ENABLE;
            int i11 = SKB[0][i7 & 63] | SKB[1][((i7 >>> 6) & 3) | ((i7 >>> 7) & 60)] | SKB[2][((i7 >>> 13) & 15) | ((i7 >>> 14) & 48)] | SKB[3][((i7 >>> 20) & 1) | ((i7 >>> 21) & 6) | ((i7 >>> 22) & 56)];
            int i12 = SKB[4][i8 & 63] | SKB[5][(3 & (i8 >>> 7)) | ((i8 >>> 8) & 60)] | SKB[6][(i8 >>> 15) & 63] | SKB[7][((i8 >>> 21) & 15) | ((i8 >>> 22) & 48)];
            int i13 = i10 + 1;
            iArr[i10] = (i12 << 16) | (65535 & i11);
            int i14 = (i11 >>> 16) | (-65536 & i12);
            iArr[i13] = (i14 >>> 28) | (i14 << 4);
            i9++;
            i10 = i13 + 1;
        }
        return iArr;
    }

    private static int fourBytesToInt(byte[] bArr, int i) {
        int i2 = i + 1;
        int i3 = i2 + 1;
        int byteToUnsigned = byteToUnsigned(bArr[i]) | (byteToUnsigned(bArr[i2]) << 8);
        return (byteToUnsigned(bArr[i3 + 1]) << 24) | byteToUnsigned | (byteToUnsigned(bArr[i3]) << 16);
    }

    private static void intToFourBytes(int i, byte[] bArr, int i2) {
        int i3 = i2 + 1;
        bArr[i2] = (byte) (i & 255);
        int i4 = i3 + 1;
        bArr[i3] = (byte) ((i >>> 8) & 255);
        bArr[i4] = (byte) ((i >>> 16) & 255);
        bArr[i4 + 1] = (byte) ((i >>> 24) & 255);
    }

    private static void permOp(int i, int i2, int i3, int i4, int[] iArr) {
        int i5 = i4 & ((i >>> i3) ^ i2);
        iArr[0] = i ^ (i5 << i3);
        iArr[1] = i2 ^ i5;
    }
}
