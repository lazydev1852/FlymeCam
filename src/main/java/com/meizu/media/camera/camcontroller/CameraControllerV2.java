package com.meizu.media.camera.camcontroller;

import android.content.Intent;
import android.graphics.Matrix;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.SurfaceTexture;
import android.hardware.camera2.CameraAccessException;
import android.hardware.camera2.CameraCaptureSession;
import android.hardware.camera2.CameraCharacteristics;
import android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession;
import android.hardware.camera2.CameraDevice;
import android.hardware.camera2.CameraManager;
import android.hardware.camera2.CaptureFailure;
import android.hardware.camera2.CaptureRequest;
import android.hardware.camera2.CaptureResult;
import android.hardware.camera2.TotalCaptureResult;
import android.hardware.camera2.params.Face;
import android.hardware.camera2.params.InputConfiguration;
import android.hardware.camera2.params.MeteringRectangle;
import android.hardware.camera2.params.OutputConfiguration;
import android.hardware.camera2.params.StreamConfigurationMap;
import android.location.Location;
import android.media.Image;
import android.media.ImageReader;
import android.net.Uri;
import android.os.Build;
import android.os.Handler;
import android.os.HandlerThread;
import android.util.Log;
import android.util.Range;
import android.util.Rational;
import android.util.Size;
import android.view.Surface;
import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.core.content.ContextCompat;
import androidx.core.p005os.EnvironmentCompat;
import androidx.exifinterface.media.ExifInterface;
import com.android.p012ex.camera2.portability.CameraCapabilities;
import com.android.p012ex.camera2.portability.CameraCapabilitiesFactory;
import com.baidu.p020ar.arplay.core.message.ARPMessageType;
import com.baidu.p020ar.msghandler.ComponentMessageType;
import com.baidu.p020ar.msghandler.DownloadMsgHandler;
import com.baidu.p020ar.util.SystemInfoUtil;
import com.mediatek.view.impl.ViewDebugManagerImpl;
import com.meizu.camera.MeizuCamera;
import com.meizu.camera.effectlib.effects.views.EffectRenderContext;
import com.meizu.cloud.pushsdk.platform.pushstrategy.Strategy;
import com.meizu.media.camera.CamIntentTask;
import com.meizu.media.camera.CameraOptTask;
import com.meizu.media.camera.ComboPreferences;
import com.meizu.media.camera.MzCamParamsManager;
import com.meizu.media.camera.Storage;
import com.meizu.media.camera.camcontroller.CameraController;
import com.meizu.media.camera.camcontroller.CameraControllerV2;
import com.meizu.media.camera.mode.CameraModeType;
import com.meizu.media.camera.p064a.FaceBeautyData;
import com.meizu.media.camera.p064a.ParamData;
import com.meizu.media.camera.p064a.XmpMetaData;
import com.meizu.media.camera.portrait.ASVLOffScreen;
import com.meizu.media.camera.portrait.BokehFace;
import com.meizu.media.camera.portrait.CameraImageParam;
import com.meizu.media.camera.portrait.DualExif;
import com.meizu.media.camera.portrait.DualcamMeta;
import com.meizu.media.camera.portrait.FractionNum;
import com.meizu.media.camera.portrait.GPSInfo;
import com.meizu.media.camera.stereobokeh.TofBokehUtil;
import com.meizu.media.camera.util.AsyncTaskEx;
import com.meizu.media.camera.util.BurstData;
import com.meizu.media.camera.util.ByteUtil;
import com.meizu.media.camera.util.C2634am;
import com.meizu.media.camera.util.C2644av;
import com.meizu.media.camera.util.C2649i;
import com.meizu.media.camera.util.CameraUtil;
import com.meizu.media.camera.util.Contants;
import com.meizu.media.camera.util.DeviceHelper;
import com.meizu.media.camera.util.DeviceUtil;
import com.meizu.media.camera.util.ImageReaderHolder;
import com.meizu.media.camera.util.LogUtil;
import com.meizu.media.camera.util.TimingLoggerUtil;
import com.meizu.media.cameraAlgorithm.yuv.YuvUtil;
import com.meizu.savior.ChangeQuickRedirect;
import com.meizu.savior.PatchProxy;
import com.meizu.savior.PatchProxyResult;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import java.util.UUID;
import java.util.concurrent.Executor;
import org.greenrobot.eventbus.EventBus;

@RequiresApi(23)
public final class CameraControllerV2 extends CameraController<CameraProxyV2> {

    /* renamed from: A */
    private static CameraController f8298A;
    /* access modifiers changed from: private */

    /* renamed from: aX */
    public static byte[] f8299aX;
    /* access modifiers changed from: private */

    /* renamed from: aY */
    public static byte[] f8300aY = null;
    /* access modifiers changed from: private */

    /* renamed from: aZ */
    public static byte[] f8301aZ = null;
    /* access modifiers changed from: private */

    /* renamed from: ba */
    public static int[] f8302ba = null;

    /* renamed from: o */
    public static ChangeQuickRedirect f8303o;

    /* renamed from: p */
    public static final HashMap<String, Long> f8304p = new HashMap<>();
    /* access modifiers changed from: private */

    /* renamed from: s */
    public static final LogUtil.C2630a f8305s = new LogUtil.C2630a("CameraCtlV2");

    /* renamed from: t */
    private static final String[] f8306t = {"auto", "50", "64", "80", "100", "125", "160", "200", "250", "320", "400", "500", "640", "800", "1000", "1250", "1600", "2000", "2500", "3200", "4000", "5000", "6400"};

    /* renamed from: u */
    private static final String[] f8307u = {"0", "125", "166.666", "200", "250", "312.5", "400", "500", "625", "769.23", "1000", "1250", "1666.666", "2000", "2500", "3333.333", "4000", "5000", "6250", "8000", "10000", "12500", "16666.666", Strategy.DEVICE_ERROR_CODE, "25000", "33333.333", "40000", "50000", "66666.666", "83333.333", "100000", "125000", "166666.666", "200000", "250000", "300000", "400000", "500000", "600000", "800000", "1000000", "1200000", "1600000", "2000000", "2500000", "3000000", "4000000", "5000000", "6000000", "8000000", "10000000", "13000000", "15000000", "20000000", "25000000", "30000000", "35000000", "40000000", "45000000", "50000000", "55000000", "60000000"};

    /* renamed from: v */
    private static final WhiteBalanceMode[] f8308v = {WhiteBalanceMode.WHITE_BALANCE_AUTO, WhiteBalanceMode.WHITE_BALANCE_INCANDESCENT, WhiteBalanceMode.WHITE_BALANCE_FLUORESCENT, WhiteBalanceMode.WHITE_BALANCE_DAYLIGHT, WhiteBalanceMode.WHITE_BALANCE_CLOUDY_DAYLIGHT};

    /* renamed from: y */
    private static final Integer f8309y = 60;

    /* renamed from: z */
    private static final MeteringRectangle[] f8310z = {new MeteringRectangle(0, 0, 0, 0, 0)};
    /* access modifiers changed from: private */

    /* renamed from: B */
    public CameraProxyV2 f8311B;
    /* access modifiers changed from: private */

    /* renamed from: C */
    public CameraProxyV2 f8312C;
    /* access modifiers changed from: private */

    /* renamed from: D */
    public CameraManager f8313D;
    /* access modifiers changed from: private */

    /* renamed from: E */
    public CameraCharacteristics f8314E;
    /* access modifiers changed from: private */

    /* renamed from: F */
    public CameraLock f8315F = new CameraLock(1);
    /* access modifiers changed from: private */

    /* renamed from: G */
    public ImageReader f8316G;
    /* access modifiers changed from: private */

    /* renamed from: H */
    public ImageReader f8317H;
    /* access modifiers changed from: private */

    /* renamed from: I */
    public ImageReader f8318I;
    /* access modifiers changed from: private */

    /* renamed from: J */
    public Surface f8319J;
    /* access modifiers changed from: private */

    /* renamed from: K */
    public Surface f8320K;
    /* access modifiers changed from: private */

    /* renamed from: L */
    public boolean f8321L;
    /* access modifiers changed from: private */

    /* renamed from: M */
    public boolean f8322M;
    /* access modifiers changed from: private */

    /* renamed from: N */
    public CaptureRequest.Builder f8323N;
    /* access modifiers changed from: private */

    /* renamed from: O */
    public CaptureRequest f8324O;
    /* access modifiers changed from: private */

    /* renamed from: P */
    public CameraCaptureSession f8325P;
    /* access modifiers changed from: private */

    /* renamed from: Q */
    public CaptureRequest.Builder f8326Q;
    /* access modifiers changed from: private */

    /* renamed from: R */
    public CaptureRequest f8327R;
    /* access modifiers changed from: private */

    /* renamed from: S */
    public CameraCaptureSession f8328S;

    /* renamed from: T */
    private CameraCapabilities f8329T;
    /* access modifiers changed from: private */

    /* renamed from: U */
    public int f8330U = 100;

    /* renamed from: V */
    private int f8331V = -1;
    /* access modifiers changed from: private */

    /* renamed from: W */
    public Rect f8332W;
    /* access modifiers changed from: private */

    /* renamed from: X */
    public int f8333X;

    /* renamed from: Y */
    private MeteringRectangle[] f8334Y;

    /* renamed from: Z */
    private MeteringRectangle[] f8335Z;
    /* access modifiers changed from: private */

    /* renamed from: aA */
    public boolean f8336aA;
    /* access modifiers changed from: private */

    /* renamed from: aB */
    public CameraController.C1877d f8337aB;
    /* access modifiers changed from: private */

    /* renamed from: aC */
    public CameraController.C1876c f8338aC;
    /* access modifiers changed from: private */

    /* renamed from: aD */
    public MeizuCamera.MeizuSceneModeDetectionCallback f8339aD;
    /* access modifiers changed from: private */

    /* renamed from: aE */
    public MeizuCamera.MeizuMetaDataCallback f8340aE;
    /* access modifiers changed from: private */

    /* renamed from: aF */
    public CameraController.FlashMode f8341aF;
    /* access modifiers changed from: private */

    /* renamed from: aG */
    public CameraController.HdrMode f8342aG = CameraController.HdrMode.OFF;

    /* renamed from: aH */
    private int f8343aH = -2;
    /* access modifiers changed from: private */

    /* renamed from: aI */
    public int f8344aI = 4;
    /* access modifiers changed from: private */

    /* renamed from: aJ */
    public boolean f8345aJ = false;
    /* access modifiers changed from: private */

    /* renamed from: aK */
    public boolean f8346aK = false;

    /* renamed from: aL */
    private HashMap<String, CaptureRequest.Key> f8347aL;

    /* renamed from: aM */
    private HashMap<String, CaptureResult.Key> f8348aM;

    /* renamed from: aN */
    private HashMap<String, CameraCharacteristics.Key> f8349aN;

    /* renamed from: aO */
    private HashMap<Integer, List<Point>> f8350aO = new HashMap<>();

    /* renamed from: aP */
    private HashMap<Integer, List<Point>> f8351aP = new HashMap<>();

    /* renamed from: aQ */
    private List<HashMap<Integer, Size>> f8352aQ;
    /* access modifiers changed from: private */

    /* renamed from: aR */
    public ComboPreferences f8353aR;
    /* access modifiers changed from: private */

    /* renamed from: aS */
    public int f8354aS;

    /* renamed from: aT */
    private int f8355aT;
    /* access modifiers changed from: private */

    /* renamed from: aU */
    public byte[] f8356aU;
    /* access modifiers changed from: private */

    /* renamed from: aV */
    public byte[] f8357aV;
    /* access modifiers changed from: private */

    /* renamed from: aW */
    public byte[] f8358aW;

    /* renamed from: aa */
    private boolean f8359aa;

    /* renamed from: ab */
    private boolean f8360ab;

    /* renamed from: ac */
    private boolean f8361ac;

    /* renamed from: ad */
    private boolean f8362ad;

    /* renamed from: ae */
    private boolean f8363ae;

    /* renamed from: af */
    private boolean f8364af;

    /* renamed from: ag */
    private Boolean f8365ag;

    /* renamed from: ah */
    private int[] f8366ah;

    /* renamed from: ai */
    private Float f8367ai;

    /* renamed from: aj */
    private boolean f8368aj;
    /* access modifiers changed from: private */

    /* renamed from: ak */
    public boolean f8369ak;
    /* access modifiers changed from: private */

    /* renamed from: al */
    public boolean f8370al;
    /* access modifiers changed from: private */

    /* renamed from: am */
    public boolean f8371am;
    /* access modifiers changed from: private */

    /* renamed from: an */
    public boolean f8372an;

    /* renamed from: ao */
    private boolean f8373ao;
    /* access modifiers changed from: private */

    /* renamed from: ap */
    public boolean f8374ap;

    /* renamed from: aq */
    private String f8375aq;
    /* access modifiers changed from: private */

    /* renamed from: ar */
    public int f8376ar;
    /* access modifiers changed from: private */

    /* renamed from: as */
    public int f8377as;
    /* access modifiers changed from: private */

    /* renamed from: at */
    public float f8378at;
    /* access modifiers changed from: private */

    /* renamed from: au */
    public boolean f8379au;
    /* access modifiers changed from: private */

    /* renamed from: av */
    public boolean f8380av;
    /* access modifiers changed from: private */

    /* renamed from: aw */
    public String f8381aw;
    /* access modifiers changed from: private */

    /* renamed from: ax */
    public String f8382ax;
    /* access modifiers changed from: private */

    /* renamed from: ay */
    public Surface f8383ay;
    /* access modifiers changed from: private */

    /* renamed from: az */
    public Surface f8384az;
    /* access modifiers changed from: private */

    /* renamed from: bb */
    public volatile byte[] f8385bb;
    /* access modifiers changed from: private */

    /* renamed from: bc */
    public byte[] f8386bc;
    /* access modifiers changed from: private */

    /* renamed from: bd */
    public boolean f8387bd = false;
    /* access modifiers changed from: private */

    /* renamed from: be */
    public boolean f8388be = true;
    /* access modifiers changed from: private */

    /* renamed from: bf */
    public int f8389bf;

    /* renamed from: bg */
    private int f8390bg;
    /* access modifiers changed from: private */

    /* renamed from: bh */
    public Rect f8391bh;
    /* access modifiers changed from: private */

    /* renamed from: bi */
    public Rect f8392bi;
    /* access modifiers changed from: private */

    /* renamed from: bj */
    public long f8393bj;
    /* access modifiers changed from: private */

    /* renamed from: bk */
    public int f8394bk = -1;
    /* access modifiers changed from: private */

    /* renamed from: bl */
    public DualcamMeta f8395bl;
    /* access modifiers changed from: private */

    /* renamed from: bm */
    public CameraController.C1875b f8396bm;

    /* renamed from: bn */
    private boolean f8397bn = false;

    /* renamed from: bo */
    private RectF f8398bo = new RectF();
    /* access modifiers changed from: private */

    /* renamed from: bp */
    public boolean f8399bp = true;

    /* renamed from: bq */
    private final ImageReader.OnImageAvailableListener f8400bq = new ImageReader.OnImageAvailableListener() {

        /* renamed from: a */
        public static ChangeQuickRedirect f8421a;

        public void onImageAvailable(ImageReader imageReader) {
            if (!PatchProxy.proxy(new Object[]{imageReader}, this, f8421a, false, 3132, new Class[]{ImageReader.class}, Void.TYPE).isSupported) {
                LogUtil.m15942a(CameraControllerV2.f8305s, "onImageAvailable");
            }
        }
    };
    /* access modifiers changed from: private */

    /* renamed from: br */
    public C1929d f8401br = new C1929d();
    /* access modifiers changed from: private */

    /* renamed from: bs */
    public C1928c f8402bs;
    /* access modifiers changed from: private */

    /* renamed from: bt */
    public C1928c f8403bt;

    /* renamed from: bu */
    private int f8404bu = -1;
    /* access modifiers changed from: private */

    /* renamed from: bv */
    public C1932e f8405bv;

    /* renamed from: q */
    protected CameraController<CameraProxyV2>.e f8406q;

    /* renamed from: r */
    protected CameraController<CameraProxyV2>.e f8407r;
    /* access modifiers changed from: private */

    /* renamed from: w */
    public int f8408w;
    /* access modifiers changed from: private */

    /* renamed from: x */
    public TotalCaptureResult f8409x;

    /* renamed from: a */
    private int m9025a(int i, boolean z) {
        if (z) {
            if (i == 0) {
                return 1;
            }
            if (i == 90) {
                return 2;
            }
            if (i != 180) {
                return i != 270 ? 1 : 3;
            }
            return 4;
        } else if (i == 0) {
            return 0;
        } else {
            if (i == 90) {
                return 1;
            }
            if (i != 180) {
                return i != 270 ? 0 : 3;
            }
            return 2;
        }
    }

    /* renamed from: a */
    public void mo19454a(SurfaceTexture surfaceTexture) {
    }

    /* renamed from: a */
    public void mo19455a(Location location, boolean... zArr) {
    }

    /* renamed from: a */
    public void mo19456a(Handler handler, CameraController.C1874a aVar) {
    }

    /* renamed from: a */
    public void mo19460a(MeizuCamera.MeizuModuleCoveredDetectionCallback meizuModuleCoveredDetectionCallback) {
    }

    /* renamed from: a */
    public void mo19462a(MeizuCamera.MeizuSecureDetectionCallback meizuSecureDetectionCallback) {
    }

    /* renamed from: a */
    public void mo19465a(CameraController.BurstCaptureState burstCaptureState) {
    }

    /* renamed from: a */
    public void mo19475a(boolean z) {
    }

    /* renamed from: a */
    public void mo19479a(FileDescriptor[] fileDescriptorArr) {
    }

    /* renamed from: b */
    public void mo19488b(int i) {
    }

    /* renamed from: b */
    public void mo19489b(int i, int i2, boolean... zArr) {
    }

    /* renamed from: b */
    public void mo19490b(int i, boolean... zArr) {
    }

    /* renamed from: d */
    public void mo19506d(int i, boolean... zArr) {
    }

    /* renamed from: t */
    public int mo19537t() {
        return 0;
    }

    /* renamed from: ai */
    static /* synthetic */ int m9114ai(CameraControllerV2 cameraControllerV2) {
        int i = cameraControllerV2.f8394bk;
        cameraControllerV2.f8394bk = i + 1;
        return i;
    }

    static {
        f8304p.put("auto", 0L);
        f8304p.put("deblur", 1L);
        f8304p.put("100", 2L);
        f8304p.put("200", 3L);
        f8304p.put("400", 4L);
        f8304p.put("800", 5L);
        f8304p.put("1600", 6L);
        f8304p.put("3200", 7L);
        f8304p.put("absolute", 8L);
    }

    enum WhiteBalanceMode {
        WHITE_BALANCE_AUTO("auto", 1),
        WHITE_BALANCE_INCANDESCENT("incandescent", 2),
        WHITE_BALANCE_FLUORESCENT("fluorescent", 4),
        WHITE_BALANCE_DAYLIGHT("daylight", 5),
        WHITE_BALANCE_CLOUDY_DAYLIGHT("cloudy-daylight", 6);
        
        public static ChangeQuickRedirect changeQuickRedirect;
        private int mModeId;
        private String mModeName;

        public String getModeName() {
            return this.mModeName;
        }

        public int getModeId() {
            return this.mModeId;
        }

        private WhiteBalanceMode(String str, int i) {
            this.mModeName = str;
            this.mModeId = i;
        }
    }

    private CameraControllerV2() {
        this.f8278b = CameraController.CameraApi.API2;
        HandlerThread handlerThread = new HandlerThread("MzCameraMain-Thread");
        handlerThread.start();
        this.f8406q = new CameraController.C1878e(handlerThread.getLooper());
        HandlerThread handlerThread2 = new HandlerThread("MzCameraTof-Thread");
        handlerThread2.start();
        this.f8407r = new CameraController.C1878e(handlerThread2.getLooper());
    }

    /* renamed from: a */
    public Point mo19449a() {
        PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 2963, new Class[0], Point.class);
        return proxy.isSupported ? (Point) proxy.result : new Point(this.f8316G.getWidth(), this.f8316G.getHeight());
    }

    /* JADX WARNING: Removed duplicated region for block: B:102:0x01ca  */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.lang.String mo19451a(int r12, boolean... r13) throws com.meizu.media.camera.camcontroller.CameraController.C1881g {
        /*
            r11 = this;
            r0 = 2
            java.lang.Object[] r1 = new java.lang.Object[r0]
            java.lang.Integer r2 = new java.lang.Integer
            r2.<init>(r12)
            r8 = 0
            r1[r8] = r2
            r9 = 1
            r1[r9] = r13
            com.meizu.savior.ChangeQuickRedirect r3 = f8303o
            java.lang.Class[] r6 = new java.lang.Class[r0]
            java.lang.Class r0 = java.lang.Integer.TYPE
            r6[r8] = r0
            java.lang.Class<boolean[]> r0 = boolean[].class
            r6[r9] = r0
            java.lang.Class<java.lang.String> r7 = java.lang.String.class
            r4 = 0
            r5 = 2964(0xb94, float:4.153E-42)
            r2 = r11
            com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
            boolean r1 = r0.isSupported
            if (r1 == 0) goto L_0x002d
            java.lang.Object r12 = r0.result
            java.lang.String r12 = (java.lang.String) r12
            return r12
        L_0x002d:
            com.meizu.media.camera.util.ac$a r0 = f8305s
            java.lang.String r1 = "getSupportValues start"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
            android.hardware.camera2.CameraManager r0 = r11.f8313D
            if (r0 == 0) goto L_0x01ea
            com.meizu.media.camera.camcontroller.f r0 = r11.f8311B
            if (r0 == 0) goto L_0x01ea
            android.hardware.camera2.CameraCharacteristics r0 = r11.f8314E
            if (r0 == 0) goto L_0x01ea
            if (r13 == 0) goto L_0x004d
            if (r13 == 0) goto L_0x004c
            int r0 = r13.length
            if (r0 <= 0) goto L_0x004c
            boolean r13 = r13[r8]
            if (r13 == 0) goto L_0x004c
            goto L_0x004d
        L_0x004c:
            r9 = 0
        L_0x004d:
            r13 = 0
            if (r9 == 0) goto L_0x005e
            com.meizu.media.camera.camcontroller.c r0 = r11.f8315F     // Catch:{ InterruptedException -> 0x005b }
            java.lang.String r1 = "getSupportValues"
            r0.mo19728a(r1)     // Catch:{ InterruptedException -> 0x005b }
            goto L_0x005e
        L_0x0058:
            r12 = move-exception
            goto L_0x01d9
        L_0x005b:
            r12 = move-exception
            goto L_0x01c5
        L_0x005e:
            android.hardware.camera2.CameraManager r0 = r11.f8313D     // Catch:{ InterruptedException -> 0x005b }
            if (r0 == 0) goto L_0x01bf
            com.meizu.media.camera.camcontroller.f r0 = r11.f8311B     // Catch:{ InterruptedException -> 0x005b }
            if (r0 == 0) goto L_0x01bf
            android.hardware.camera2.CameraCharacteristics r0 = r11.f8314E     // Catch:{ InterruptedException -> 0x005b }
            if (r0 == 0) goto L_0x01bf
            switch(r12) {
                case 1: goto L_0x014b;
                case 2: goto L_0x00eb;
                case 3: goto L_0x006d;
                case 4: goto L_0x006d;
                case 5: goto L_0x0089;
                case 6: goto L_0x0078;
                default: goto L_0x006d;
            }
        L_0x006d:
            if (r9 == 0) goto L_0x01b7
            com.meizu.media.camera.camcontroller.c r12 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r12.mo19729b(r0)
            goto L_0x01b7
        L_0x0078:
            if (r9 == 0) goto L_0x0081
            com.meizu.media.camera.camcontroller.c r12 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r12.mo19729b(r0)
        L_0x0081:
            com.meizu.media.camera.util.ac$a r12 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r12, (java.lang.String) r0)
            return r13
        L_0x0089:
            android.hardware.camera2.CameraCharacteristics r12 = r11.f8314E     // Catch:{ InterruptedException -> 0x005b }
            android.hardware.camera2.CameraCharacteristics$Key r0 = android.hardware.camera2.CameraCharacteristics.CONTROL_AWB_AVAILABLE_MODES     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Object r12 = r12.get(r0)     // Catch:{ InterruptedException -> 0x005b }
            int[] r12 = (int[]) r12     // Catch:{ InterruptedException -> 0x005b }
            if (r12 != 0) goto L_0x00a6
            if (r9 == 0) goto L_0x009e
            com.meizu.media.camera.camcontroller.c r12 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r12.mo19729b(r0)
        L_0x009e:
            com.meizu.media.camera.util.ac$a r12 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r12, (java.lang.String) r0)
            return r13
        L_0x00a6:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ InterruptedException -> 0x005b }
            com.meizu.media.camera.camcontroller.CameraControllerV2$WhiteBalanceMode[] r1 = f8308v     // Catch:{ InterruptedException -> 0x005b }
            int r1 = r1.length     // Catch:{ InterruptedException -> 0x005b }
            int r1 = r1 * 3
            r0.<init>(r1)     // Catch:{ InterruptedException -> 0x005b }
            com.meizu.media.camera.camcontroller.CameraControllerV2$WhiteBalanceMode[] r1 = f8308v     // Catch:{ InterruptedException -> 0x005b }
            int r2 = r1.length     // Catch:{ InterruptedException -> 0x005b }
            r3 = 0
        L_0x00b4:
            if (r3 >= r2) goto L_0x00d6
            r4 = r1[r3]     // Catch:{ InterruptedException -> 0x005b }
            int r5 = r12.length     // Catch:{ InterruptedException -> 0x005b }
            r6 = 0
        L_0x00ba:
            if (r6 >= r5) goto L_0x00d3
            r7 = r12[r6]     // Catch:{ InterruptedException -> 0x005b }
            int r10 = r4.getModeId()     // Catch:{ InterruptedException -> 0x005b }
            if (r10 != r7) goto L_0x00d0
            java.lang.String r7 = r4.getModeName()     // Catch:{ InterruptedException -> 0x005b }
            r0.append(r7)     // Catch:{ InterruptedException -> 0x005b }
            java.lang.String r7 = ","
            r0.append(r7)     // Catch:{ InterruptedException -> 0x005b }
        L_0x00d0:
            int r6 = r6 + 1
            goto L_0x00ba
        L_0x00d3:
            int r3 = r3 + 1
            goto L_0x00b4
        L_0x00d6:
            java.lang.String r12 = r0.toString()     // Catch:{ InterruptedException -> 0x005b }
            if (r9 == 0) goto L_0x00e3
            com.meizu.media.camera.camcontroller.c r13 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r13.mo19729b(r0)
        L_0x00e3:
            com.meizu.media.camera.util.ac$a r13 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r13, (java.lang.String) r0)
            return r12
        L_0x00eb:
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ InterruptedException -> 0x005b }
            java.lang.String[] r0 = f8306t     // Catch:{ InterruptedException -> 0x005b }
            int r0 = r0.length     // Catch:{ InterruptedException -> 0x005b }
            int r0 = r0 * 3
            r12.<init>(r0)     // Catch:{ InterruptedException -> 0x005b }
            android.hardware.camera2.CameraCharacteristics r0 = r11.f8314E     // Catch:{ InterruptedException -> 0x005b }
            android.hardware.camera2.CameraCharacteristics$Key r1 = android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_SENSITIVITY_RANGE     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Object r0 = r0.get(r1)     // Catch:{ InterruptedException -> 0x005b }
            android.util.Range r0 = (android.util.Range) r0     // Catch:{ InterruptedException -> 0x005b }
        L_0x00ff:
            java.lang.String[] r1 = f8306t     // Catch:{ InterruptedException -> 0x005b }
            int r1 = r1.length     // Catch:{ InterruptedException -> 0x005b }
            if (r8 >= r1) goto L_0x0136
            if (r8 <= 0) goto L_0x0127
            java.lang.String[] r1 = f8306t     // Catch:{ InterruptedException -> 0x005b }
            r1 = r1[r8]     // Catch:{ InterruptedException -> 0x005b }
            int r1 = java.lang.Integer.parseInt(r1)     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Comparable r2 = r0.getLower()     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ InterruptedException -> 0x005b }
            int r2 = r2.intValue()     // Catch:{ InterruptedException -> 0x005b }
            if (r1 < r2) goto L_0x0133
            java.lang.Comparable r2 = r0.getUpper()     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ InterruptedException -> 0x005b }
            int r2 = r2.intValue()     // Catch:{ InterruptedException -> 0x005b }
            if (r1 <= r2) goto L_0x0127
            goto L_0x0133
        L_0x0127:
            java.lang.String[] r1 = f8306t     // Catch:{ InterruptedException -> 0x005b }
            r1 = r1[r8]     // Catch:{ InterruptedException -> 0x005b }
            r12.append(r1)     // Catch:{ InterruptedException -> 0x005b }
            java.lang.String r1 = ","
            r12.append(r1)     // Catch:{ InterruptedException -> 0x005b }
        L_0x0133:
            int r8 = r8 + 1
            goto L_0x00ff
        L_0x0136:
            java.lang.String r12 = r12.toString()     // Catch:{ InterruptedException -> 0x005b }
            if (r9 == 0) goto L_0x0143
            com.meizu.media.camera.camcontroller.c r13 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r13.mo19729b(r0)
        L_0x0143:
            com.meizu.media.camera.util.ac$a r13 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r13, (java.lang.String) r0)
            return r12
        L_0x014b:
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ InterruptedException -> 0x005b }
            java.lang.String[] r0 = f8307u     // Catch:{ InterruptedException -> 0x005b }
            int r0 = r0.length     // Catch:{ InterruptedException -> 0x005b }
            int r0 = r0 * 3
            r12.<init>(r0)     // Catch:{ InterruptedException -> 0x005b }
            android.hardware.camera2.CameraCharacteristics r0 = r11.f8314E     // Catch:{ InterruptedException -> 0x005b }
            android.hardware.camera2.CameraCharacteristics$Key r1 = android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_EXPOSURE_TIME_RANGE     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Object r0 = r0.get(r1)     // Catch:{ InterruptedException -> 0x005b }
            android.util.Range r0 = (android.util.Range) r0     // Catch:{ InterruptedException -> 0x005b }
        L_0x015f:
            java.lang.String[] r1 = f8307u     // Catch:{ InterruptedException -> 0x005b }
            int r1 = r1.length     // Catch:{ InterruptedException -> 0x005b }
            if (r8 >= r1) goto L_0x01a2
            if (r8 <= 0) goto L_0x0193
            java.lang.String[] r1 = f8307u     // Catch:{ InterruptedException -> 0x005b }
            r1 = r1[r8]     // Catch:{ InterruptedException -> 0x005b }
            double r1 = java.lang.Double.parseDouble(r1)     // Catch:{ InterruptedException -> 0x005b }
            r3 = 4652007308841189376(0x408f400000000000, double:1000.0)
            double r1 = r1 * r3
            long r1 = (long) r1     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Comparable r3 = r0.getLower()     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ InterruptedException -> 0x005b }
            long r3 = r3.longValue()     // Catch:{ InterruptedException -> 0x005b }
            int r3 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r3 < 0) goto L_0x019f
            java.lang.Comparable r3 = r0.getUpper()     // Catch:{ InterruptedException -> 0x005b }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ InterruptedException -> 0x005b }
            long r3 = r3.longValue()     // Catch:{ InterruptedException -> 0x005b }
            int r1 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r1 <= 0) goto L_0x0193
            goto L_0x019f
        L_0x0193:
            java.lang.String[] r1 = f8307u     // Catch:{ InterruptedException -> 0x005b }
            r1 = r1[r8]     // Catch:{ InterruptedException -> 0x005b }
            r12.append(r1)     // Catch:{ InterruptedException -> 0x005b }
            java.lang.String r1 = ","
            r12.append(r1)     // Catch:{ InterruptedException -> 0x005b }
        L_0x019f:
            int r8 = r8 + 1
            goto L_0x015f
        L_0x01a2:
            java.lang.String r12 = r12.toString()     // Catch:{ InterruptedException -> 0x005b }
            if (r9 == 0) goto L_0x01af
            com.meizu.media.camera.camcontroller.c r13 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r13.mo19729b(r0)
        L_0x01af:
            com.meizu.media.camera.util.ac$a r13 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r13, (java.lang.String) r0)
            return r12
        L_0x01b7:
            com.meizu.media.camera.util.ac$a r12 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r12, (java.lang.String) r0)
            return r13
        L_0x01bf:
            com.meizu.media.camera.camcontroller.CameraController$g r12 = new com.meizu.media.camera.camcontroller.CameraController$g     // Catch:{ InterruptedException -> 0x005b }
            r12.<init>()     // Catch:{ InterruptedException -> 0x005b }
            throw r12     // Catch:{ InterruptedException -> 0x005b }
        L_0x01c5:
            r12.printStackTrace()     // Catch:{ all -> 0x0058 }
            if (r9 == 0) goto L_0x01d1
            com.meizu.media.camera.camcontroller.c r12 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r12.mo19729b(r0)
        L_0x01d1:
            com.meizu.media.camera.util.ac$a r12 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r12, (java.lang.String) r0)
            return r13
        L_0x01d9:
            if (r9 == 0) goto L_0x01e2
            com.meizu.media.camera.camcontroller.c r13 = r11.f8315F
            java.lang.String r0 = "getSupportValues"
            r13.mo19729b(r0)
        L_0x01e2:
            com.meizu.media.camera.util.ac$a r13 = f8305s
            java.lang.String r0 = "getSupportValues end"
            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r13, (java.lang.String) r0)
            throw r12
        L_0x01ea:
            com.meizu.media.camera.camcontroller.CameraController$g r12 = new com.meizu.media.camera.camcontroller.CameraController$g
            r12.<init>()
            throw r12
        */
        throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.mo19451a(int, boolean[]):java.lang.String");
    }

    /* renamed from: b */
    public int mo19487b() throws CameraController.C1881g {
        return this.f8376ar;
    }

    /* renamed from: c */
    public int mo19498c() throws CameraController.C1881g {
        return this.f8377as;
    }

    /* renamed from: d */
    public float mo19504d() throws CameraController.C1881g {
        return this.f8378at;
    }

    /* renamed from: a */
    public void mo19470a(final ComboPreferences eVar) {
        if (!PatchProxy.proxy(new Object[]{eVar}, this, f8303o, false, 2965, new Class[]{ComboPreferences.class}, Void.TYPE).isSupported && this.f8323N != null) {
            this.f8353aR = eVar;
            AsyncTaskEx.f13744r.mo22621a("updateParametersManualMode", new Runnable() {

                /* renamed from: a */
                public static ChangeQuickRedirect f8410a;

                public void run() {
                    if (!PatchProxy.proxy(new Object[0], this, f8410a, false, 3121, new Class[0], Void.TYPE).isSupported) {
                        CameraControllerV2.this.m9083a(eVar, CameraControllerV2.this.f8323N, new boolean[0]);
                    }
                }
            });
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v0, resolved type: java.lang.Object[]} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void m9083a(com.meizu.media.camera.ComboPreferences r19, android.hardware.camera2.CaptureRequest.Builder r20, boolean... r21) {
        /*
            r18 = this;
            r8 = r18
            r0 = r19
            r9 = r20
            r10 = r21
            r11 = 3
            java.lang.Object[] r1 = new java.lang.Object[r11]
            r12 = 0
            r1[r12] = r0
            r13 = 1
            r1[r13] = r9
            r2 = 2
            r1[r2] = r10
            com.meizu.savior.ChangeQuickRedirect r3 = f8303o
            java.lang.Class[] r6 = new java.lang.Class[r11]
            java.lang.Class<com.meizu.media.camera.e> r4 = com.meizu.media.camera.ComboPreferences.class
            r6[r12] = r4
            java.lang.Class<android.hardware.camera2.CaptureRequest$Builder> r4 = android.hardware.camera2.CaptureRequest.Builder.class
            r6[r13] = r4
            java.lang.Class<boolean[]> r4 = boolean[].class
            r6[r2] = r4
            java.lang.Class r7 = java.lang.Void.TYPE
            r4 = 0
            r5 = 2966(0xb96, float:4.156E-42)
            r2 = r18
            com.meizu.savior.PatchProxyResult r1 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
            boolean r1 = r1.isSupported
            if (r1 == 0) goto L_0x0034
            return
        L_0x0034:
            java.lang.String r1 = "mz_pref_iso_key"
            java.lang.String[] r2 = f8306t
            r2 = r2[r12]
            java.lang.String r1 = r0.getString(r1, r2)
            java.lang.String r2 = "mz_pref_shutterspeed_key"
            java.lang.String[] r3 = f8307u
            r3 = r3[r12]
            java.lang.String r2 = r0.getString(r2, r3)
            java.util.HashMap<java.lang.String, java.lang.Long> r3 = f8304p
            java.lang.Object r3 = r3.get(r1)
            java.lang.Long r3 = (java.lang.Long) r3
            android.hardware.camera2.CaptureRequest$Key r4 = android.hardware.camera2.CaptureRequest.CONTROL_AE_ANTIBANDING_MODE
            java.lang.Integer r5 = java.lang.Integer.valueOf(r11)
            r9.set(r4, r5)
            java.lang.String[] r4 = f8306t
            r4 = r4[r12]
            boolean r4 = r4.equals(r1)
            r5 = -1
            r6 = -2
            r7 = 0
            if (r4 == 0) goto L_0x008d
            java.lang.String[] r4 = f8307u
            r4 = r4[r12]
            boolean r4 = r4.equals(r2)
            if (r4 == 0) goto L_0x008d
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_MODE
            java.lang.Integer r2 = java.lang.Integer.valueOf(r13)
            r9.set(r1, r2)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME
            r9.set(r1, r7)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY
            r9.set(r1, r7)
            com.meizu.media.camera.camcontroller.CameraController$FlashMode r1 = r8.f8341aF
            r8.m9064a((android.hardware.camera2.CaptureRequest.Builder) r9, (com.meizu.media.camera.camcontroller.CameraController.FlashMode) r1, (boolean) r12)
            r8.f8343aH = r6
            r13 = -2
            goto L_0x01a0
        L_0x008d:
            java.lang.String[] r4 = f8306t
            r4 = r4[r12]
            boolean r4 = r4.equals(r1)
            r14 = 1000(0x3e8, double:4.94E-321)
            r16 = 4681608360884174848(0x40f86a0000000000, double:100000.0)
            if (r4 == 0) goto L_0x00e2
            r8.f8343aH = r13
            double r1 = java.lang.Double.parseDouble(r2)
            int r3 = (r1 > r16 ? 1 : (r1 == r16 ? 0 : -1))
            if (r3 <= 0) goto L_0x00aa
            r1 = r16
        L_0x00aa:
            com.meizu.media.camera.util.Contants$CameraV2Key r3 = com.meizu.media.camera.util.Contants.CameraV2Key.ISO_EXP
            android.hardware.camera2.CaptureRequest$Key r3 = r8.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r3)
            long r1 = (long) r1
            long r1 = r1 * r14
            java.lang.Long r1 = java.lang.Long.valueOf(r1)
            r9.set(r3, r1)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME
            r9.set(r1, r7)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY
            r9.set(r1, r7)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_AE_ANTIBANDING_MODE
            java.lang.Integer r2 = java.lang.Integer.valueOf(r12)
            r9.set(r1, r2)
            com.meizu.media.camera.camcontroller.CameraController$FlashMode r1 = r8.f8341aF
            r8.m9064a((android.hardware.camera2.CaptureRequest.Builder) r9, (com.meizu.media.camera.camcontroller.CameraController.FlashMode) r1, (boolean) r12)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_MODE
            java.lang.Integer r2 = java.lang.Integer.valueOf(r13)
            r9.set(r1, r2)
            com.meizu.media.camera.camcontroller.CameraController$FlashMode r1 = r8.f8341aF
            r8.m9064a((android.hardware.camera2.CaptureRequest.Builder) r9, (com.meizu.media.camera.camcontroller.CameraController.FlashMode) r1, (boolean) r12)
            goto L_0x01a0
        L_0x00e2:
            java.lang.String[] r4 = f8307u
            r4 = r4[r12]
            boolean r4 = r4.equals(r2)
            if (r4 == 0) goto L_0x0138
            r8.f8343aH = r12
            if (r3 != 0) goto L_0x010c
            java.util.HashMap<java.lang.String, java.lang.Long> r2 = f8304p
            java.lang.String r3 = "absolute"
            java.lang.Object r2 = r2.get(r3)
            r3 = r2
            java.lang.Long r3 = (java.lang.Long) r3
            com.meizu.media.camera.util.Contants$CameraV2Key r2 = com.meizu.media.camera.util.Contants.CameraV2Key.USE_ISO_VALUE
            android.hardware.camera2.CaptureRequest$Key r2 = r8.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r2)
            int r1 = java.lang.Integer.parseInt(r1)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r9.set(r2, r1)
        L_0x010c:
            com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.ISO_EXP
            android.hardware.camera2.CaptureRequest$Key r1 = r8.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r1)
            r9.set(r1, r3)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_MODE
            java.lang.Integer r2 = java.lang.Integer.valueOf(r13)
            r9.set(r1, r2)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME
            r9.set(r1, r7)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY
            r9.set(r1, r7)
            android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_AE_ANTIBANDING_MODE
            java.lang.Integer r2 = java.lang.Integer.valueOf(r12)
            r9.set(r1, r2)
            com.meizu.media.camera.camcontroller.CameraController$FlashMode r1 = r8.f8341aF
            r8.m9064a((android.hardware.camera2.CaptureRequest.Builder) r9, (com.meizu.media.camera.camcontroller.CameraController.FlashMode) r1, (boolean) r12)
            r13 = 0
            goto L_0x01a0
        L_0x0138:
            double r6 = java.lang.Double.parseDouble(r2)
            int r2 = (r6 > r16 ? 1 : (r6 == r16 ? 0 : -1))
            if (r2 <= 0) goto L_0x0142
            r6 = r16
        L_0x0142:
            r8.f8343aH = r5
            android.hardware.camera2.CaptureRequest$Key r2 = android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY
            int r4 = java.lang.Integer.parseInt(r1)
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r9.set(r2, r4)
            android.hardware.camera2.CaptureRequest$Key r2 = android.hardware.camera2.CaptureRequest.CONTROL_AE_MODE
            java.lang.Integer r4 = java.lang.Integer.valueOf(r12)
            r9.set(r2, r4)
            android.hardware.camera2.CaptureRequest$Key r2 = android.hardware.camera2.CaptureRequest.FLASH_MODE
            java.lang.Integer r4 = java.lang.Integer.valueOf(r12)
            r9.set(r2, r4)
            android.hardware.camera2.CaptureRequest$Key r2 = android.hardware.camera2.CaptureRequest.CONTROL_MODE
            java.lang.Integer r4 = java.lang.Integer.valueOf(r12)
            r9.set(r2, r4)
            android.hardware.camera2.CaptureRequest$Key r2 = android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME
            long r6 = (long) r6
            long r6 = r6 * r14
            java.lang.Long r4 = java.lang.Long.valueOf(r6)
            r9.set(r2, r4)
            if (r3 != 0) goto L_0x0196
            java.util.HashMap<java.lang.String, java.lang.Long> r2 = f8304p
            java.lang.String r3 = "absolute"
            java.lang.Object r2 = r2.get(r3)
            r3 = r2
            java.lang.Long r3 = (java.lang.Long) r3
            com.meizu.media.camera.util.Contants$CameraV2Key r2 = com.meizu.media.camera.util.Contants.CameraV2Key.USE_ISO_VALUE
            android.hardware.camera2.CaptureRequest$Key r2 = r8.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r2)
            int r1 = java.lang.Integer.parseInt(r1)
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r9.set(r2, r1)
        L_0x0196:
            com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.ISO_EXP
            android.hardware.camera2.CaptureRequest$Key r1 = r8.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r1)
            r9.set(r1, r3)
            r13 = -1
        L_0x01a0:
            com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.SELECT_PRIORITY
            android.hardware.camera2.CaptureRequest$Key r1 = r8.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r1)
            java.lang.Integer r2 = java.lang.Integer.valueOf(r13)
            r9.set(r1, r2)
            java.lang.String r1 = "pref_camera_whitebalance_key"
            com.meizu.media.camera.camcontroller.CameraControllerV2$WhiteBalanceMode[] r2 = f8308v     // Catch:{ g -> 0x01cb }
            r2 = r2[r12]     // Catch:{ g -> 0x01cb }
            java.lang.String r2 = r2.getModeName()     // Catch:{ g -> 0x01cb }
            java.lang.String r0 = r0.getString(r1, r2)     // Catch:{ g -> 0x01cb }
            java.util.List r1 = r8.mo19570b((boolean[]) r10)     // Catch:{ g -> 0x01cb }
            boolean r1 = com.meizu.media.camera.util.CameraUtil.m15864a((java.lang.String) r0, (java.util.List<java.lang.String>) r1)     // Catch:{ g -> 0x01cb }
            if (r1 == 0) goto L_0x01d5
            boolean[] r1 = new boolean[r12]     // Catch:{ g -> 0x01cb }
            r8.mo19495b((java.lang.String) r0, (boolean[]) r1)     // Catch:{ g -> 0x01cb }
            goto L_0x01d5
        L_0x01cb:
            r0 = move-exception
            com.meizu.media.camera.util.ac$a r1 = f8305s
            java.lang.String r0 = r0.toString()
            com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r1, (java.lang.String) r0)
        L_0x01d5:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9083a(com.meizu.media.camera.e, android.hardware.camera2.CaptureRequest$Builder, boolean[]):void");
    }

    /* renamed from: af */
    public static CameraController m9111af() {
        PatchProxyResult proxy = PatchProxy.proxy(new Object[0], (Object) null, f8303o, true, 2967, new Class[0], CameraController.class);
        if (proxy.isSupported) {
            return (CameraController) proxy.result;
        }
        if (f8298A == null) {
            f8298A = new CameraControllerV2();
        }
        return f8298A;
    }

    /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$b */
    private class C1924b implements ImageReader.OnImageAvailableListener {

        /* renamed from: a */
        public static ChangeQuickRedirect f8613a;

        /* renamed from: A */
        boolean f8614A;

        /* renamed from: B */
        XmpMetaData f8615B;

        /* renamed from: C */
        int f8616C;

        /* renamed from: D */
        long f8617D;

        /* renamed from: E */
        int f8618E;

        /* renamed from: F */
        byte[][] f8619F;

        /* renamed from: G */
        int f8620G;

        /* renamed from: H */
        float f8621H;

        /* renamed from: I */
        float[] f8622I;

        /* renamed from: J */
        boolean f8623J;

        /* renamed from: K */
        boolean f8624K;

        /* renamed from: L */
        int f8625L;

        /* renamed from: b */
        UUID f8627b;

        /* renamed from: c */
        Contants.CameraService.RequestCode f8628c;

        /* renamed from: d */
        Location f8629d;

        /* renamed from: e */
        int f8630e;

        /* renamed from: f */
        int f8631f;

        /* renamed from: g */
        int f8632g;

        /* renamed from: h */
        long f8633h;

        /* renamed from: i */
        int f8634i;

        /* renamed from: j */
        FaceBeautyData f8635j;

        /* renamed from: k */
        String f8636k;

        /* renamed from: l */
        boolean f8637l;

        /* renamed from: m */
        boolean f8638m;

        /* renamed from: n */
        boolean f8639n;

        /* renamed from: o */
        boolean f8640o;

        /* renamed from: p */
        boolean f8641p;

        /* renamed from: q */
        boolean f8642q;

        /* renamed from: r */
        boolean f8643r;

        /* renamed from: s */
        boolean f8644s;

        /* renamed from: t */
        boolean f8645t;

        /* renamed from: u */
        int f8646u;

        /* renamed from: v */
        boolean f8647v;

        /* renamed from: w */
        boolean f8648w;

        /* renamed from: x */
        boolean f8649x;

        /* renamed from: y */
        boolean f8650y;

        /* renamed from: z */
        boolean f8651z;

        public C1924b(CameraControllerV2 cameraControllerV2, UUID uuid, Contants.CameraService.RequestCode requestCode, Location location, int i, int i2, int i3, long j, int i4, FaceBeautyData dVar, String str, boolean z, boolean z2, boolean z3, boolean z4, boolean z5, boolean z6, boolean z7, boolean z8, boolean z9, boolean z10, XmpMetaData gVar, long j2) {
            CameraControllerV2.this = cameraControllerV2;
            this.f8617D = -1;
            this.f8618E = -1;
            this.f8627b = uuid;
            this.f8628c = requestCode;
            this.f8629d = location;
            this.f8630e = i;
            this.f8631f = i2;
            this.f8632g = i3;
            this.f8633h = j;
            this.f8634i = i4;
            this.f8635j = dVar;
            this.f8636k = str;
            this.f8637l = z;
            this.f8638m = cameraControllerV2.f8379au;
            this.f8639n = z3;
            this.f8640o = CameraModeType.m10983m(CameraModeType.ModeType.DOCUMENT);
            this.f8641p = z4;
            this.f8642q = z5;
            this.f8643r = z6;
            this.f8647v = z7;
            this.f8648w = z8;
            this.f8649x = z9;
            this.f8615B = gVar;
            this.f8617D = j2;
            this.f8614A = z10;
            LogUtil.C2630a al = CameraControllerV2.f8305s;
            LogUtil.m15942a(al, "new CameraImageAvailableListener this:" + this);
        }

        public C1924b(UUID uuid, Contants.CameraService.RequestCode requestCode) {
            this.f8617D = -1;
            this.f8618E = -1;
            this.f8627b = uuid;
            this.f8628c = requestCode;
            this.f8644s = true;
            this.f8645t = false;
            this.f8646u = 0;
            this.f8638m = CameraControllerV2.this.f8379au;
            LogUtil.C2630a al = CameraControllerV2.f8305s;
            LogUtil.m15942a(al, "new CameraImageAvailableListener this:" + this);
        }

        public C1924b(UUID uuid, Contants.CameraService.RequestCode requestCode, long j, int i, int i2, int i3, boolean z) {
            this.f8617D = -1;
            this.f8618E = -1;
            this.f8627b = uuid;
            this.f8628c = requestCode;
            this.f8630e = i2;
            this.f8631f = i3;
            this.f8632g = i;
            this.f8633h = j;
            this.f8651z = z;
            this.f8650y = true;
            this.f8638m = CameraControllerV2.this.f8379au;
            LogUtil.C2630a al = CameraControllerV2.f8305s;
            LogUtil.m15942a(al, "new Stereo CameraImageAvailableListener this:" + this);
        }

        public C1924b(UUID uuid, Contants.CameraService.RequestCode requestCode, long j, int i, int i2, int i3) {
            this.f8617D = -1;
            this.f8618E = -1;
            this.f8627b = uuid;
            this.f8628c = requestCode;
            this.f8630e = i2;
            this.f8631f = i3;
            this.f8632g = i;
            this.f8633h = j;
            this.f8649x = true;
            this.f8638m = CameraControllerV2.this.f8379au;
            LogUtil.C2630a al = CameraControllerV2.f8305s;
            LogUtil.m15942a(al, "new Tof CameraImageAvailableListener this:" + this);
        }

        public C1924b(CameraControllerV2 cameraControllerV2, UUID uuid, Contants.CameraService.RequestCode requestCode, Location location, long j, int i, int i2, int i3, int i4, float f, float[] fArr, boolean z, boolean z2, boolean z3, boolean z4, int i5) {
            CameraControllerV2.this = cameraControllerV2;
            this.f8617D = -1;
            this.f8618E = -1;
            this.f8618E = -1;
            this.f8627b = uuid;
            this.f8628c = requestCode;
            this.f8629d = location;
            this.f8620G = i4;
            this.f8621H = f;
            this.f8622I = fArr;
            this.f8623J = z;
            this.f8630e = i2;
            this.f8631f = i3;
            this.f8632g = i;
            this.f8633h = j;
            this.f8638m = cameraControllerV2.f8379au;
            this.f8643r = z2;
            this.f8637l = z3;
            this.f8624K = z4;
            this.f8625L = i5;
        }

        public void onImageAvailable(ImageReader imageReader) {
            Throwable th;
            boolean z = true;
            if (!PatchProxy.proxy(new Object[]{imageReader}, this, f8613a, false, 3183, new Class[]{ImageReader.class}, Void.TYPE).isSupported) {
                Image acquireNextImage = imageReader.acquireNextImage();
                try {
                    if (this.f8644s) {
                        if (acquireNextImage.getFormat() != 256) {
                            z = false;
                        }
                        m9355a(acquireNextImage, z);
                    } else if (this.f8650y) {
                        m9357b(acquireNextImage);
                    } else if (this.f8649x) {
                        m9359c(acquireNextImage);
                    } else if (this.f8620G > 0) {
                        m9354a(acquireNextImage);
                    } else {
                        if (acquireNextImage.getFormat() != 256) {
                            z = false;
                        }
                        m9358b(acquireNextImage, z);
                    }
                    if (acquireNextImage != null) {
                        acquireNextImage.close();
                        return;
                    }
                    return;
                } catch (Throwable th2) {
                    th.addSuppressed(th2);
                }
            } else {
                return;
            }
            throw th;
        }

        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v16, resolved type: java.lang.Object[]} */
        /* JADX WARNING: Multi-variable type inference failed */
        /* renamed from: a */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        private void m9354a(android.media.Image r38) {
            /*
                r37 = this;
                r7 = r37
                r8 = r38
                r9 = 1
                java.lang.Object[] r0 = new java.lang.Object[r9]
                r10 = 0
                r0[r10] = r8
                com.meizu.savior.ChangeQuickRedirect r2 = f8613a
                java.lang.Class[] r5 = new java.lang.Class[r9]
                java.lang.Class<android.media.Image> r1 = android.media.Image.class
                r5[r10] = r1
                java.lang.Class r6 = java.lang.Void.TYPE
                r3 = 0
                r4 = 3184(0xc70, float:4.462E-42)
                r1 = r37
                com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r0, r1, r2, r3, r4, r5, r6)
                boolean r0 = r0.isSupported
                if (r0 == 0) goto L_0x0022
                return
            L_0x0022:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.b$a r0 = r0.f8281e
                boolean r0 = r0.mo19050a()
                if (r0 == 0) goto L_0x0036
                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.String r1 = "onSuperNightPictureTaken JpegPictureCallback:isDestroyed is false"
                com.meizu.media.camera.util.LogUtil.m15952c(r0, r1)
                return
            L_0x0036:
                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "onSuperNightPictureTaken CameraImageAvailableListener this:"
                r1.append(r2)
                r1.append(r7)
                java.lang.String r1 = r1.toString()
                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                int r0 = r7.f8618E
                r1 = -1
                if (r0 != r1) goto L_0x0055
                r7.f8618E = r10
            L_0x0055:
                int r0 = r7.f8630e
                int r1 = r7.f8631f
                int r0 = r0 * r1
                r1 = 3
                int r0 = r0 * 3
                r2 = 2
                int r0 = r0 / r2
                byte[] r0 = new byte[r0]
                com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                int r4 = r38.getWidth()
                int r5 = r38.getHeight()
                android.media.Image$Plane[] r6 = r38.getPlanes()
                r6 = r6[r10]
                int r6 = r6.getRowStride()
                byte[] r3 = r3.m9096a((android.media.Image) r8, (int) r4, (int) r5, (int) r6)
                byte[][] r4 = r7.f8619F
                if (r4 != 0) goto L_0x008f
                int r4 = r7.f8620G
                int r5 = r3.length
                int[] r4 = new int[]{r4, r5}
                java.lang.Class<byte> r5 = byte.class
                java.lang.Object r4 = java.lang.reflect.Array.newInstance(r5, r4)
                byte[][] r4 = (byte[][]) r4
                r7.f8619F = r4
            L_0x008f:
                byte[][] r4 = r7.f8619F
                int r5 = r7.f8618E
                r4[r5] = r3
                int r3 = r7.f8618E
                int r4 = r7.f8620G
                int r4 = r4 - r9
                if (r3 >= r4) goto L_0x00a3
                int r0 = r7.f8618E
                int r0 = r0 + r9
                r7.f8618E = r0
                goto L_0x0275
            L_0x00a3:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.b$a r3 = r3.f8281e
                java.util.UUID r4 = r7.f8627b
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r5 = r7.f8628c
                com.meizu.media.camera.util.Contants$CameraService$ResultCode r6 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_SHUTTER_CALLBACK
                r8 = 9
                java.lang.Object[] r11 = new java.lang.Object[r8]
                java.lang.Boolean r12 = java.lang.Boolean.valueOf(r9)
                r11[r10] = r12
                int r12 = r7.f8632g
                java.lang.Integer r12 = java.lang.Integer.valueOf(r12)
                r11[r9] = r12
                boolean r12 = r7.f8637l
                java.lang.Boolean r12 = java.lang.Boolean.valueOf(r12)
                r11[r2] = r12
                int r12 = r7.f8630e
                java.lang.Integer r12 = java.lang.Integer.valueOf(r12)
                r11[r1] = r12
                int r12 = r7.f8631f
                java.lang.Integer r12 = java.lang.Integer.valueOf(r12)
                r13 = 4
                r11[r13] = r12
                long r14 = r7.f8633h
                java.lang.Long r12 = java.lang.Long.valueOf(r14)
                r14 = 5
                r11[r14] = r12
                boolean r12 = r7.f8643r
                java.lang.Boolean r12 = java.lang.Boolean.valueOf(r12)
                r15 = 6
                r11[r15] = r12
                java.lang.String r12 = com.meizu.media.camera.util.CameraUtil.m15918x()
                r16 = 7
                r11[r16] = r12
                java.lang.Boolean r12 = java.lang.Boolean.valueOf(r10)
                r17 = 8
                r11[r17] = r12
                r3.mo19045a(r4, r5, r6, r11)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                r4 = 0
                r3.m9154c((com.meizu.media.camera.camcontroller.CameraControllerV2.C1923a) r4)
                com.meizu.media.camera.util.ac$a r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.String r5 = "onSuperNightPictureTaken data complete"
                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r3, (java.lang.String) r5)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                boolean r3 = r3.f8370al
                if (r3 != 0) goto L_0x0115
                return
            L_0x0115:
                boolean r3 = r7.f8639n
                if (r3 == 0) goto L_0x0120
                long r5 = r7.f8633h
                java.lang.String r3 = com.meizu.media.camera.util.CameraUtil.m15831a((long) r5)
                goto L_0x0126
            L_0x0120:
                long r5 = r7.f8633h
                java.lang.String r3 = com.meizu.media.camera.util.CameraUtil.m15874b((long) r5)
            L_0x0126:
                com.meizu.media.camera.Storage r5 = com.meizu.media.camera.Storage.m7750a()
                boolean r6 = r7.f8637l
                java.lang.String r5 = r5.mo18626a((boolean) r6, (java.lang.String) r3)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.util.UUID r11 = r7.f8627b
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r12 = r7.f8628c
                r6.m9089a((java.util.UUID) r11, (com.meizu.media.camera.util.Contants.CameraService.RequestCode) r12, (boolean) r10, (java.lang.String) r5)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                boolean unused = r6.f8370al = r10
                int r6 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                if (r6 <= 0) goto L_0x0150
                int r6 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                int r6 = r6 - r9
                com.meizu.media.camera.camcontroller.CameraController.f8275g = r6
                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.b$a r6 = r6.f8281e
                int r11 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                r6.mo19041a((int) r11)
            L_0x0150:
                int r6 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                if (r6 <= 0) goto L_0x015e
                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.util.UUID r11 = r7.f8627b
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r12 = r7.f8628c
                r6.m9089a((java.util.UUID) r11, (com.meizu.media.camera.util.Contants.CameraService.RequestCode) r12, (boolean) r9, (java.lang.String) r5)
                goto L_0x0167
            L_0x015e:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.util.UUID r11 = r7.f8627b
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r12 = r7.f8628c
                r6.m9089a((java.util.UUID) r11, (com.meizu.media.camera.util.Contants.CameraService.RequestCode) r12, (boolean) r10, (java.lang.String) r5)
            L_0x0167:
                boolean r5 = r7.f8638m
                boolean r6 = r7.f8643r
                byte[] r18 = r7.m9356a(r0, r5, r6)
                if (r18 != 0) goto L_0x017b
                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.String r1 = "JpegPictureCallback: data is null"
                com.meizu.media.camera.util.LogUtil.m15952c(r0, r1)
                return
            L_0x017b:
                long r5 = java.lang.System.currentTimeMillis()
            L_0x017f:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                android.hardware.camera2.TotalCaptureResult r0 = r0.f8409x
                if (r0 != 0) goto L_0x019b
                long r11 = java.lang.System.currentTimeMillis()
                long r11 = r11 - r5
                r19 = 3000(0xbb8, double:1.482E-320)
                int r0 = (r11 > r19 ? 1 : (r11 == r19 ? 0 : -1))
                if (r0 <= 0) goto L_0x017f
                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.String r5 = "timeOut waitting for captureResult"
                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r5)
            L_0x019b:
                r19 = 0
                android.location.Location r0 = r7.f8629d
                long r5 = r7.f8633h
                com.meizu.media.camera.camcontroller.CameraControllerV2 r11 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                android.hardware.camera2.TotalCaptureResult r23 = r11.f8409x
                long r11 = r7.f8617D
                r20 = 0
                int r11 = (r11 > r20 ? 1 : (r11 == r20 ? 0 : -1))
                if (r11 <= 0) goto L_0x01b2
                r24 = 1
                goto L_0x01b4
            L_0x01b2:
                r24 = 0
            L_0x01b4:
                r25 = 0
                r20 = r0
                r21 = r5
                byte[] r21 = com.meizu.media.camera.Exif.m10045a(r18, r19, r20, r21, r23, r24, r25)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.b$a r0 = r0.f8281e
                java.util.UUID r5 = r7.f8627b
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r6 = r7.f8628c
                com.meizu.media.camera.util.Contants$CameraService$ResultCode r11 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_ON_PICTURE_TOKEN_CALLBACK
                r12 = 11
                java.lang.Object[] r12 = new java.lang.Object[r12]
                r12[r10] = r21
                android.location.Location r8 = r7.f8629d
                r12[r9] = r8
                boolean r8 = r7.f8643r
                java.lang.Boolean r8 = java.lang.Boolean.valueOf(r8)
                r12[r2] = r8
                int r2 = r7.f8630e
                java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
                r12[r1] = r2
                int r1 = r7.f8631f
                java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
                r12[r13] = r1
                long r1 = r7.f8633h
                java.lang.Long r1 = java.lang.Long.valueOf(r1)
                r12[r14] = r1
                java.lang.Integer r1 = java.lang.Integer.valueOf(r10)
                r12[r15] = r1
                r12[r16] = r4
                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                android.hardware.camera2.TotalCaptureResult r1 = r1.f8409x
                r12[r17] = r1
                com.meizu.media.camera.a.g r1 = r7.f8615B
                r2 = 9
                r12[r2] = r1
                r1 = 10
                java.lang.Boolean r2 = java.lang.Boolean.valueOf(r10)
                r12[r1] = r2
                r0.mo19045a(r5, r6, r11, r12)
                com.meizu.media.camera.d.c r29 = com.meizu.media.camera.Exif.m10044a((byte[]) r21)
                int r28 = com.meizu.media.camera.Exif.m10043a((com.meizu.media.camera.p067d.ExifInterface) r29)
                int r0 = r7.f8632g
                int r0 = r0 + r28
                int r0 = r0 % 180
                if (r0 != 0) goto L_0x022c
                int r0 = r7.f8630e
                int r1 = r7.f8631f
            L_0x0227:
                r26 = r0
                r27 = r1
                goto L_0x0231
            L_0x022c:
                int r0 = r7.f8631f
                int r1 = r7.f8630e
                goto L_0x0227
            L_0x0231:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.b$a r0 = r0.f8281e
                r18 = r0
                java.util.UUID r0 = r7.f8627b
                r19 = r0
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r0 = r7.f8628c
                r20 = r0
                long r0 = r7.f8633h
                r23 = r0
                android.location.Location r0 = r7.f8629d
                r25 = r0
                com.meizu.media.camera.a.g r0 = r7.f8615B
                r30 = r0
                boolean r0 = r7.f8637l
                r31 = r0
                boolean r0 = r7.f8638m
                r32 = r0
                int r0 = r7.f8632g
                r33 = r0
                boolean r0 = r7.f8639n
                r34 = r0
                r35 = 0
                boolean r0 = r7.f8643r
                r36 = r0
                r22 = r3
                r18.mo19046a(r19, r20, r21, r22, r23, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.b$a r0 = r0.f8281e
                java.util.UUID r1 = r7.f8627b
                com.meizu.media.camera.util.Contants$CameraService$RequestCode r2 = r7.f8628c
                com.meizu.media.camera.util.Contants$CameraService$ResultCode r3 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_FINISHED
                java.lang.Object[] r4 = new java.lang.Object[r10]
                r0.mo19045a(r1, r2, r3, r4)
            L_0x0275:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.m9354a(android.media.Image):void");
        }

        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v0, resolved type: java.lang.Object[]} */
        /* JADX WARNING: Multi-variable type inference failed */
        /* renamed from: a */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        private byte[] m9356a(byte[] r24, boolean r25, boolean r26) {
            /*
                r23 = this;
                r7 = r23
                r15 = r24
                r14 = r25
                r13 = r26
                r12 = 3
                java.lang.Object[] r0 = new java.lang.Object[r12]
                r11 = 0
                r0[r11] = r15
                java.lang.Byte r1 = new java.lang.Byte
                r1.<init>(r14)
                r10 = 1
                r0[r10] = r1
                java.lang.Byte r1 = new java.lang.Byte
                r1.<init>(r13)
                r9 = 2
                r0[r9] = r1
                com.meizu.savior.ChangeQuickRedirect r2 = f8613a
                java.lang.Class[] r5 = new java.lang.Class[r12]
                java.lang.Class<byte[]> r1 = byte[].class
                r5[r11] = r1
                java.lang.Class r1 = java.lang.Boolean.TYPE
                r5[r10] = r1
                java.lang.Class r1 = java.lang.Boolean.TYPE
                r5[r9] = r1
                java.lang.Class<byte[]> r6 = byte[].class
                r3 = 0
                r4 = 3185(0xc71, float:4.463E-42)
                r1 = r23
                com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r0, r1, r2, r3, r4, r5, r6)
                boolean r1 = r0.isSupported
                if (r1 == 0) goto L_0x0042
                java.lang.Object r0 = r0.result
                byte[] r0 = (byte[]) r0
                return r0
            L_0x0042:
                boolean r0 = r7.f8623J
                if (r0 == 0) goto L_0x0052
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.camcontroller.f r0 = r0.f8311B
                int r0 = r0.f9122a
                if (r0 == r10) goto L_0x0052
                r0 = 0
                goto L_0x0053
            L_0x0052:
                r0 = 3
            L_0x0053:
                byte[][] r8 = r7.f8619F
                int r1 = r7.f8630e
                int r2 = r7.f8631f
                boolean r3 = r7.f8623J
                float[] r4 = r7.f8622I
                int[] r5 = com.meizu.media.camera.util.DeviceHelper.f14023do
                r5 = r5[r0]
                int[] r6 = com.meizu.media.camera.util.DeviceHelper.f14023do
                int r16 = r0 + 1
                r6 = r6[r16]
                int[] r16 = com.meizu.media.camera.util.DeviceHelper.f14023do
                int r0 = r0 + r9
                r16 = r16[r0]
                int r17 = com.meizu.media.camera.util.DeviceHelper.f14024dp
                int r0 = r7.f8625L
                com.meizu.media.camera.camcontroller.CameraControllerV2 r9 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.camcontroller.f r9 = r9.f8311B
                if (r9 == 0) goto L_0x0085
                com.meizu.media.camera.camcontroller.CameraControllerV2 r9 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.camcontroller.f r9 = r9.f8311B
                int r9 = r9.f9122a
                if (r9 != r10) goto L_0x0085
                r19 = 1
                goto L_0x0087
            L_0x0085:
                r19 = 0
            L_0x0087:
                boolean r9 = r7.f8624K
                r20 = r9
                r9 = r24
                r21 = 1
                r10 = r1
                r1 = 0
                r11 = r2
                r2 = 3
                r12 = r3
                r3 = r13
                r13 = r4
                r4 = r14
                r14 = r5
                r5 = r15
                r15 = r6
                r18 = r0
                com.meizu.media.cameraAlgorithm.supernight.SNUtil.getSnImage((byte[][]) r8, (byte[]) r9, (int) r10, (int) r11, (boolean) r12, (float[]) r13, (int) r14, (int) r15, (int) r16, (int) r17, (int) r18, (boolean) r19, (boolean) r20)
                r0 = -1
                r7.f8618E = r0
                r0 = 0
                r6 = r0
                byte[][] r6 = (byte[][]) r6
                r7.f8619F = r6
                int r6 = r7.f8630e
                int r8 = r7.f8631f
                int r8 = r8 * r6
                java.nio.ByteBuffer r15 = java.nio.ByteBuffer.allocateDirect(r8)
                r15.clear()
                r15.position(r1)
                int r8 = r7.f8631f
                int r8 = r8 * r6
                java.nio.ByteBuffer r8 = r15.put(r5, r1, r8)
                r8.position(r1)
                int r8 = r7.f8631f
                int r8 = r8 * r6
                r14 = 2
                int r8 = r8 / r14
                java.nio.ByteBuffer r13 = java.nio.ByteBuffer.allocateDirect(r8)
                r13.clear()
                r13.position(r1)
                int r8 = r7.f8631f
                int r8 = r8 * r6
                int r9 = r7.f8631f
                int r9 = r9 * r6
                int r9 = r9 / r14
                java.nio.ByteBuffer r5 = r13.put(r5, r8, r9)
                r5.position(r1)
                int r8 = r7.f8630e
                int r9 = r7.f8631f
                boolean r5 = r7.f8637l
                int r12 = r7.f8632g
                r10 = r15
                r11 = r6
                r16 = r12
                r12 = r13
                r22 = r13
                r13 = r6
                r14 = r5
                r5 = r15
                r15 = r16
                com.meizu.media.cameraAlgorithm.yuv.YuvUtil.rotateNV21Buffer(r8, r9, r10, r11, r12, r13, r14, r15)
                int r8 = r7.f8632g
                r9 = 90
                if (r8 == r9) goto L_0x0106
                int r8 = r7.f8632g
                r9 = 270(0x10e, float:3.78E-43)
                if (r8 != r9) goto L_0x0110
            L_0x0106:
                int r6 = r7.f8631f
                int r8 = r7.f8630e
                r7.f8631f = r8
                r7.f8630e = r6
                int r6 = r7.f8630e
            L_0x0110:
                r7.f8632g = r1
                com.meizu.media.camera.util.ac$a r8 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.StringBuilder r9 = new java.lang.StringBuilder
                r9.<init>()
                java.lang.String r10 = "getJpegdata: deviceMarkOn = "
                r9.append(r10)
                r9.append(r4)
                java.lang.String r10 = ", mCustomDeviceMark = "
                r9.append(r10)
                com.meizu.media.camera.camcontroller.CameraControllerV2 r10 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.lang.String r10 = r10.f8382ax
                r9.append(r10)
                java.lang.String r9 = r9.toString()
                com.meizu.media.camera.util.LogUtil.m15952c(r8, r9)
                if (r4 == 0) goto L_0x01d4
                boolean r4 = com.meizu.media.camera.util.DeviceHelper.f13881ah
                if (r4 == 0) goto L_0x0150
                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.lang.String r4 = r4.f8382ax
                if (r4 == 0) goto L_0x0150
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.lang.String r0 = r0.f8382ax
                com.meizu.media.photoalgorithm.WaterMark.setCustomSign(r0)
                goto L_0x0153
            L_0x0150:
                com.meizu.media.photoalgorithm.WaterMark.setCustomSign(r0)
            L_0x0153:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                android.content.Context r0 = r0.f8286l
                java.lang.String r4 = com.meizu.media.camera.util.DeviceHelper.f14008dB
                boolean r8 = com.meizu.media.camera.util.DeviceUtil.m16196a()
                android.graphics.Bitmap r0 = com.meizu.media.photoalgorithm.WaterMark.getDevicemarkBitmap(r0, r4, r8)
                if (r0 == 0) goto L_0x01d4
                com.meizu.media.camera.util.DeviceHelper$CUSTOM_DEVICE_MARK r4 = com.meizu.media.camera.util.DeviceHelper.f14036f
                com.meizu.media.camera.util.DeviceHelper$CUSTOM_DEVICE_MARK r8 = com.meizu.media.camera.util.DeviceHelper.CUSTOM_DEVICE_MARK.PROCESS_AFTER_DEVICE_NAME
                if (r4 != r8) goto L_0x016b
                r4 = 1
                goto L_0x016c
            L_0x016b:
                r4 = 0
            L_0x016c:
                com.meizu.media.photoalgorithm.WaterMark.updateScaleRatioUsedStatus(r4)
                int r4 = r7.f8630e
                int r8 = r7.f8631f
                int r9 = r7.f8632g
                float r4 = com.meizu.media.photoalgorithm.WaterMark.getDevicemarkScaledRaio(r4, r8, r0, r9)
                android.graphics.Matrix r14 = new android.graphics.Matrix
                r14.<init>()
                r14.postScale(r4, r4)
                int r4 = r7.f8632g
                int r4 = 360 - r4
                float r4 = (float) r4
                r14.postRotate(r4)
                r10 = 0
                r11 = 0
                int r12 = r0.getWidth()
                int r13 = r0.getHeight()
                r15 = 1
                r9 = r0
                android.graphics.Bitmap r4 = android.graphics.Bitmap.createBitmap(r9, r10, r11, r12, r13, r14, r15)
                int r8 = r7.f8630e
                int r9 = r7.f8631f
                int r10 = r4.getWidth()
                int r11 = r4.getHeight()
                int r12 = r7.f8632g
                android.graphics.Rect r19 = com.meizu.media.photoalgorithm.WaterMark.getDevicemarkRect(r8, r9, r10, r11, r12)
                int r15 = r7.f8630e
                int r8 = r7.f8631f
                int r14 = r7.f8632g
                r9 = r5
                r10 = r22
                r11 = r22
                r12 = r6
                r13 = r6
                r18 = r14
                r14 = r6
                r16 = r8
                r17 = r4
                com.meizu.media.photoalgorithm.WaterMark.nativePhotoWaterMarkYUV(r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19)
                boolean r8 = r4.isRecycled()
                if (r8 != 0) goto L_0x01cb
                r4.recycle()
            L_0x01cb:
                boolean r4 = r0.isRecycled()
                if (r4 != 0) goto L_0x01d4
                r0.recycle()
            L_0x01d4:
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                boolean r0 = r0.f8380av
                if (r0 == 0) goto L_0x0251
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                android.content.Context r0 = r0.f8286l
                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                java.lang.String r4 = r4.f8381aw
                android.graphics.Bitmap r0 = com.meizu.media.photoalgorithm.WaterMark.getTimemarkBitmap(r0, r4)
                if (r0 == 0) goto L_0x0251
                int r4 = r7.f8630e
                int r8 = r7.f8631f
                int r9 = r7.f8632g
                float r4 = com.meizu.media.photoalgorithm.WaterMark.getTimemarkScaledRaio(r4, r8, r0, r9)
                android.graphics.Matrix r13 = new android.graphics.Matrix
                r13.<init>()
                r13.postScale(r4, r4)
                int r4 = r7.f8632g
                int r4 = 360 - r4
                float r4 = (float) r4
                r13.postRotate(r4)
                r9 = 0
                r10 = 0
                int r11 = r0.getWidth()
                int r12 = r0.getHeight()
                r14 = 1
                r8 = r0
                android.graphics.Bitmap r4 = android.graphics.Bitmap.createBitmap(r8, r9, r10, r11, r12, r13, r14)
                int r8 = r7.f8630e
                int r9 = r7.f8631f
                int r10 = r4.getWidth()
                int r11 = r4.getHeight()
                int r12 = r7.f8632g
                android.graphics.Rect r19 = com.meizu.media.photoalgorithm.WaterMark.getTimemarkRect(r8, r9, r10, r11, r12)
                int r15 = r7.f8630e
                int r8 = r7.f8631f
                int r14 = r7.f8632g
                r9 = r5
                r10 = r22
                r11 = r22
                r12 = r6
                r13 = r6
                r18 = r14
                r14 = r6
                r16 = r8
                r17 = r4
                com.meizu.media.photoalgorithm.WaterMark.nativePhotoWaterMarkYUV(r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19)
                boolean r8 = r4.isRecycled()
                if (r8 != 0) goto L_0x0248
                r4.recycle()
            L_0x0248:
                boolean r4 = r0.isRecycled()
                if (r4 != 0) goto L_0x0251
                r0.recycle()
            L_0x0251:
                int r0 = r7.f8631f
                int r0 = r0 * r6
                int r0 = r0 * 3
                r4 = 2
                int r0 = r0 / r4
                java.nio.ByteBuffer r0 = java.nio.ByteBuffer.allocate(r0)
                java.nio.ByteBuffer r8 = r0.put(r5)
                r9 = r22
                r8.put(r9)
                r5.clear()
                r9.clear()
                byte[] r11 = r0.array()
                if (r3 == 0) goto L_0x02c4
                long r8 = java.lang.System.currentTimeMillis()
                com.meizu.media.camera.util.ac$a r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.StringBuilder r5 = new java.lang.StringBuilder
                r5.<init>()
                java.lang.String r10 = "processFB start ： length: "
                r5.append(r10)
                int r10 = r11.length
                r5.append(r10)
                java.lang.String r5 = r5.toString()
                com.meizu.media.camera.util.LogUtil.m15952c(r3, r5)
                int[] r3 = new int[r4]
                r3[r1] = r6
                int r5 = r7.f8631f
                r3[r21] = r5
                int r5 = r7.f8631f
                int r5 = r5 * r6
                int r5 = r5 * 3
                int r5 = r5 / r4
                r10 = r3[r1]
                r3 = r3[r21]
                boolean r12 = com.meizu.media.camera.util.DeviceHelper.f13905bE
                com.meizu.media.cameraAlgorithm.fbmodecomponent.AlorgrithmUtil.processNV21Data(r11, r5, r10, r3, r12)
                com.meizu.media.camera.util.ac$a r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                java.lang.StringBuilder r5 = new java.lang.StringBuilder
                r5.<init>()
                java.lang.String r10 = "processFB end: "
                r5.append(r10)
                long r12 = java.lang.System.currentTimeMillis()
                long r12 = r12 - r8
                r5.append(r12)
                java.lang.String r5 = r5.toString()
                com.meizu.media.camera.util.LogUtil.m15952c(r3, r5)
            L_0x02c4:
                java.io.ByteArrayOutputStream r3 = new java.io.ByteArrayOutputStream
                r5 = 1024(0x400, float:1.435E-42)
                r3.<init>(r5)
                android.graphics.YuvImage r5 = new android.graphics.YuvImage
                r12 = 17
                int r13 = r7.f8630e
                int r14 = r7.f8631f
                int[] r15 = new int[r2]
                r15[r1] = r6
                r15[r21] = r6
                r15[r4] = r6
                r10 = r5
                r10.<init>(r11, r12, r13, r14, r15)
                android.graphics.Rect r2 = new android.graphics.Rect
                int r4 = r7.f8630e
                int r6 = r7.f8631f
                r2.<init>(r1, r1, r4, r6)
                r1 = 97
                r5.compressToJpeg(r2, r1, r3)
                byte[] r1 = r3.toByteArray()
                r0.rewind()
                return r1
            */
            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.m9356a(byte[], boolean, boolean):byte[]");
        }

        /* renamed from: b */
        private void m9357b(Image image) {
            if (!PatchProxy.proxy(new Object[]{image}, this, f8613a, false, 3186, new Class[]{Image.class}, Void.TYPE).isSupported) {
                if (this.f8651z) {
                    LogUtil.m15942a(CameraControllerV2.f8305s, "mono data coming");
                    byte[] unused = CameraControllerV2.this.f8357aV = CameraControllerV2.this.m9096a(image, image.getWidth(), image.getHeight(), image.getPlanes()[0].getRowStride());
                } else {
                    LogUtil.m15942a(CameraControllerV2.f8305s, "bayer data coming");
                    byte[] unused2 = CameraControllerV2.this.f8356aU = CameraControllerV2.this.m9096a(image, image.getWidth(), image.getHeight(), image.getPlanes()[0].getRowStride());
                }
                if (!(CameraControllerV2.this.f8356aU == null || CameraControllerV2.this.f8357aV == null)) {
                    if (CameraController.f8275g != 0) {
                        new AsyncTaskEx<Void, Void, Void>() {

                            /* renamed from: a */
                            public static ChangeQuickRedirect f8652a;

                            /* renamed from: a */
                            public Void mo17658a(Void... voidArr) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{voidArr}, this, f8652a, false, 3191, new Class[]{Void[].class}, Void.class);
                                if (proxy.isSupported) {
                                    return (Void) proxy.result;
                                }
                                boolean unused = CameraControllerV2.this.f8370al = false;
                                String a = CameraUtil.m15831a(C1924b.this.f8633h);
                                String a2 = Storage.m7750a().mo18622a(a, C1924b.this.f8633h);
                                CameraControllerV2.this.m9087a(C1924b.this.f8627b, C1924b.this.f8628c, a2, a, false);
                                if (CameraController.f8275g > 0) {
                                    CameraController.f8275g--;
                                    CameraController.f8275g = CameraController.f8275g < 0 ? 0 : CameraController.f8275g;
                                    CameraControllerV2.this.f8281e.mo19041a(CameraController.f8275g);
                                }
                                CameraControllerV2.this.f8281e.mo19045a(C1924b.this.f8627b, C1924b.this.f8628c, Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_FINISHED, new Object[0]);
                                if (CameraController.f8275g > 0) {
                                    CameraControllerV2.this.m9089a(C1924b.this.f8627b, C1924b.this.f8628c, true, a2);
                                    return null;
                                }
                                CameraControllerV2.this.m9089a(C1924b.this.f8627b, C1924b.this.f8628c, false, a2);
                                return null;
                            }
                        }.mo22610a(AsyncTaskEx.f13741o, (Params[]) new Void[0]);
                    } else {
                        return;
                    }
                }
                image.close();
            }
        }

        /* renamed from: c */
        private void m9359c(Image image) {
            if (!PatchProxy.proxy(new Object[]{image}, this, f8613a, false, 3187, new Class[]{Image.class}, Void.TYPE).isSupported) {
                LogUtil.C2630a al = CameraControllerV2.f8305s;
                LogUtil.m15952c(al, "onTofPictureTaken: " + image.getWidth() + "x" + image.getHeight() + "x" + image.getPlanes()[0].getRowStride());
                byte[] unused = CameraControllerV2.this.f8356aU = CameraControllerV2.this.m9096a(image, image.getWidth(), image.getHeight(), image.getPlanes()[0].getRowStride());
                if (CameraControllerV2.this.f8281e.mo19040a(this.f8627b) == null) {
                    LogUtil.m15956e(CameraControllerV2.f8305s, "onTofPictureTaken, listener is null, return!");
                    return;
                }
                if (!(CameraControllerV2.this.f8356aU == null || CameraControllerV2.this.f8358aW == null)) {
                    if (CameraController.f8275g != 0) {
                        new AsyncTaskEx<Void, Void, Void>() {

                            /* renamed from: a */
                            public static ChangeQuickRedirect f8654a;

                            /* renamed from: a */
                            public Void mo17658a(Void... voidArr) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{voidArr}, this, f8654a, false, 3192, new Class[]{Void[].class}, Void.class);
                                if (proxy.isSupported) {
                                    return (Void) proxy.result;
                                }
                                boolean unused = CameraControllerV2.this.f8370al = false;
                                String a = CameraUtil.m15831a(C1924b.this.f8633h);
                                String a2 = Storage.m7750a().mo18622a(a, C1924b.this.f8633h);
                                CameraControllerV2.this.m9086a(C1924b.this.f8627b, C1924b.this.f8628c, a2, Storage.m7750a().mo18622a(a + "_sstof", C1924b.this.f8633h), a, false, C1924b.this.f8632g);
                                if (CameraController.f8275g > 0) {
                                    CameraController.f8275g--;
                                    CameraController.f8275g = CameraController.f8275g < 0 ? 0 : CameraController.f8275g;
                                    CameraControllerV2.this.f8281e.mo19041a(CameraController.f8275g);
                                }
                                CameraControllerV2.this.f8281e.mo19045a(C1924b.this.f8627b, C1924b.this.f8628c, Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_FINISHED, new Object[0]);
                                if (CameraController.f8275g > 0) {
                                    CameraControllerV2.this.m9089a(C1924b.this.f8627b, C1924b.this.f8628c, true, a2);
                                    return null;
                                }
                                CameraControllerV2.this.m9089a(C1924b.this.f8627b, C1924b.this.f8628c, false, a2);
                                return null;
                            }
                        }.mo22610a(AsyncTaskEx.f13741o, (Params[]) new Void[0]);
                    } else {
                        return;
                    }
                }
                image.close();
            }
        }

        /* renamed from: a */
        private void m9355a(Image image, boolean z) {
            BurstData hVar;
            Image image2 = image;
            boolean z2 = z;
            if (!PatchProxy.proxy(new Object[]{image2, new Byte(z2 ? (byte) 1 : 0)}, this, f8613a, false, 3188, new Class[]{Image.class, Boolean.TYPE}, Void.TYPE).isSupported) {
                this.f8646u++;
                if (this.f8646u > DeviceHelper.f13940bn || this.f8645t) {
                    image.close();
                    return;
                }
                if (this.f8646u == DeviceHelper.f13940bn) {
                    boolean unused = CameraControllerV2.this.f8370al = false;
                }
                int width = image.getWidth();
                int height = image.getHeight();
                int rowStride = image.getPlanes()[0].getRowStride();
                if (z2) {
                    ByteBuffer buffer = image.getPlanes()[0].getBuffer();
                    hVar = new BurstData(new byte[buffer.remaining()], false, (String) null, buffer.remaining());
                    buffer.get(hVar.mo22728a(), 0, buffer.remaining());
                } else {
                    hVar = CameraControllerV2.this.m9053a(image2, height, rowStride);
                }
                image.close();
                if (!CameraControllerV2.this.f8370al && CameraController.f8275g > 0) {
                    if (CameraController.f8274f > 0) {
                        CameraController.f8274f--;
                    }
                    if (CameraController.f8275g > 0) {
                        CameraController.f8275g--;
                        CameraController.f8275g = CameraController.f8275g < 0 ? 0 : CameraController.f8275g;
                        CameraControllerV2.this.f8281e.mo19041a(CameraController.f8275g);
                    }
                    CameraControllerV2.this.f8281e.mo19045a(this.f8627b, this.f8628c, Contants.CameraService.ResultCode.RESULT_ON_LAST_BURST_CAPTURE_FINISHED, hVar, Integer.valueOf(width), Integer.valueOf(height), Integer.valueOf(rowStride), Boolean.valueOf(z), Boolean.valueOf(CameraControllerV2.this.m9124at()));
                    this.f8645t = true;
                } else if (CameraController.f8275g > 0) {
                    CameraControllerV2.this.f8281e.mo19045a(this.f8627b, this.f8628c, Contants.CameraService.ResultCode.RESULT_ON_BURST_CAPTURE_FINISHED, hVar, Integer.valueOf(width), Integer.valueOf(height), Integer.valueOf(rowStride), Boolean.valueOf(z), Boolean.valueOf(CameraControllerV2.this.m9124at()));
                }
                LogUtil.m15952c(CameraControllerV2.f8305s, "deliver callback RESULT_ON_BURST_CAPTURE_FINISHED");
            }
        }

        /* renamed from: b */
        private void m9358b(Image image, boolean z) {
            int i;
            final Rect rect;
            final int i2;
            final byte[] bArr;
            boolean z2 = z;
            if (!PatchProxy.proxy(new Object[]{image, new Byte(z2 ? (byte) 1 : 0)}, this, f8613a, false, 3189, new Class[]{Image.class, Boolean.TYPE}, Void.TYPE).isSupported) {
                LogUtil.m15942a(CameraControllerV2.f8305s, "JpegPictureCallback mNeedFastThumbnail:" + this.f8641p);
                LogUtil.m15942a(CameraControllerV2.f8305s, "CameraImageAvailableListener this:" + this);
                if (CameraControllerV2.this.f8370al) {
                    CameraControllerV2.this.m9089a(this.f8627b, this.f8628c, false, Storage.m7750a().mo18626a(this.f8637l, CameraUtil.m15831a(this.f8633h)));
                    boolean unused = CameraControllerV2.this.f8370al = false;
                    boolean c = CameraControllerV2.this.mo19571c(this.f8636k);
                    if (c || this.f8647v || this.f8649x) {
                        boolean z3 = z2;
                        if (this.f8647v) {
                            this.f8616C = this.f8632g;
                        }
                        i = 0;
                        byte[] a = CameraControllerV2.this.m9098a(image, this.f8632g, CameraControllerV2.this.m9124at(), z, this.f8647v, this.f8643r);
                        int i3 = this.f8630e;
                        if (!z3) {
                            Rect cropRect = image.getCropRect();
                            image.close();
                            if (this.f8647v) {
                                if (this.f8632g == 90 || this.f8632g == 270) {
                                    int i4 = this.f8631f;
                                    this.f8631f = this.f8630e;
                                    this.f8630e = i4;
                                    i3 = this.f8630e;
                                }
                                this.f8632g = 0;
                            }
                            bArr = a;
                            i2 = i3;
                            rect = cropRect;
                        } else {
                            bArr = a;
                            i2 = i3;
                            rect = null;
                        }
                    } else {
                        i2 = 0;
                        boolean z4 = z2;
                        byte[] a2 = CameraControllerV2.this.m9097a(image, this.f8632g, this.f8629d, this.f8633h, CameraControllerV2.this.m9124at(), CameraControllerV2.this.f8409x, z, this.f8638m, this.f8643r);
                        if (!z4) {
                            image.close();
                            if (this.f8632g == 90 || this.f8632g == 270) {
                                int i5 = this.f8631f;
                                this.f8631f = this.f8630e;
                                this.f8630e = i5;
                            }
                            this.f8632g = 0;
                        }
                        bArr = a2;
                        rect = null;
                        i = 0;
                    }
                    if (CameraControllerV2.this.f8281e.mo19050a()) {
                        LogUtil.m15952c(CameraControllerV2.f8305s, "JpegPictureCallback:isDestroyed is false");
                    } else if (bArr == null) {
                        LogUtil.m15952c(CameraControllerV2.f8305s, "JpegPictureCallback: data is null");
                    } else {
                        final boolean z5 = z;
                        final boolean z6 = c;
                        new AsyncTaskEx<Void, Void, Void>() {

                            /* renamed from: a */
                            public static ChangeQuickRedirect f8656a;

                            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v2, resolved type: java.lang.Object[]} */
                            /* JADX WARNING: Multi-variable type inference failed */
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public java.lang.Void mo17658a(java.lang.Void... r30) {
                                /*
                                    r29 = this;
                                    r7 = r29
                                    r8 = 1
                                    java.lang.Object[] r0 = new java.lang.Object[r8]
                                    r9 = 0
                                    r0[r9] = r30
                                    com.meizu.savior.ChangeQuickRedirect r2 = f8656a
                                    java.lang.Class[] r5 = new java.lang.Class[r8]
                                    java.lang.Class<java.lang.Void[]> r1 = java.lang.Void[].class
                                    r5[r9] = r1
                                    java.lang.Class<java.lang.Void> r6 = java.lang.Void.class
                                    r3 = 0
                                    r4 = 3193(0xc79, float:4.474E-42)
                                    r1 = r29
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r0, r1, r2, r3, r4, r5, r6)
                                    boolean r1 = r0.isSupported
                                    if (r1 == 0) goto L_0x0024
                                    java.lang.Object r0 = r0.result
                                    java.lang.Void r0 = (java.lang.Void) r0
                                    return r0
                                L_0x0024:
                                    long r0 = java.lang.System.currentTimeMillis()
                                L_0x0028:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    android.hardware.camera2.TotalCaptureResult r2 = r2.f8409x
                                    if (r2 != 0) goto L_0x0046
                                    long r2 = java.lang.System.currentTimeMillis()
                                    long r2 = r2 - r0
                                    r4 = 3000(0xbb8, double:1.482E-320)
                                    int r2 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
                                    if (r2 <= 0) goto L_0x0028
                                    com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                    java.lang.String r1 = "timeOut waitting for captureResult"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                L_0x0046:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.lang.String r1 = r1.f8636k
                                    boolean r0 = r0.mo19571c((java.lang.String) r1)
                                    if (r0 != 0) goto L_0x0091
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8647v
                                    if (r0 != 0) goto L_0x0091
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8649x
                                    if (r0 != 0) goto L_0x0091
                                    boolean r0 = r2
                                    if (r0 != 0) goto L_0x0091
                                    byte[] r10 = r3
                                    r11 = 0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r12 = r0.f8629d
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r13 = r0.f8633h
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    android.hardware.camera2.TotalCaptureResult r15 = r0.f8409x
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r0 = r0.f8617D
                                    r2 = 0
                                    int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
                                    if (r0 <= 0) goto L_0x0084
                                    r16 = 1
                                    goto L_0x0086
                                L_0x0084:
                                    r16 = 0
                                L_0x0086:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8614A
                                    r17 = r0
                                    byte[] r0 = com.meizu.media.camera.Exif.m10045a(r10, r11, r12, r13, r15, r16, r17)
                                    goto L_0x0093
                                L_0x0091:
                                    byte[] r0 = r3
                                L_0x0093:
                                    r13 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r0 = r0.f8281e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r1 = r1.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r2 = r2.f8628c
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r3 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_ON_PICTURE_TOKEN_CALLBACK
                                    r4 = 13
                                    java.lang.Object[] r4 = new java.lang.Object[r4]
                                    r4[r9] = r13
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r5 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r5 = r5.f8629d
                                    r4[r8] = r5
                                    r5 = 2
                                    java.lang.Boolean r6 = java.lang.Boolean.valueOf(r9)
                                    r4[r5] = r6
                                    r5 = 3
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r6 = r6.f8630e
                                    java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
                                    r4[r5] = r6
                                    r5 = 4
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r6 = r6.f8631f
                                    java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
                                    r4[r5] = r6
                                    r5 = 5
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r10 = r6.f8633h
                                    java.lang.Long r6 = java.lang.Long.valueOf(r10)
                                    r4[r5] = r6
                                    r5 = 6
                                    int r6 = r4
                                    java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
                                    r4[r5] = r6
                                    r5 = 7
                                    android.graphics.Rect r6 = r5
                                    r4[r5] = r6
                                    r5 = 8
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    android.hardware.camera2.TotalCaptureResult r6 = r6.f8409x
                                    r4[r5] = r6
                                    r5 = 9
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r6 = r6.f8615B
                                    r4[r5] = r6
                                    r5 = 10
                                    boolean r6 = r6
                                    java.lang.Boolean r6 = java.lang.Boolean.valueOf(r6)
                                    r4[r5] = r6
                                    r5 = 11
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r6 = r6.f8647v
                                    java.lang.Boolean r6 = java.lang.Boolean.valueOf(r6)
                                    r4[r5] = r6
                                    r5 = 12
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    boolean r6 = r6.m9124at()
                                    java.lang.Boolean r6 = java.lang.Boolean.valueOf(r6)
                                    r4[r5] = r6
                                    r0.mo19045a(r1, r2, r3, r4)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8642q
                                    r1 = 0
                                    if (r0 == 0) goto L_0x0148
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    if (r0 <= 0) goto L_0x0147
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    int r0 = r0 - r8
                                    com.meizu.media.camera.camcontroller.CameraController.f8275g = r0
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    if (r0 >= 0) goto L_0x0138
                                    goto L_0x013a
                                L_0x0138:
                                    int r9 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                L_0x013a:
                                    com.meizu.media.camera.camcontroller.CameraController.f8275g = r9
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r0 = r0.f8281e
                                    int r2 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    r0.mo19041a((int) r2)
                                L_0x0147:
                                    return r1
                                L_0x0148:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8647v
                                    if (r0 == 0) goto L_0x0254
                                    int r0 = r4
                                    android.graphics.Rect r2 = r5
                                    com.meizu.media.camera.util.ac$a r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                    java.lang.StringBuilder r3 = new java.lang.StringBuilder
                                    r3.<init>()
                                    java.lang.String r4 = "onBokehPictureTaken:nv21data size"
                                    r3.append(r4)
                                    int r4 = r13.length
                                    r3.append(r4)
                                    java.lang.String r4 = "rowstrite:"
                                    r3.append(r4)
                                    r3.append(r0)
                                    java.lang.String r0 = r3.toString()
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r2, (java.lang.String) r0)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8639n
                                    if (r0 == 0) goto L_0x0182
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r2 = r0.f8633h
                                    java.lang.String r0 = com.meizu.media.camera.util.CameraUtil.m15831a((long) r2)
                                    goto L_0x018a
                                L_0x0182:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r2 = r0.f8633h
                                    java.lang.String r0 = com.meizu.media.camera.util.CameraUtil.m15874b((long) r2)
                                L_0x018a:
                                    com.meizu.media.camera.a.b r2 = new com.meizu.media.camera.a.b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    android.hardware.camera2.TotalCaptureResult r3 = r3.f8409x
                                    r2.<init>(r3)
                                    com.meizu.media.camera.a.f r3 = new com.meizu.media.camera.a.f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r4 = r4.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r5 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r5 = r5.f8628c
                                    r3.<init>(r4, r5)
                                    com.meizu.media.camera.a.f r3 = r3.mo18733a((byte[]) r13)
                                    com.meizu.media.camera.a.f r0 = r3.mo18731a((java.lang.String) r0)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r3 = r3.f8630e
                                    com.meizu.media.camera.a.f r0 = r0.mo18734b((int) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r3 = r3.f8631f
                                    com.meizu.media.camera.a.f r0 = r0.mo18737c((int) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r3 = r3.f8632g
                                    com.meizu.media.camera.a.f r0 = r0.mo18740d((int) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r3 = r3.f8633h
                                    com.meizu.media.camera.a.f r0 = r0.mo18724a((long) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r3 = r3.f8634i
                                    com.meizu.media.camera.a.f r0 = r0.mo18723a((int) r3)
                                    int r3 = r4
                                    com.meizu.media.camera.a.f r0 = r0.mo18743e((int) r3)
                                    android.graphics.Rect r3 = r5
                                    com.meizu.media.camera.a.f r0 = r0.mo18725a((android.graphics.Rect) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r3 = r3.f8615B
                                    com.meizu.media.camera.a.f r0 = r0.mo18730a((com.meizu.media.camera.p064a.XmpMetaData) r3)
                                    com.meizu.media.camera.a.f r0 = r0.mo18728a((com.meizu.media.camera.p064a.CaptureResultData) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r2 = r2.f8616C
                                    com.meizu.media.camera.a.f r0 = r0.mo18745f((int) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    boolean r2 = r2.f8380av
                                    com.meizu.media.camera.a.f r0 = r0.mo18747g(r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    java.lang.String r2 = r2.f8381aw
                                    com.meizu.media.camera.a.f r0 = r0.mo18735b((java.lang.String) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    java.lang.String r2 = r2.f8382ax
                                    com.meizu.media.camera.a.f r0 = r0.mo18738c((java.lang.String) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r2 = r2.f8637l
                                    com.meizu.media.camera.a.f r0 = r0.mo18732a((boolean) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r2 = r2.f8638m
                                    com.meizu.media.camera.a.f r0 = r0.mo18736b((boolean) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r2 = r2.f8639n
                                    com.meizu.media.camera.a.f r0 = r0.mo18742d((boolean) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r2 = r2.f8629d
                                    com.meizu.media.camera.a.f r0 = r0.mo18727a((android.location.Location) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r2 = r2.f8614A
                                    com.meizu.media.camera.a.f r0 = r0.mo18750j(r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r2 = r2.f8641p
                                    com.meizu.media.camera.a.f r0 = r0.mo18748h(r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r2 = r2.f8281e
                                    r2.mo19056c(r0)
                                    r0 = r1
                                    goto L_0x05b8
                                L_0x0254:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8648w
                                    if (r0 == 0) goto L_0x02f0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r10 = r0.f8281e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r11 = r0.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r0 = r0.f8630e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r14 = r2.f8631f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r15 = r2.f8632g
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r2 = r2.f8633h
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r4 = r4.f8634i
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r5 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r5 = r5.f8637l
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r6 = r6.f8629d
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r12 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r12 = r12.f8641p
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r1 = r1.f8628c
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r9 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r9 = r9.f8615B
                                    r21 = r12
                                    r12 = r13
                                    r13 = r0
                                    r16 = r2
                                    r18 = r4
                                    r19 = r5
                                    r20 = r6
                                    r22 = r1
                                    r23 = r9
                                    r10.mo19049a((java.util.UUID) r11, (byte[]) r12, (int) r13, (int) r14, (int) r15, (long) r16, (int) r18, (boolean) r19, (android.location.Location) r20, (boolean) r21, (com.meizu.media.camera.util.Contants.CameraService.RequestCode) r22, (com.meizu.media.camera.p064a.XmpMetaData) r23)
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    if (r0 <= 0) goto L_0x02d7
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    int r0 = r0 - r8
                                    com.meizu.media.camera.camcontroller.CameraController.f8275g = r0
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    if (r0 >= 0) goto L_0x02ae
                                    r9 = 0
                                    goto L_0x02b0
                                L_0x02ae:
                                    int r9 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                L_0x02b0:
                                    com.meizu.media.camera.camcontroller.CameraController.f8275g = r9
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r0 = r0.f8281e
                                    int r1 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    r0.mo19041a((int) r1)
                                    com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                    java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                    r1.<init>()
                                    java.lang.String r2 = "after JpegPictureCallback sCapturingTaskNum:"
                                    r1.append(r2)
                                    int r2 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    r1.append(r2)
                                    java.lang.String r1 = r1.toString()
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                L_0x02d7:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r0 = r0.f8281e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r1 = r1.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r2 = r2.f8628c
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r3 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_FINISHED
                                    r4 = 0
                                    java.lang.Object[] r4 = new java.lang.Object[r4]
                                    r0.mo19045a(r1, r2, r3, r4)
                                L_0x02ed:
                                    r0 = 0
                                    goto L_0x05b8
                                L_0x02f0:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8641p
                                    if (r0 == 0) goto L_0x0424
                                    com.meizu.media.camera.d.c r21 = com.meizu.media.camera.Exif.m10044a((byte[]) r13)
                                    int r20 = com.meizu.media.camera.Exif.m10043a((com.meizu.media.camera.p067d.ExifInterface) r21)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r0 = r0.f8632g
                                    int r0 = r0 + r20
                                    int r0 = r0 % 180
                                    if (r0 != 0) goto L_0x0315
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r0 = r0.f8630e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8631f
                                L_0x0310:
                                    r18 = r0
                                    r19 = r1
                                    goto L_0x031e
                                L_0x0315:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r0 = r0.f8631f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8630e
                                    goto L_0x0310
                                L_0x031e:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8639n
                                    if (r0 == 0) goto L_0x032e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r0 = r0.f8633h
                                    java.lang.String r0 = com.meizu.media.camera.util.CameraUtil.m15831a((long) r0)
                                L_0x032c:
                                    r14 = r0
                                    goto L_0x0337
                                L_0x032e:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r0 = r0.f8633h
                                    java.lang.String r0 = com.meizu.media.camera.util.CameraUtil.m15874b((long) r0)
                                    goto L_0x032c
                                L_0x0337:
                                    boolean r0 = r6
                                    if (r0 == 0) goto L_0x03e0
                                    com.meizu.media.camera.a.f r0 = new com.meizu.media.camera.a.f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r1 = r1.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r2 = r2.f8628c
                                    r0.<init>(r1, r2)
                                    com.meizu.media.camera.a.f r0 = r0.mo18733a((byte[]) r13)
                                    com.meizu.media.camera.a.f r0 = r0.mo18731a((java.lang.String) r14)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8630e
                                    com.meizu.media.camera.a.f r0 = r0.mo18734b((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8631f
                                    com.meizu.media.camera.a.f r0 = r0.mo18737c((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8632g
                                    com.meizu.media.camera.a.f r0 = r0.mo18740d((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r1 = r1.f8633h
                                    com.meizu.media.camera.a.f r0 = r0.mo18724a((long) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8634i
                                    com.meizu.media.camera.a.f r0 = r0.mo18723a((int) r1)
                                    int r1 = r4
                                    com.meizu.media.camera.a.f r0 = r0.mo18743e((int) r1)
                                    android.graphics.Rect r1 = r5
                                    com.meizu.media.camera.a.f r0 = r0.mo18725a((android.graphics.Rect) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r1 = r1.f8615B
                                    com.meizu.media.camera.a.f r0 = r0.mo18730a((com.meizu.media.camera.p064a.XmpMetaData) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    android.hardware.camera2.TotalCaptureResult r1 = r1.f8409x
                                    com.meizu.media.camera.a.f r0 = r0.mo18726a((android.hardware.camera2.TotalCaptureResult) r1)
                                    com.meizu.media.camera.a.f r0 = r0.mo18746f((boolean) r8)
                                    r1 = 0
                                    com.meizu.media.camera.a.f r0 = r0.mo18745f((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8637l
                                    com.meizu.media.camera.a.f r0 = r0.mo18749i(r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    boolean r1 = r1.m9124at()
                                    com.meizu.media.camera.a.f r0 = r0.mo18732a((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8638m
                                    com.meizu.media.camera.a.f r0 = r0.mo18736b((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8639n
                                    com.meizu.media.camera.a.f r0 = r0.mo18742d((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r1 = r1.f8629d
                                    com.meizu.media.camera.a.f r0 = r0.mo18727a((android.location.Location) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8614A
                                    com.meizu.media.camera.a.f r0 = r0.mo18750j(r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r1 = r1.f8281e
                                    r1.mo19052b((com.meizu.media.camera.p064a.ParamData) r0)
                                    goto L_0x02ed
                                L_0x03e0:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r10 = r0.f8281e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r11 = r0.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r12 = r0.f8628c
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r0 = r0.f8633h
                                    r15 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r0 = r0.f8629d
                                    r17 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r0 = r0.f8615B
                                    r22 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8637l
                                    r23 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8638m
                                    r24 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r0 = r0.f8632g
                                    r25 = r0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8639n
                                    r26 = r0
                                    r27 = 0
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r0 = r0.f8643r
                                    r28 = r0
                                    r10.mo19046a(r11, r12, r13, r14, r15, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28)
                                    goto L_0x02ed
                                L_0x0424:
                                    boolean r0 = r6
                                    if (r0 == 0) goto L_0x04db
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r0 = r0.f8630e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8631f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r2 = r2.f8639n
                                    if (r2 == 0) goto L_0x043f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r2 = r2.f8633h
                                    java.lang.String r2 = com.meizu.media.camera.util.CameraUtil.m15831a((long) r2)
                                    goto L_0x0447
                                L_0x043f:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r2 = r2.f8633h
                                    java.lang.String r2 = com.meizu.media.camera.util.CameraUtil.m15874b((long) r2)
                                L_0x0447:
                                    com.meizu.media.camera.a.f r3 = new com.meizu.media.camera.a.f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r4 = r4.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r5 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r5 = r5.f8628c
                                    r3.<init>(r4, r5)
                                    com.meizu.media.camera.a.f r3 = r3.mo18733a((byte[]) r13)
                                    com.meizu.media.camera.a.f r2 = r3.mo18731a((java.lang.String) r2)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r3 = r3.f8633h
                                    com.meizu.media.camera.a.f r2 = r2.mo18724a((long) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r3 = r3.f8634i
                                    com.meizu.media.camera.a.f r2 = r2.mo18723a((int) r3)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r3 = r3.f8629d
                                    com.meizu.media.camera.a.f r2 = r2.mo18727a((android.location.Location) r3)
                                    com.meizu.media.camera.a.f r0 = r2.mo18734b((int) r0)
                                    com.meizu.media.camera.a.f r0 = r0.mo18737c((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    boolean r1 = r1.m9124at()
                                    com.meizu.media.camera.a.f r0 = r0.mo18732a((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8638m
                                    com.meizu.media.camera.a.f r0 = r0.mo18736b((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8632g
                                    com.meizu.media.camera.a.f r0 = r0.mo18740d((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8639n
                                    com.meizu.media.camera.a.f r0 = r0.mo18742d((boolean) r1)
                                    int r1 = r4
                                    com.meizu.media.camera.a.f r0 = r0.mo18743e((int) r1)
                                    android.graphics.Rect r1 = r5
                                    com.meizu.media.camera.a.f r0 = r0.mo18725a((android.graphics.Rect) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    android.hardware.camera2.TotalCaptureResult r1 = r1.f8409x
                                    com.meizu.media.camera.a.f r0 = r0.mo18726a((android.hardware.camera2.TotalCaptureResult) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r1 = r1.f8615B
                                    com.meizu.media.camera.a.f r0 = r0.mo18730a((com.meizu.media.camera.p064a.XmpMetaData) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8637l
                                    com.meizu.media.camera.a.f r0 = r0.mo18749i(r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8614A
                                    com.meizu.media.camera.a.f r0 = r0.mo18750j(r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r1 = r1.f8281e
                                    r1.mo19052b((com.meizu.media.camera.p064a.ParamData) r0)
                                    goto L_0x02ed
                                L_0x04db:
                                    com.meizu.media.camera.a.f r0 = new com.meizu.media.camera.a.f
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r1 = r1.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r2 = r2.f8628c
                                    r0.<init>(r1, r2)
                                    com.meizu.media.camera.a.f r0 = r0.mo18733a((byte[]) r13)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8630e
                                    com.meizu.media.camera.a.f r0 = r0.mo18734b((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8631f
                                    com.meizu.media.camera.a.f r0 = r0.mo18737c((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8632g
                                    com.meizu.media.camera.a.f r0 = r0.mo18740d((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    long r1 = r1.f8633h
                                    com.meizu.media.camera.a.f r0 = r0.mo18724a((long) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    int r1 = r1.f8634i
                                    com.meizu.media.camera.a.f r0 = r0.mo18723a((int) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.d r1 = r1.f8635j
                                    com.meizu.media.camera.a.f r0 = r0.mo18729a((com.meizu.media.camera.p064a.FaceBeautyData) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.a.g r1 = r1.f8615B
                                    com.meizu.media.camera.a.f r0 = r0.mo18730a((com.meizu.media.camera.p064a.XmpMetaData) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.lang.String r1 = r1.f8636k
                                    com.meizu.media.camera.a.f r0 = r0.mo18741d((java.lang.String) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8637l
                                    com.meizu.media.camera.a.f r0 = r0.mo18732a((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8639n
                                    com.meizu.media.camera.a.f r0 = r0.mo18742d((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8640o
                                    com.meizu.media.camera.a.f r0 = r0.mo18744e((boolean) r1)
                                    r1 = 0
                                    com.meizu.media.camera.a.f r0 = r0.mo18739c((boolean) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    android.location.Location r1 = r1.f8629d
                                    com.meizu.media.camera.a.f r0 = r0.mo18727a((android.location.Location) r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    boolean r1 = r1.f8641p
                                    com.meizu.media.camera.a.f r0 = r0.mo18748h(r1)
                                    boolean r1 = r2
                                    com.meizu.media.camera.a.f r0 = r0.mo18751k(r1)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r1 = r1.f8281e
                                    r1.mo19042a((com.meizu.media.camera.p064a.ParamData) r0)
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    if (r0 <= 0) goto L_0x05a0
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    int r0 = r0 - r8
                                    com.meizu.media.camera.camcontroller.CameraController.f8275g = r0
                                    int r0 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    if (r0 >= 0) goto L_0x0577
                                    r9 = 0
                                    goto L_0x0579
                                L_0x0577:
                                    int r9 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                L_0x0579:
                                    com.meizu.media.camera.camcontroller.CameraController.f8275g = r9
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r0 = r0.f8281e
                                    int r1 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    r0.mo19041a((int) r1)
                                    com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                    java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                    r1.<init>()
                                    java.lang.String r2 = "after JpegPictureCallback sCapturingTaskNum:"
                                    r1.append(r2)
                                    int r2 = com.meizu.media.camera.camcontroller.CameraController.f8275g
                                    r1.append(r2)
                                    java.lang.String r1 = r1.toString()
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                L_0x05a0:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                    com.meizu.media.camera.b$a r0 = r0.f8281e
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    java.util.UUID r1 = r1.f8627b
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.this
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r2 = r2.f8628c
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r3 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_FINISHED
                                    r4 = 0
                                    java.lang.Object[] r4 = new java.lang.Object[r4]
                                    r0.mo19045a(r1, r2, r3, r4)
                                    goto L_0x02ed
                                L_0x05b8:
                                    return r0
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C1924b.C19273.mo17658a(java.lang.Void[]):java.lang.Void");
                            }
                        }.mo22610a(AsyncTaskEx.f13741o, (Params[]) new Void[i]);
                    }
                }
            }
        }
    }

    /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$d */
    private class C1929d extends CameraCaptureSession.CaptureCallback {

        /* renamed from: a */
        public static ChangeQuickRedirect f8669a;
        /* access modifiers changed from: private */

        /* renamed from: c */
        public C1923a f8671c;
        /* access modifiers changed from: private */

        /* renamed from: d */
        public C1934g f8672d;

        /* renamed from: e */
        private TotalCaptureResult f8673e;
        /* access modifiers changed from: private */

        /* renamed from: f */
        public int f8674f;
        /* access modifiers changed from: private */

        /* renamed from: g */
        public int f8675g;
        /* access modifiers changed from: private */

        /* renamed from: h */
        public int f8676h;
        /* access modifiers changed from: private */

        /* renamed from: i */
        public int f8677i;
        /* access modifiers changed from: private */

        /* renamed from: j */
        public int f8678j;

        public void onCaptureProgressed(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull CaptureResult captureResult) {
        }

        private C1929d() {
            this.f8674f = -1;
            this.f8675g = -1;
            this.f8676h = -1;
            this.f8677i = 1;
            this.f8678j = -1;
        }

        /* renamed from: a */
        public void mo19640a(C1923a aVar) {
            this.f8671c = aVar;
        }

        /* renamed from: a */
        public void mo19641a(C1934g gVar) {
            this.f8672d = gVar;
        }

        public void onCaptureStarted(CameraCaptureSession cameraCaptureSession, CaptureRequest captureRequest, long j, long j2) {
            Object[] objArr = {cameraCaptureSession, captureRequest, new Long(j), new Long(j2)};
            ChangeQuickRedirect changeQuickRedirect = f8669a;
            if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3198, new Class[]{CameraCaptureSession.class, CaptureRequest.class, Long.TYPE, Long.TYPE}, Void.TYPE).isSupported && CameraControllerV2.this.f8396bm != null) {
                CameraControllerV2.this.f8396bm.mo19550b(j);
            }
        }

        public void onCaptureCompleted(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull TotalCaptureResult totalCaptureResult) {
            Class[] clsArr = {CameraCaptureSession.class, CaptureRequest.class, TotalCaptureResult.class};
            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, totalCaptureResult}, this, f8669a, false, 3199, clsArr, Void.TYPE).isSupported) {
                this.f8673e = totalCaptureResult;
                CameraControllerV2.this.mo19564a(cameraCaptureSession, captureRequest, (CaptureResult) totalCaptureResult);
                m9371a((CaptureResult) totalCaptureResult);
            }
        }

        public void onCaptureBufferLost(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull Surface surface, long j) {
            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, surface, new Long(j)}, this, f8669a, false, 3200, new Class[]{CameraCaptureSession.class, CaptureRequest.class, Surface.class, Long.TYPE}, Void.TYPE).isSupported) {
                LogUtil.m15942a(CameraControllerV2.f8305s, "onCaptureBufferLost");
            }
        }

        public void onCaptureFailed(CameraCaptureSession cameraCaptureSession, CaptureRequest captureRequest, CaptureFailure captureFailure) {
            Class[] clsArr = {CameraCaptureSession.class, CaptureRequest.class, CaptureFailure.class};
            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, captureFailure}, this, f8669a, false, 3201, clsArr, Void.TYPE).isSupported) {
                super.onCaptureFailed(cameraCaptureSession, captureRequest, captureFailure);
                if (this.f8672d != null) {
                    this.f8672d.onCaptureFailed(cameraCaptureSession, captureRequest, captureFailure);
                }
            }
        }

        /* renamed from: a */
        private void m9371a(CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3202, new Class[]{CaptureResult.class}, Void.TYPE).isSupported) {
                m9380c(captureResult);
                m9383d(captureResult);
                m9385e(captureResult);
                m9386f(captureResult);
                m9387g(captureResult);
                m9388h(captureResult);
                m9389i(captureResult);
                m9390j(captureResult);
                m9391k(captureResult);
                m9376b(captureResult);
            }
        }

        /* renamed from: b */
        private void m9376b(CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3203, new Class[]{CaptureResult.class}, Void.TYPE).isSupported) {
                try {
                    if (CameraControllerV2.this.f8338aC != null) {
                        if (!CameraModeType.m10983m(CameraModeType.ModeType.BARCODE) && ((!CameraModeType.m10983m(CameraModeType.ModeType.AUTO) && !CameraModeType.m10983m(CameraModeType.ModeType.FUNNY_SNAP) && !CameraModeType.m10983m(CameraModeType.ModeType.PORTRAIT) && !CameraModeType.m10983m(CameraModeType.ModeType.TOF)) || CameraControllerV2.this.f8311B.mo19733b() != 1)) {
                            if (!CameraControllerV2.this.f8338aC.mo18559a()) {
                                return;
                            }
                            if (!DeviceHelper.f13895av && !DeviceHelper.f13896aw) {
                                return;
                            }
                        }
                        Object obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.AE_ISO));
                        if (obj != null) {
                            CameraControllerV2.this.f8338aC.mo18561b(((Integer) obj).intValue());
                        }
                    }
                } catch (NullPointerException unused) {
                }
            }
        }

        /* JADX WARNING: Removed duplicated region for block: B:22:0x007a  */
        /* JADX WARNING: Removed duplicated region for block: B:28:? A[RETURN, SYNTHETIC] */
        /* renamed from: c */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        private void m9380c(android.hardware.camera2.CaptureResult r9) {
            /*
                r8 = this;
                r0 = 1
                java.lang.Object[] r1 = new java.lang.Object[r0]
                r2 = 0
                r1[r2] = r9
                com.meizu.savior.ChangeQuickRedirect r3 = f8669a
                java.lang.Class[] r6 = new java.lang.Class[r0]
                java.lang.Class<android.hardware.camera2.CaptureResult> r0 = android.hardware.camera2.CaptureResult.class
                r6[r2] = r0
                java.lang.Class r7 = java.lang.Void.TYPE
                r4 = 0
                r5 = 3204(0xc84, float:4.49E-42)
                r2 = r8
                com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                boolean r0 = r0.isSupported
                if (r0 == 0) goto L_0x001d
                return
            L_0x001d:
                com.meizu.media.camera.mode.CameraModeType$ModeType r0 = com.meizu.media.camera.mode.CameraModeType.ModeType.AUTO
                boolean r0 = com.meizu.media.camera.mode.CameraModeType.m10983m((com.meizu.media.camera.mode.CameraModeType.ModeType) r0)
                if (r0 == 0) goto L_0x008c
                if (r9 == 0) goto L_0x008c
                boolean r0 = com.meizu.media.camera.util.DeviceHelper.f13851aD
                if (r0 == 0) goto L_0x008c
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION
                android.hardware.camera2.CaptureResult$Key r0 = r0.mo19562a((com.meizu.media.camera.util.Contants.CameraV2Key) r1)
                java.lang.Object r0 = r9.get(r0)
                r1 = 0
                int[] r2 = com.meizu.media.camera.util.DeviceHelper.f13934bh
                int r2 = r2.length
                if (r2 != 0) goto L_0x004a
                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ IllegalArgumentException -> 0x004a }
                com.meizu.media.camera.util.Contants$CameraV2Key r3 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION_OUT     // Catch:{ IllegalArgumentException -> 0x004a }
                android.hardware.camera2.CaptureResult$Key r2 = r2.mo19562a((com.meizu.media.camera.util.Contants.CameraV2Key) r3)     // Catch:{ IllegalArgumentException -> 0x004a }
                java.lang.Object r9 = r9.get(r2)     // Catch:{ IllegalArgumentException -> 0x004a }
                goto L_0x004b
            L_0x004a:
                r9 = r1
            L_0x004b:
                r1 = 2
                if (r0 == 0) goto L_0x006c
                java.lang.String r0 = r0.toString()
                java.lang.String r2 = "1"
                boolean r0 = r0.equals(r2)
                if (r0 == 0) goto L_0x006c
                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.util.Contants$CameraV2Key r2 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION
                java.lang.String r2 = r2.getKeyName()
                java.lang.String r3 = "0"
                boolean[] r4 = new boolean[r1]
                r4 = {1, 0} // fill-array
                r0.mo19471a((java.lang.String) r2, (java.lang.String) r3, (boolean[]) r4)
            L_0x006c:
                if (r9 == 0) goto L_0x008c
                java.lang.String r9 = r9.toString()
                java.lang.String r0 = "1"
                boolean r9 = r9.equals(r0)
                if (r9 == 0) goto L_0x008c
                com.meizu.media.camera.camcontroller.CameraControllerV2 r9 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION_OUT
                java.lang.String r0 = r0.getKeyName()
                java.lang.String r2 = "0"
                boolean[] r1 = new boolean[r1]
                r1 = {1, 0} // fill-array
                r9.mo19471a((java.lang.String) r0, (java.lang.String) r2, (boolean[]) r1)
            L_0x008c:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C1929d.m9380c(android.hardware.camera2.CaptureResult):void");
        }

        /* renamed from: d */
        private void m9383d(CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3205, new Class[]{CaptureResult.class}, Void.TYPE).isSupported && DeviceHelper.f14018dj == DeviceHelper.EIS_TYPE.INVENSENSE) {
                Object obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.STOP_EIS));
                if (!(CameraControllerV2.this.f8325P instanceof CameraConstrainedHighSpeedCaptureSession) && obj != null && obj.equals(2)) {
                    LogUtil.C2630a al = CameraControllerV2.f8305s;
                    LogUtil.m15942a(al, "STOP_EIS is " + captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.STOP_EIS)) + " open EIS");
                    if (CameraControllerV2.this.f8325P != null) {
                        AsyncTaskEx.f13744r.mo22621a((String) null, new Runnable() {
                            public final void run() {
                                CameraControllerV2.C1929d.this.m9379c();
                            }
                        });
                        AsyncTaskEx.f13744r.mo22622a((String) null);
                        try {
                            Thread.sleep(40);
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        }

        /* access modifiers changed from: private */
        /* renamed from: c */
        public /* synthetic */ void m9379c() {
            if (!PatchProxy.proxy(new Object[0], this, f8669a, false, 3214, new Class[0], Void.TYPE).isSupported) {
                try {
                    if (CameraControllerV2.this.f8325P != null) {
                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.STOP_EIS), 0);
                        CameraControllerV2.this.f8325P.capture(CameraControllerV2.this.f8323N.build(), CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                    }
                } catch (CameraAccessException e) {
                    e.printStackTrace();
                }
            }
        }

        /* renamed from: e */
        private void m9385e(CaptureResult captureResult) {
            Object obj;
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3206, new Class[]{CaptureResult.class}, Void.TYPE).isSupported && CameraModeType.m10983m(CameraModeType.ModeType.PORTRAIT) && captureResult != null && CameraControllerV2.f8299aX == null && (obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.DUAL_OPT_DATA))) != null) {
                byte[] unused = CameraControllerV2.f8299aX = (byte[]) obj;
            }
        }

        /* renamed from: f */
        private void m9386f(CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3207, new Class[]{CaptureResult.class}, Void.TYPE).isSupported && CameraModeType.m10983m(CameraModeType.ModeType.TOF) && CameraControllerV2.this.f8311B != null && CameraControllerV2.this.f8311B.mo19733b() != 1) {
                CameraControllerV2.this.m9069a(captureResult, CameraControllerV2.this.f8287m.x, CameraControllerV2.this.f8287m.y, DeviceHelper.f14009da, DeviceHelper.f14010db);
                if (CameraControllerV2.this.f8396bm != null) {
                    CameraControllerV2.this.f8396bm.mo19547a(CameraControllerV2.this.f8395bl);
                }
            }
        }

        /* renamed from: g */
        private void m9387g(final CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3208, new Class[]{CaptureResult.class}, Void.TYPE).isSupported) {
                AsyncTaskEx.f13744r.mo22621a((String) null, new Runnable() {

                    /* renamed from: a */
                    public static ChangeQuickRedirect f8679a;

                    public void run() {
                        Face[] faceArr;
                        if (!PatchProxy.proxy(new Object[0], this, f8679a, false, 3215, new Class[0], Void.TYPE).isSupported && CameraControllerV2.this.f8336aA && CameraControllerV2.this.f8337aB != null && captureResult != null && (faceArr = (Face[]) captureResult.get(CaptureResult.STATISTICS_FACES)) != null) {
                            CameraController.C1880f[] fVarArr = new CameraController.C1880f[faceArr.length];
                            for (int i = 0; i < faceArr.length; i++) {
                                fVarArr[i] = new C1933f(faceArr[i]);
                            }
                            CameraControllerV2.this.f8337aB.mo19552a(fVarArr, (CameraProxy) CameraControllerV2.this.f8311B);
                        }
                    }
                });
            }
        }

        /* renamed from: a */
        public TotalCaptureResult mo19639a() {
            return this.f8673e;
        }

        /* renamed from: h */
        private void m9388h(CaptureResult captureResult) {
            Object obj;
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3209, new Class[]{CaptureResult.class}, Void.TYPE).isSupported && (obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.HDR_DETECTED))) != null) {
                int intValue = ((Integer) obj).intValue();
                if (CameraControllerV2.this.f8342aG != null && CameraControllerV2.this.f8342aG == CameraController.HdrMode.AUTO && CameraControllerV2.this.f8338aC != null && this.f8674f != intValue) {
                    CameraControllerV2.this.f8338aC.mo18556a(intValue);
                    this.f8674f = intValue;
                    this.f8678j = -1;
                }
            }
        }

        /* renamed from: b */
        public void mo19642b() {
            this.f8674f = -1;
        }

        /* renamed from: i */
        private void m9389i(CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3210, new Class[]{CaptureResult.class}, Void.TYPE).isSupported) {
                Object obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.AI_ASD_RESULTS));
                Object obj2 = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.AE_ISO));
                int intValue = obj2 != null ? ((Integer) obj2).intValue() : 0;
                if (obj != null) {
                    int[] iArr = (int[]) obj;
                    if (intValue > 1200 && CameraModeType.m10985n(CameraModeType.ModeType.SUPER_NIGHT) && !CameraModeType.m10957c(CameraModeType.ModeType.SUPER_NIGHT)) {
                        iArr[0] = Contants.AsdSceneType.SUPERNIGHT.getId();
                        if (CameraControllerV2.this.f8393bj != 0 && System.currentTimeMillis() - CameraControllerV2.this.f8393bj <= 2000) {
                            long unused = CameraControllerV2.this.f8393bj = System.currentTimeMillis();
                        }
                    }
                    if ((CameraControllerV2.this.f8393bj != 0 && System.currentTimeMillis() - CameraControllerV2.this.f8393bj <= 2000) || iArr[0] == this.f8675g || CameraControllerV2.this.f8338aC == null || !CameraControllerV2.this.f8345aJ) {
                        return;
                    }
                    if (intValue <= 1200 || !CameraModeType.m10985n(CameraModeType.ModeType.SUPER_NIGHT) || CameraModeType.m10957c(CameraModeType.ModeType.SUPER_NIGHT)) {
                        this.f8675g = iArr[0];
                        CameraControllerV2.this.f8338aC.mo18557a(Contants.AsdSceneType.convertAsdSceneType(this.f8675g));
                        long unused2 = CameraControllerV2.this.f8393bj = 0;
                        return;
                    }
                    this.f8675g = Contants.AsdSceneType.SUPERNIGHT.getId();
                    CameraControllerV2.this.f8338aC.mo18557a(Contants.AsdSceneType.SUPERNIGHT);
                    return;
                }
                this.f8675g = -1;
                long unused3 = CameraControllerV2.this.f8393bj = 0;
            }
        }

        /* renamed from: j */
        private void m9390j(final CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3211, new Class[]{CaptureResult.class}, Void.TYPE).isSupported) {
                AsyncTaskEx.f13744r.mo22621a((String) null, new Runnable() {

                    /* renamed from: a */
                    public static ChangeQuickRedirect f8682a;

                    public void run() {
                        if (!PatchProxy.proxy(new Object[0], this, f8682a, false, 3216, new Class[0], Void.TYPE).isSupported) {
                            Object obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.MFNR_DETECTED));
                            if (obj != null) {
                                int intValue = ((Integer) obj).intValue();
                                if (!(intValue == C1929d.this.f8676h || CameraControllerV2.this.f8339aD == null)) {
                                    int unused = C1929d.this.f8676h = intValue;
                                    CameraControllerV2.this.f8339aD.onSceneModeDetection(C1929d.this.f8676h);
                                }
                                C1929d.this.m9372a(captureResult, intValue);
                                return;
                            }
                            int unused2 = C1929d.this.f8676h = -1;
                        }
                    }
                });
            }
        }

        /* access modifiers changed from: private */
        /* renamed from: a */
        public void m9372a(CaptureResult captureResult, int i) {
            int i2 = 0;
            if (!PatchProxy.proxy(new Object[]{captureResult, new Integer(i)}, this, f8669a, false, 3212, new Class[]{CaptureResult.class, Integer.TYPE}, Void.TYPE).isSupported) {
                Object obj = captureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.AE_ISO));
                if (obj != null) {
                    if (DeviceHelper.f13845Y == -1 || ((Integer) obj).intValue() <= DeviceHelper.f13845Y || i < 1) {
                        i2 = 1;
                    }
                    if (CameraControllerV2.this.f8340aE == null) {
                        return;
                    }
                    if (i2 != this.f8677i && CameraControllerV2.this.f8346aK) {
                        this.f8677i = i2;
                        CameraControllerV2.this.f8340aE.onMeizuMetaDataNotify(401, this.f8677i);
                    } else if (!CameraControllerV2.this.f8346aK) {
                        CameraControllerV2.this.f8340aE.onMeizuMetaDataNotify(401, 1);
                        this.f8677i = -1;
                    }
                } else {
                    this.f8677i = -1;
                }
            }
        }

        /* renamed from: k */
        private void m9391k(CaptureResult captureResult) {
            Object obj;
            boolean z = true;
            if (!PatchProxy.proxy(new Object[]{captureResult}, this, f8669a, false, 3213, new Class[]{CaptureResult.class}, Void.TYPE).isSupported && (obj = captureResult.get(CaptureResult.CONTROL_AE_STATE)) != null) {
                try {
                    int i = ((Integer) obj).intValue() == 4 ? 1 : 0;
                    if (CameraControllerV2.this.f8338aC != null) {
                        if (CameraControllerV2.this.f8341aF != CameraController.FlashMode.FLASH_MODE_AUTO) {
                            i = 0;
                        }
                        if (this.f8678j != i) {
                            this.f8678j = i;
                            CameraController.C1876c q = CameraControllerV2.this.f8338aC;
                            if (this.f8678j != 1) {
                                z = false;
                            }
                            q.mo18558a(z);
                            return;
                        }
                        return;
                    }
                    this.f8678j = -1;
                } catch (Exception unused) {
                    this.f8678j = -1;
                }
            }
        }
    }

    /* access modifiers changed from: package-private */
    /* renamed from: e */
    public void mo19572e(int i) {
        Object[] objArr = {new Integer(i)};
        ChangeQuickRedirect changeQuickRedirect = f8303o;
        if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 2968, new Class[]{Integer.TYPE}, Void.TYPE).isSupported) {
            LogUtil.C2630a aVar = f8305s;
            LogUtil.m15952c(aVar, "setState " + i);
            this.f8408w = i;
        }
    }

    /* renamed from: a */
    public void mo19564a(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull CaptureResult captureResult) {
        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, captureResult}, this, f8303o, false, 2969, new Class[]{CameraCaptureSession.class, CaptureRequest.class, CaptureResult.class}, Void.TYPE).isSupported) {
            switch (this.f8408w) {
                case 1:
                    Integer num = (Integer) captureResult.get(CaptureResult.CONTROL_AF_STATE);
                    Integer num2 = (Integer) captureResult.get(CaptureResult.CONTROL_AE_STATE);
                    LogUtil.C2630a aVar = f8305s;
                    LogUtil.m15942a(aVar, "STATE_LOCKING afState: " + m9136b(num) + " aeState:" + m9056a(num2));
                    if (num != null) {
                        if (num.intValue() == 4 || num.intValue() == 5 || num.intValue() == 2 || (this.f8390bg == captureResult.getRequest().hashCode() && num.intValue() == 0)) {
                            if (this.f8390bg != captureResult.getRequest().hashCode() && this.f8390bg != 0) {
                                return;
                            }
                            if ((num2 == null || num2.intValue() == 0) && this.f8341aF == CameraController.FlashMode.FLASH_MODE_OFF) {
                                mo19572e(6);
                                if (this.f8401br.f8671c != null) {
                                    this.f8401br.f8671c.mo19590a();
                                    return;
                                }
                                return;
                            } else if ((num2 == null || num2.intValue() == 2) && this.f8341aF == CameraController.FlashMode.FLASH_MODE_OFF) {
                                m9139b(this.f8401br.f8671c);
                                return;
                            } else {
                                mo19572e(3);
                                if (this.f8401br.f8671c != null) {
                                    this.f8401br.f8671c.mo19591b();
                                    return;
                                }
                                return;
                            }
                        } else if (this.f8390bg == captureResult.getRequest().hashCode()) {
                            LogUtil.m15952c(f8305s, "AF lock request result received, but not focused");
                            this.f8390bg = 0;
                            return;
                        } else {
                            return;
                        }
                    } else {
                        return;
                    }
                case 2:
                    Integer num3 = (Integer) captureResult.get(CaptureResult.CONTROL_AE_STATE);
                    LogUtil.C2630a aVar2 = f8305s;
                    LogUtil.m15942a(aVar2, "STATE_AE_LOCKING afState: " + m9136b((Integer) captureResult.get(CaptureResult.CONTROL_AF_STATE)) + " aeState:" + m9056a(num3));
                    if (num3 == null || num3.intValue() == 3) {
                        mo19572e(6);
                        if (this.f8401br.f8671c != null) {
                            this.f8401br.f8671c.mo19590a();
                            return;
                        }
                        return;
                    }
                    return;
                case 4:
                    Integer num4 = (Integer) captureResult.get(CaptureResult.CONTROL_AE_STATE);
                    LogUtil.C2630a aVar3 = f8305s;
                    LogUtil.m15942a(aVar3, "STATE_PRECAPTURE afState: " + m9136b((Integer) captureResult.get(CaptureResult.CONTROL_AF_STATE)) + " aeState:" + m9056a(num4));
                    if (num4 == null || num4.intValue() == 5 || num4.intValue() == 4 || num4.intValue() == 2) {
                        if (this.f8389bf == captureResult.getRequest().hashCode() || this.f8389bf == 0) {
                            m9139b(this.f8401br.f8671c);
                            return;
                        }
                        return;
                    } else if (this.f8389bf == captureResult.getRequest().hashCode()) {
                        LogUtil.m15952c(f8305s, "AE trigger request result received, but not converged");
                        this.f8389bf = 0;
                        return;
                    } else {
                        return;
                    }
                case 5:
                    Integer num5 = (Integer) captureResult.get(CaptureResult.CONTROL_AE_STATE);
                    LogUtil.C2630a aVar4 = f8305s;
                    LogUtil.m15942a(aVar4, "STATE_WAITING afState: " + m9136b((Integer) captureResult.get(CaptureResult.CONTROL_AF_STATE)) + " aeState:" + m9056a(num5));
                    if (num5 == null || num5.intValue() != 5) {
                        mo19572e(6);
                        if (this.f8401br.f8671c != null) {
                            this.f8401br.f8671c.mo19590a();
                            return;
                        }
                        return;
                    }
                    return;
                case 7:
                    try {
                        this.f8401br.f8672d.mo19584a(cameraCaptureSession, captureRequest, captureResult);
                        return;
                    } catch (NullPointerException unused) {
                        return;
                    }
                default:
                    return;
            }
        }
    }

    /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$g */
    private abstract class C1934g extends CameraCaptureSession.CaptureCallback {
        /* renamed from: a */
        public abstract void mo19584a(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull CaptureResult captureResult);

        private C1934g() {
        }
    }

    /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$a */
    private abstract class C1923a extends CameraCaptureSession.CaptureCallback {

        /* renamed from: x */
        public static ChangeQuickRedirect f8592x;
        /* access modifiers changed from: private */

        /* renamed from: a */
        public UUID f8593a;

        /* renamed from: b */
        private Contants.CameraService.RequestCode f8594b;

        /* renamed from: c */
        private int f8595c;

        /* renamed from: d */
        private boolean f8596d;

        /* renamed from: e */
        private int f8597e;

        /* renamed from: f */
        private int f8598f;

        /* renamed from: g */
        private long f8599g;

        /* renamed from: h */
        private boolean f8600h;

        /* renamed from: i */
        private boolean f8601i;

        /* renamed from: j */
        private boolean f8602j;

        /* renamed from: k */
        private boolean f8603k;

        /* renamed from: l */
        private Location f8604l;

        /* renamed from: m */
        private int f8605m;

        /* renamed from: n */
        private int f8606n;

        /* renamed from: o */
        private boolean f8607o;

        /* renamed from: p */
        private boolean f8608p;

        /* renamed from: q */
        private int f8609q;

        /* renamed from: r */
        private int f8610r;

        /* renamed from: s */
        private String f8611s;

        /* renamed from: a */
        public abstract void mo19590a();

        /* renamed from: b */
        public abstract void mo19591b();

        public C1923a(CameraControllerV2 cameraControllerV2, UUID uuid, Contants.CameraService.RequestCode requestCode, int i, boolean z, int i2, int i3, long j, boolean z2, boolean z3, boolean z4, Location location, boolean z5, boolean z6, boolean z7, String str) {
            CameraControllerV2.this = cameraControllerV2;
            this.f8593a = uuid;
            this.f8594b = requestCode;
            this.f8595c = i;
            this.f8596d = z;
            this.f8597e = i2;
            this.f8598f = i3;
            this.f8599g = j;
            this.f8600h = z2;
            this.f8601i = z3;
            this.f8602j = z4;
            this.f8604l = location;
            this.f8607o = z5;
            this.f8608p = z6;
            this.f8603k = z7;
            this.f8611s = str;
        }

        public C1923a(UUID uuid, Contants.CameraService.RequestCode requestCode, int i, int i2, int i3, long j, int i4) {
            this.f8593a = uuid;
            this.f8594b = requestCode;
            this.f8597e = i;
            this.f8598f = i2;
            this.f8595c = i3;
            this.f8599g = j;
            this.f8609q = i4;
            this.f8610r = 0;
        }

        public C1923a(UUID uuid, Contants.CameraService.RequestCode requestCode, int i, boolean z, int i2, int i3, long j, boolean z2, boolean z3, boolean z4, Location location, int i4, int i5) {
            this.f8593a = uuid;
            this.f8594b = requestCode;
            this.f8595c = i;
            this.f8596d = z;
            this.f8597e = i2;
            this.f8598f = i3;
            this.f8599g = j;
            this.f8600h = z2;
            this.f8601i = z3;
            this.f8602j = z4;
            this.f8604l = location;
            this.f8605m = i4;
            this.f8606n = i5;
            this.f8607o = false;
        }

        public void onCaptureStarted(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, long j, long j2) {
            long j3 = j;
            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, new Long(j3), new Long(j2)}, this, f8592x, false, 3180, new Class[]{CameraCaptureSession.class, CaptureRequest.class, Long.TYPE, Long.TYPE}, Void.TYPE).isSupported) {
                LogUtil.m15942a(CameraControllerV2.f8305s, "onCaptureStarted");
                if (CameraControllerV2.this.f8281e.mo19050a()) {
                    LogUtil.m15952c(CameraControllerV2.f8305s, "onCaptureStarted:isDestroyed is false");
                    return;
                }
                if (CameraController.f8274f > 0) {
                    CameraController.f8274f--;
                }
                if (this.f8608p && CameraControllerV2.this.f8281e.mo19064j() != null) {
                    CameraControllerV2.this.f8281e.mo19064j().getCurrentInfo();
                }
                if (CameraController.f8274f != 0) {
                    return;
                }
                if (Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_STEREO_PICTURE.equals(this.f8594b)) {
                    CameraControllerV2.this.f8281e.mo19045a(this.f8593a, this.f8594b, Contants.CameraService.ResultCode.RESULT_SHUTTER_CALLBACK, Boolean.valueOf(this.f8600h), Long.valueOf(this.f8599g), Integer.valueOf(this.f8597e), Integer.valueOf(this.f8598f), Integer.valueOf(this.f8595c), Boolean.valueOf(this.f8596d), Boolean.valueOf(CameraControllerV2.this.f8379au), Boolean.valueOf(CameraControllerV2.this.f8380av), CameraControllerV2.this.f8382ax);
                } else if (Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_TOF_PICTURE.equals(this.f8594b)) {
                    CameraControllerV2.this.f8281e.mo19045a(this.f8593a, this.f8594b, Contants.CameraService.ResultCode.RESULT_SHUTTER_CALLBACK, Boolean.valueOf(this.f8600h), Long.valueOf(this.f8599g), Integer.valueOf(this.f8597e), Integer.valueOf(this.f8598f), Integer.valueOf(this.f8595c), Boolean.valueOf(this.f8596d), Boolean.valueOf(CameraControllerV2.this.f8379au), Boolean.valueOf(CameraControllerV2.this.f8380av), CameraControllerV2.this.f8382ax);
                    if (CameraControllerV2.this.f8396bm != null) {
                        CameraControllerV2.this.f8396bm.mo19549a(j3);
                    }
                } else if (Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_MFLL_PICTURE.equals(this.f8594b)) {
                    if (this.f8600h && this.f8611s == "processing_normal") {
                        this.f8611s = "processing_mfll";
                    }
                    CameraControllerV2.this.f8281e.mo19045a(this.f8593a, this.f8594b, Contants.CameraService.ResultCode.RESULT_PICTURE_POSTVIEW_CALLBACK, null, Integer.valueOf(this.f8595c), Boolean.valueOf(this.f8596d), Integer.valueOf(this.f8597e), Integer.valueOf(this.f8598f), Long.valueOf(this.f8599g), Boolean.valueOf(this.f8600h), this.f8611s, Boolean.valueOf(this.f8607o));
                } else if (!Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_SUPER_NIGHT_PICTURE.equals(this.f8594b)) {
                    CameraControllerV2.this.f8281e.mo19045a(this.f8593a, this.f8594b, Contants.CameraService.ResultCode.RESULT_SHUTTER_CALLBACK, Boolean.valueOf(this.f8600h), Integer.valueOf(this.f8595c), Boolean.valueOf(this.f8596d), Integer.valueOf(this.f8597e), Integer.valueOf(this.f8598f), Long.valueOf(this.f8599g), Boolean.valueOf(this.f8601i), this.f8611s, Boolean.valueOf(this.f8607o));
                }
            }
        }

        public void onCaptureCompleted(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull TotalCaptureResult totalCaptureResult) {
            CameraCaptureSession cameraCaptureSession2 = cameraCaptureSession;
            CaptureRequest captureRequest2 = captureRequest;
            TotalCaptureResult totalCaptureResult2 = totalCaptureResult;
            Class[] clsArr = {CameraCaptureSession.class, CaptureRequest.class, TotalCaptureResult.class};
            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession2, captureRequest2, totalCaptureResult2}, this, f8592x, false, 3181, clsArr, Void.TYPE).isSupported) {
                LogUtil.m15942a(CameraControllerV2.f8305s, "onCaptureCompleted");
                TotalCaptureResult unused = CameraControllerV2.this.f8409x = totalCaptureResult2;
                if (Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_STEREO_PICTURE.equals(this.f8594b)) {
                    byte[] unused2 = CameraControllerV2.this.f8385bb = CameraControllerV2.this.m9095a(this.f8595c, this.f8599g, this.f8604l, this.f8597e, this.f8598f, this.f8605m, this.f8606n);
                }
                if (Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_TOF_PICTURE.equals(this.f8594b)) {
                    byte[] unused3 = CameraControllerV2.this.f8386bc = CameraControllerV2.this.m9144b(this.f8595c, this.f8599g, this.f8604l, this.f8597e, this.f8598f, this.f8605m, this.f8606n);
                }
                if (this.f8602j) {
                    Face[] faceArr = (Face[]) CameraControllerV2.this.f8409x.get(CaptureResult.STATISTICS_FACES);
                    long frameNumber = CameraControllerV2.this.f8409x.getFrameNumber();
                    if (faceArr != null) {
                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                        LogUtil.m15942a(al, "capture faceInfos num:" + faceArr.length + " framenum:" + frameNumber);
                        CameraController.C1880f[] fVarArr = new CameraController.C1880f[faceArr.length];
                        for (int i = 0; i < faceArr.length; i++) {
                            fVarArr[i] = new C1933f(faceArr[i]);
                        }
                        Storage.m7750a().mo18628a(this.f8599g, fVarArr);
                    }
                }
                CameraControllerV2.this.mo19564a(cameraCaptureSession2, captureRequest2, (CaptureResult) totalCaptureResult2);
                if (!Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_SUPER_NIGHT_PICTURE.equals(this.f8594b)) {
                    CameraControllerV2.this.m9154c(this);
                }
            }
        }

        public void onCaptureProgressed(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull CaptureResult captureResult) {
            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, captureResult}, this, f8592x, false, 3182, new Class[]{CameraCaptureSession.class, CaptureRequest.class, CaptureResult.class}, Void.TYPE).isSupported) {
                LogUtil.m15942a(CameraControllerV2.f8305s, "onCaptureProgressed 2");
            }
        }
    }

    /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$c */
    private class C1928c extends CameraDevice.StateCallback {

        /* renamed from: c */
        public static ChangeQuickRedirect f8663c;

        /* renamed from: a */
        private Intent f8664a;

        /* renamed from: b */
        private UUID f8665b;

        /* renamed from: e */
        private Contants.CameraService.RequestCode f8667e;

        /* renamed from: f */
        private int f8668f = -1;

        public C1928c(Intent intent) {
            this.f8664a = intent;
            this.f8665b = (UUID) intent.getSerializableExtra("uuid");
            this.f8667e = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
        }

        public void onOpened(@NonNull CameraDevice cameraDevice) {
            if (!PatchProxy.proxy(new Object[]{cameraDevice}, this, f8663c, false, 3194, new Class[]{CameraDevice.class}, Void.TYPE).isSupported) {
                LogUtil.C2630a al = CameraControllerV2.f8305s;
                LogUtil.m15942a(al, "onOpened " + Thread.currentThread().getName());
                TimingLoggerUtil.m16032a("startUp", "openCameraFinish");
                CameraProxyV2 unused = CameraControllerV2.this.f8311B = new CameraProxyV2(Integer.parseInt(cameraDevice.getId()), cameraDevice);
                try {
                    CameraCharacteristics unused2 = CameraControllerV2.this.f8314E = CameraControllerV2.this.f8313D.getCameraCharacteristics(String.valueOf(CameraControllerV2.this.f8311B.f9122a));
                } catch (CameraAccessException e) {
                    e.printStackTrace();
                }
                CameraControllerV2.this.f8315F.mo19729b("openCamera");
                CameraControllerV2.this.f8281e.mo19053b(this.f8665b, this.f8667e, Contants.CameraService.ResultCode.RESULT_CAMERA_OPENED, new Object[0]);
            }
        }

        public void onDisconnected(@NonNull CameraDevice cameraDevice) {
            boolean z = true;
            boolean z2 = false;
            if (!PatchProxy.proxy(new Object[]{cameraDevice}, this, f8663c, false, 3195, new Class[]{CameraDevice.class}, Void.TYPE).isSupported) {
                LogUtil.C2630a al = CameraControllerV2.f8305s;
                LogUtil.m15949b(al, "onDisconnected :" + CameraControllerV2.this.f8311B);
                if (CameraControllerV2.this.f8311B != null) {
                    z2 = true;
                }
                CameraProxyV2 unused = CameraControllerV2.this.f8311B = null;
                CameraCharacteristics unused2 = CameraControllerV2.this.f8314E = null;
                CameraCaptureSession unused3 = CameraControllerV2.this.f8325P = null;
                try {
                    cameraDevice.close();
                    z = z2;
                } catch (Exception e) {
                    e.printStackTrace();
                }
                CameraControllerV2.this.f8315F.mo19729b("openCamera");
                if (z) {
                    CameraControllerV2 cameraControllerV2 = CameraControllerV2.this;
                    cameraControllerV2.m9084a(new RuntimeException("onDisconnected cameraDevice:" + cameraDevice));
                }
            }
        }

        public void onError(@NonNull CameraDevice cameraDevice, int i) {
            boolean z = false;
            if (!PatchProxy.proxy(new Object[]{cameraDevice, new Integer(i)}, this, f8663c, false, 3196, new Class[]{CameraDevice.class, Integer.TYPE}, Void.TYPE).isSupported) {
                this.f8668f = i;
                if (CameraControllerV2.this.f8311B != null) {
                    z = true;
                }
                LogUtil.C2630a al = CameraControllerV2.f8305s;
                LogUtil.m15942a(al, "onError cameraDevice:" + cameraDevice + " error:" + i);
                CameraProxyV2 unused = CameraControllerV2.this.f8311B = null;
                CameraCaptureSession unused2 = CameraControllerV2.this.f8325P = null;
                try {
                    cameraDevice.close();
                } catch (Exception e) {
                    e.printStackTrace();
                    z = true;
                }
                CameraControllerV2.this.f8315F.mo19729b("openCamera");
                if (z) {
                    CameraControllerV2 cameraControllerV2 = CameraControllerV2.this;
                    cameraControllerV2.m9084a(new RuntimeException("onError cameraDevice:" + cameraDevice + " error:" + i));
                }
            }
        }

        /* renamed from: a */
        public void mo19637a(Intent intent) {
            if (!PatchProxy.proxy(new Object[]{intent}, this, f8663c, false, 3197, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                this.f8664a = intent;
                this.f8665b = (UUID) intent.getSerializableExtra("uuid");
                this.f8667e = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
            }
        }

        /* renamed from: a */
        public int mo19636a() {
            return this.f8668f;
        }

        /* renamed from: b */
        public void mo19638b() {
            this.f8668f = -1;
        }
    }

    /* renamed from: f */
    public void mo19513f(Intent intent) {
        Intent intent2 = intent;
        if (!PatchProxy.proxy(new Object[]{intent2}, this, f8303o, false, 2970, new Class[]{Intent.class}, Void.TYPE).isSupported) {
            LogUtil.m15942a(f8305s, "startPreview");
            UUID uuid = (UUID) intent2.getSerializableExtra("uuid");
            boolean booleanExtra = intent2.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
            Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent2.getSerializableExtra("requestCode");
            CameraModeType.ModeType modeType = (CameraModeType.ModeType) intent2.getSerializableExtra("modeType");
            LogUtil.C2630a aVar = f8305s;
            LogUtil.m15952c(aVar, "startPreview:modeType " + modeType);
            CamIntentTask.C1777c a = this.f8281e.mo19040a(uuid);
            if (this.f8311B != null && a != null) {
                if (Build.VERSION.SDK_INT >= 29) {
                    LogUtil.C2630a aVar2 = f8305s;
                    LogUtil.m15952c(aVar2, "listener.getSurfaceTextureWrapper() != null:" + a.mo18176d() + ",  isPreparedForStartPreview(isWatchCameraIntent):" + this.f8281e.mo19055b(booleanExtra));
                    if (this.f8281e.mo19051a(booleanExtra) || this.f8281e.mo19057c() || this.f8281e.mo19054b()) {
                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                    } else if (!a.mo18176d() || !this.f8281e.mo19055b(booleanExtra)) {
                        synchronized (CamIntentTask.f7414r) {
                            try {
                                LogUtil.C2630a aVar3 = f8305s;
                                LogUtil.m15952c(aVar3, "startPreview wait in " + Thread.currentThread().getName());
                                CamIntentTask.f7414r.wait(6000);
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                        }
                        if (this.f8281e.mo19051a(booleanExtra) || this.f8281e.mo19057c() || this.f8281e.mo19054b()) {
                            this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                            return;
                        }
                        LogUtil.C2630a aVar4 = f8305s;
                        LogUtil.m15952c(aVar4, "listener.getSurfaceTextureWrapper() != null:" + a.mo18176d() + ",  isPreparedForStartPreview(isWatchCameraIntent):" + this.f8281e.mo19055b(booleanExtra));
                        if (a.mo18176d() && this.f8281e.mo19055b(booleanExtra)) {
                            this.f8374ap = true;
                            if (CameraModeType.m10981l(modeType)) {
                                m9164d(intent2, a.mo18229e());
                            } else if ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && this.f8311B.mo19733b() != 1) {
                                m9137b(intent2, a.mo18229e());
                                m9152c(intent2, a.mo17988a(true));
                            } else {
                                m9060a(intent2, a.mo18229e());
                            }
                            while (this.f8374ap) {
                                Log.d("while", "start preview waiting");
                                try {
                                    Thread.sleep(5);
                                } catch (InterruptedException e2) {
                                    e2.printStackTrace();
                                }
                            }
                        }
                    } else if (CameraModeType.m10981l(modeType)) {
                        m9164d(intent2, a.mo18229e());
                    } else if ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && this.f8311B.mo19733b() != 1) {
                        m9137b(intent2, a.mo18229e());
                        m9152c(intent2, a.mo17988a(true));
                    } else {
                        m9060a(intent2, a.mo18229e());
                    }
                } else {
                    LogUtil.C2630a aVar5 = f8305s;
                    StringBuilder sb = new StringBuilder();
                    sb.append("listener.getSurfaceTexture() != null:");
                    sb.append(a.mo18119c() != null);
                    sb.append(",  isPreparedForStartPreview(isWatchCameraIntent):");
                    sb.append(this.f8281e.mo19055b(booleanExtra));
                    LogUtil.m15952c(aVar5, sb.toString());
                    if (this.f8281e.mo19051a(booleanExtra) || this.f8281e.mo19057c() || this.f8281e.mo19054b()) {
                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                    } else if (a.mo18119c() == null || !this.f8281e.mo19055b(booleanExtra)) {
                        synchronized (CamIntentTask.f7414r) {
                            try {
                                LogUtil.C2630a aVar6 = f8305s;
                                LogUtil.m15952c(aVar6, "startPreview wait in " + Thread.currentThread().getName());
                                CamIntentTask.f7414r.wait(6000);
                            } catch (InterruptedException e3) {
                                e3.printStackTrace();
                            }
                        }
                        if (this.f8281e.mo19051a(booleanExtra) || this.f8281e.mo19057c() || this.f8281e.mo19054b()) {
                            this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                            return;
                        }
                        LogUtil.C2630a aVar7 = f8305s;
                        StringBuilder sb2 = new StringBuilder();
                        sb2.append("listener.getSurfaceTexture() != null:");
                        sb2.append(a.mo18119c() != null);
                        sb2.append(",  isPreparedForStartPreview(isWatchCameraIntent):");
                        sb2.append(this.f8281e.mo19055b(booleanExtra));
                        LogUtil.m15952c(aVar7, sb2.toString());
                        if (a.mo18119c() != null && this.f8281e.mo19055b(booleanExtra)) {
                            this.f8374ap = true;
                            if (CameraModeType.m10981l(modeType)) {
                                m9164d(intent2, a.mo18229e());
                            } else if ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && this.f8311B.mo19733b() != 1) {
                                m9137b(intent2, a.mo18229e());
                                m9152c(intent2, a.mo17988a(true));
                            } else {
                                m9060a(intent2, a.mo18229e());
                            }
                            while (this.f8374ap) {
                                Log.d("while", "start preview waiting");
                                try {
                                    Thread.sleep(5);
                                } catch (InterruptedException e4) {
                                    e4.printStackTrace();
                                }
                            }
                        }
                    } else if (CameraModeType.m10981l(modeType)) {
                        m9164d(intent2, a.mo18229e());
                    } else if ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && this.f8311B.mo19733b() != 1) {
                        m9137b(intent2, a.mo18229e());
                        m9152c(intent2, a.mo17988a(true));
                    } else {
                        m9060a(intent2, a.mo18229e());
                    }
                }
            }
        }
    }

    /* renamed from: a */
    private void m9060a(Intent intent, List<Surface> list) {
        if (!PatchProxy.proxy(new Object[]{intent, list}, this, f8303o, false, 2971, new Class[]{Intent.class, List.class}, Void.TYPE).isSupported) {
            if (this.f8287m == null) {
                this.f8287m = mo19528n();
            }
            if (this.f8287m != null) {
                LogUtil.C2630a aVar = f8305s;
                LogUtil.m15952c(aVar, "createCameraPreviewSession preview size:" + this.f8287m.x + "x" + this.f8287m.y);
            } else {
                LogUtil.m15952c(f8305s, "createCameraPreviewSession preview is null");
            }
            final UUID uuid = (UUID) intent.getSerializableExtra("uuid");
            final Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
            final boolean booleanExtra = intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
            this.f8281e.mo19040a(uuid);
            final CameraModeType.ModeType modeType = (CameraModeType.ModeType) intent.getSerializableExtra("modeType");
            CameraModeType.ModeType a = CameraModeType.m10946a();
            if (modeType != a) {
                LogUtil.C2630a aVar2 = f8305s;
                LogUtil.m15952c(aVar2, "cancel createCameraPreviewSession, modeType:" + modeType + ", currentModeType:" + a);
                this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                this.f8374ap = false;
                return;
            }
            final List<Surface> list2 = list;
            AsyncTaskEx.f13744r.mo22621a("createCameraPreviewSession", new Runnable() {

                /* renamed from: a */
                public static ChangeQuickRedirect f8503a;

                public void run() {
                    int i;
                    if (!PatchProxy.proxy(new Object[0], this, f8503a, false, 3145, new Class[0], Void.TYPE).isSupported) {
                        try {
                            CameraControllerV2.this.f8315F.mo19728a("createCameraPreviewSession");
                            if (!(CameraControllerV2.this.f8311B == null || CameraControllerV2.this.f8311B.mo19730a() == null)) {
                                if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                    final int intValue = (!CameraModeType.m10983m(CameraModeType.ModeType.MANUAL) || CameraControllerV2.this.f8323N == null) ? 0 : ((Integer) CameraControllerV2.this.f8323N.get(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION)).intValue();
                                    CaptureRequest.Builder unused = CameraControllerV2.this.f8323N = ((CameraDevice) CameraControllerV2.this.f8311B.mo19730a()).createCaptureRequest(1);
                                    Surface unused2 = CameraControllerV2.this.f8383ay = (Surface) list2.get(list2.size() - 1);
                                    for (Surface addTarget : list2) {
                                        CameraControllerV2.this.f8323N.addTarget(addTarget);
                                    }
                                    if (modeType != CameraModeType.ModeType.BARCODE) {
                                        if (CameraControllerV2.this.f8316G == null) {
                                            LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mImageReader is NULL, return");
                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                            boolean unused3 = CameraControllerV2.this.f8374ap = false;
                                            return;
                                        }
                                        list2.add(CameraControllerV2.this.f8316G.getSurface());
                                    }
                                    if (modeType == CameraModeType.ModeType.PORTRAIT && CameraControllerV2.this.f8311B.mo19733b() != 1) {
                                        list2.add(CameraControllerV2.this.f8317H.getSurface());
                                        list2.add(CameraControllerV2.this.f8318I.getSurface());
                                    }
                                    ArrayList arrayList = new ArrayList(list2.size());
                                    for (Surface surface : list2) {
                                        if (Build.VERSION.SDK_INT >= 24) {
                                            arrayList.add(new OutputConfiguration(surface));
                                        }
                                    }
                                    if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                        if (!(modeType == CameraModeType.ModeType.FUNNY_SNAP || modeType == CameraModeType.ModeType.PORTRAIT)) {
                                            if (modeType != CameraModeType.ModeType.TOF) {
                                                if (modeType != CameraModeType.ModeType.BACK_TRACE) {
                                                    if (modeType == CameraModeType.ModeType.AUTO && DeviceHelper.f13890aq) {
                                                        i = ExifInterface.DATA_PACK_BITS_COMPRESSED;
                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                        LogUtil.m15952c(al, "createCustomCaptureSession mStreamConfigOptMode :" + i + ", modeType:" + modeType);
                                                        CameraControllerV2.this.mo19572e(0);
                                                        Object[] objArr = {null, arrayList, Integer.valueOf(i), new CameraCaptureSession.StateCallback() {

                                                            /* renamed from: a */
                                                            public static ChangeQuickRedirect f8510a;

                                                            public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                                if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3146, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                    TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                                    LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigured");
                                                                    try {
                                                                        if (CameraControllerV2.this.f8311B != null) {
                                                                            if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                                CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                                                if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                                    int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                                                } else {
                                                                                    int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                                                }
                                                                                CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                                                CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                                                CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                                                CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                                                CameraControllerV2.this.m9122ar();
                                                                                CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                                                CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                                                if (modeType == CameraModeType.ModeType.MANUAL && CameraControllerV2.this.f8353aR != null) {
                                                                                    CameraControllerV2.this.m9083a(CameraControllerV2.this.f8353aR, CameraControllerV2.this.f8323N, false);
                                                                                }
                                                                                if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                                                    CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                                                                }
                                                                                if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                                                    CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                                                }
                                                                                CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                                                CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                                                CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                                                boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                                return;
                                                                            }
                                                                        }
                                                                        LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mDeviceProxy is NULL or next task is closeCamera, return");
                                                                        CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                        boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                    } catch (CameraAccessException e) {
                                                                        e.printStackTrace();
                                                                    } catch (Throwable th) {
                                                                        boolean unused7 = CameraControllerV2.this.f8374ap = false;
                                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                        throw th;
                                                                    }
                                                                }
                                                            }

                                                            public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                                if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3147, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                    LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigureFailed");
                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                    boolean unused = CameraControllerV2.this.f8374ap = false;
                                                                    CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession onConfigureFailed"));
                                                                }
                                                            }

                                                            public void onClosed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                                if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3148, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                    LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                                    LogUtil.m15942a(al, "PreviewSession onClosed " + cameraCaptureSession + " mCaptureSession: " + CameraControllerV2.this.f8325P);
                                                                    if (cameraCaptureSession.equals(CameraControllerV2.this.f8325P)) {
                                                                        AsyncTaskEx.f13744r.mo22621a("PreviewSession onClosed", 
                                                                        /*  JADX ERROR: Method code generation error
                                                                            jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x005d: INVOKE  
                                                                              (wrap: com.meizu.media.camera.util.AsyncTaskEx$c : 0x0054: SGET  (r0v9 com.meizu.media.camera.util.AsyncTaskEx$c) =  com.meizu.media.camera.util.AsyncTaskEx.r com.meizu.media.camera.util.AsyncTaskEx$c)
                                                                              ("PreviewSession onClosed")
                                                                              (wrap: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y : 0x005a: CONSTRUCTOR  (r2v7 com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y) = 
                                                                              (r8v0 'this' com.meizu.media.camera.camcontroller.CameraControllerV2$23$1 A[THIS])
                                                                              (r9v0 'cameraCaptureSession' android.hardware.camera2.CameraCaptureSession)
                                                                             call: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y.<init>(com.meizu.media.camera.camcontroller.CameraControllerV2$23$1, android.hardware.camera2.CameraCaptureSession):void type: CONSTRUCTOR)
                                                                             com.meizu.media.camera.util.AsyncTaskEx.c.a(java.lang.String, java.lang.Runnable):void type: VIRTUAL in method: com.meizu.media.camera.camcontroller.CameraControllerV2.23.1.onClosed(android.hardware.camera2.CameraCaptureSession):void, dex: classes.dex
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                            	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                            	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                            	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                            	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                            	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                            	at java.util.ArrayList.forEach(Unknown Source)
                                                                            	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                            	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                            	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                            	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                            	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                            	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                            	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                            	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                                                                            	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                                                                            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                            	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                            	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                            	at jadx.core.codegen.InsnGen.filledNewArray(InsnGen.java:594)
                                                                            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:391)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeTryCatch(RegionGen.java:311)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:68)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                            	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                            	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                            	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                            	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                            	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                            	at java.util.ArrayList.forEach(Unknown Source)
                                                                            	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                            	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                            	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                            	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                            	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                            	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                            	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                            	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                                                                            	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                                                                            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                            	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                            	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                            	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                                                                            	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                                                                            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                            	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                            	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                            	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                            	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                            	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                            	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                            	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                            	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                            	at java.util.ArrayList.forEach(Unknown Source)
                                                                            	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                            	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                            	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                            	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                            	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                            	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                            	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                            	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                            	at jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:112)
                                                                            	at jadx.core.codegen.ClassGen.makeClass(ClassGen.java:78)
                                                                            	at jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)
                                                                            	at jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:33)
                                                                            	at jadx.core.codegen.CodeGen.generate(CodeGen.java:21)
                                                                            	at jadx.core.ProcessClass.generateCode(ProcessClass.java:61)
                                                                            	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)
                                                                            Caused by: jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x005a: CONSTRUCTOR  (r2v7 com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y) = 
                                                                              (r8v0 'this' com.meizu.media.camera.camcontroller.CameraControllerV2$23$1 A[THIS])
                                                                              (r9v0 'cameraCaptureSession' android.hardware.camera2.CameraCaptureSession)
                                                                             call: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y.<init>(com.meizu.media.camera.camcontroller.CameraControllerV2$23$1, android.hardware.camera2.CameraCaptureSession):void type: CONSTRUCTOR in method: com.meizu.media.camera.camcontroller.CameraControllerV2.23.1.onClosed(android.hardware.camera2.CameraCaptureSession):void, dex: classes.dex
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)
                                                                            	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                            	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                            	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                                                                            	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                                                                            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                            	... 164 more
                                                                            Caused by: jadx.core.utils.exceptions.JadxRuntimeException: Expected class to be processed at this point, class: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y, state: NOT_LOADED
                                                                            	at jadx.core.dex.nodes.ClassNode.ensureProcessed(ClassNode.java:260)
                                                                            	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:606)
                                                                            	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                            	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                            	... 170 more
                                                                            */
                                                                        /*
                                                                            this = this;
                                                                            r0 = 1
                                                                            java.lang.Object[] r1 = new java.lang.Object[r0]
                                                                            r2 = 0
                                                                            r1[r2] = r9
                                                                            com.meizu.savior.ChangeQuickRedirect r3 = f8510a
                                                                            java.lang.Class[] r6 = new java.lang.Class[r0]
                                                                            java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                                            r6[r2] = r0
                                                                            java.lang.Class r7 = java.lang.Void.TYPE
                                                                            r4 = 0
                                                                            r5 = 3148(0xc4c, float:4.411E-42)
                                                                            r2 = r8
                                                                            com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                                            boolean r0 = r0.isSupported
                                                                            if (r0 == 0) goto L_0x001d
                                                                            return
                                                                        L_0x001d:
                                                                            com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                                            java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                                            r1.<init>()
                                                                            java.lang.String r2 = "PreviewSession onClosed "
                                                                            r1.append(r2)
                                                                            r1.append(r9)
                                                                            java.lang.String r2 = " mCaptureSession: "
                                                                            r1.append(r2)
                                                                            com.meizu.media.camera.camcontroller.CameraControllerV2$23 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                                            com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                            android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                                            r1.append(r2)
                                                                            java.lang.String r1 = r1.toString()
                                                                            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                                            com.meizu.media.camera.camcontroller.CameraControllerV2$23 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                                            com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                            android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                                            boolean r0 = r9.equals(r0)
                                                                            if (r0 != 0) goto L_0x0054
                                                                            return
                                                                        L_0x0054:
                                                                            com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                                            java.lang.String r1 = "PreviewSession onClosed"
                                                                            com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y
                                                                            r2.<init>(r8, r9)
                                                                            r0.mo22621a(r1, r2)
                                                                            return
                                                                        */
                                                                        throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.C18981.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                                    }

                                                                    /* access modifiers changed from: private */
                                                                    /* renamed from: a */
                                                                    public /* synthetic */ void m9343a(CameraCaptureSession cameraCaptureSession) {
                                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3149, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                            try {
                                                                                CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                                                if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                                    CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                                                }
                                                                            } catch (InterruptedException e) {
                                                                                e.printStackTrace();
                                                                            } catch (Throwable th) {
                                                                                CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                                throw th;
                                                                            }
                                                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                        }
                                                                    }
                                                                }, CameraControllerV2.this.f8279c};
                                                                CameraCaptureSession unused4 = CameraControllerV2.this.f8325P = null;
                                                                TimingLoggerUtil.m16032a("startUp", "startPreview");
                                                                C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr);
                                                                return;
                                                            } else if (modeType != CameraModeType.ModeType.SUPER_NIGHT) {
                                                                if (modeType != CameraModeType.ModeType.BACK_LIGHTING) {
                                                                    i = 32772;
                                                                    LogUtil.C2630a al2 = CameraControllerV2.f8305s;
                                                                    LogUtil.m15952c(al2, "createCustomCaptureSession mStreamConfigOptMode :" + i + ", modeType:" + modeType);
                                                                    CameraControllerV2.this.mo19572e(0);
                                                                    Object[] objArr2 = {null, arrayList, Integer.valueOf(i), new CameraCaptureSession.StateCallback() {

                                                                        /* renamed from: a */
                                                                        public static ChangeQuickRedirect f8510a;

                                                                        public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3146, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                                TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigured");
                                                                                try {
                                                                                    if (CameraControllerV2.this.f8311B != null) {
                                                                                        if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                                            CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                                                            if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                                                int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                                                            } else {
                                                                                                int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                                                            }
                                                                                            CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                                                            CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                                                            CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                                                            CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                                                            CameraControllerV2.this.m9122ar();
                                                                                            CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                                                            CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                                                            if (modeType == CameraModeType.ModeType.MANUAL && CameraControllerV2.this.f8353aR != null) {
                                                                                                CameraControllerV2.this.m9083a(CameraControllerV2.this.f8353aR, CameraControllerV2.this.f8323N, false);
                                                                                            }
                                                                                            if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                                                                CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                                                                            }
                                                                                            if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                                                                CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                                                            }
                                                                                            CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                                                            CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                                                            CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                                                            boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                                            return;
                                                                                        }
                                                                                    }
                                                                                    LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mDeviceProxy is NULL or next task is closeCamera, return");
                                                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                                    boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                                } catch (CameraAccessException e) {
                                                                                    e.printStackTrace();
                                                                                } catch (Throwable th) {
                                                                                    boolean unused7 = CameraControllerV2.this.f8374ap = false;
                                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                                    throw th;
                                                                                }
                                                                            }
                                                                        }

                                                                        public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3147, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigureFailed");
                                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                                boolean unused = CameraControllerV2.this.f8374ap = false;
                                                                                CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession onConfigureFailed"));
                                                                            }
                                                                        }

                                                                        public void onClosed(android.hardware.camera2.CameraCaptureSession r9) {
                                                                            /*
                                                                                r8 = this;
                                                                                r0 = 1
                                                                                java.lang.Object[] r1 = new java.lang.Object[r0]
                                                                                r2 = 0
                                                                                r1[r2] = r9
                                                                                com.meizu.savior.ChangeQuickRedirect r3 = f8510a
                                                                                java.lang.Class[] r6 = new java.lang.Class[r0]
                                                                                java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                                                r6[r2] = r0
                                                                                java.lang.Class r7 = java.lang.Void.TYPE
                                                                                r4 = 0
                                                                                r5 = 3148(0xc4c, float:4.411E-42)
                                                                                r2 = r8
                                                                                com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                                                boolean r0 = r0.isSupported
                                                                                if (r0 == 0) goto L_0x001d
                                                                                return
                                                                            L_0x001d:
                                                                                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                                                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                                                r1.<init>()
                                                                                java.lang.String r2 = "PreviewSession onClosed "
                                                                                r1.append(r2)
                                                                                r1.append(r9)
                                                                                java.lang.String r2 = " mCaptureSession: "
                                                                                r1.append(r2)
                                                                                com.meizu.media.camera.camcontroller.CameraControllerV2$23 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                                android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                                                r1.append(r2)
                                                                                java.lang.String r1 = r1.toString()
                                                                                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                                                com.meizu.media.camera.camcontroller.CameraControllerV2$23 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                                android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                                                boolean r0 = r9.equals(r0)
                                                                                if (r0 != 0) goto L_0x0054
                                                                                return
                                                                            L_0x0054:
                                                                                com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                                                java.lang.String r1 = "PreviewSession onClosed"
                                                                                com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y
                                                                                r2.<init>(r8, r9)
                                                                                r0.mo22621a(r1, r2)
                                                                                return
                                                                            */
                                                                            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.C18981.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                                        }

                                                                        /* access modifiers changed from: private */
                                                                        /* renamed from: a */
                                                                        public /* synthetic */ void m9343a(CameraCaptureSession cameraCaptureSession) {
                                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3149, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                                try {
                                                                                    CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                                                    if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                                        CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                                                    }
                                                                                } catch (InterruptedException e) {
                                                                                    e.printStackTrace();
                                                                                } catch (Throwable th) {
                                                                                    CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                                    throw th;
                                                                                }
                                                                                CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                            }
                                                                        }
                                                                    }, CameraControllerV2.this.f8279c};
                                                                    CameraCaptureSession unused5 = CameraControllerV2.this.f8325P = null;
                                                                    TimingLoggerUtil.m16032a("startUp", "startPreview");
                                                                    C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr2);
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                i = 34951;
                                                LogUtil.C2630a al22 = CameraControllerV2.f8305s;
                                                LogUtil.m15952c(al22, "createCustomCaptureSession mStreamConfigOptMode :" + i + ", modeType:" + modeType);
                                                CameraControllerV2.this.mo19572e(0);
                                                Object[] objArr22 = {null, arrayList, Integer.valueOf(i), new CameraCaptureSession.StateCallback() {

                                                    /* renamed from: a */
                                                    public static ChangeQuickRedirect f8510a;

                                                    public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3146, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                            TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                            LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigured");
                                                            try {
                                                                if (CameraControllerV2.this.f8311B != null) {
                                                                    if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                        CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                                        if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                            int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                                        } else {
                                                                            int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                                        }
                                                                        CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                                        CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                                        CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                                        CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                                        CameraControllerV2.this.m9122ar();
                                                                        CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                                        CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                                        if (modeType == CameraModeType.ModeType.MANUAL && CameraControllerV2.this.f8353aR != null) {
                                                                            CameraControllerV2.this.m9083a(CameraControllerV2.this.f8353aR, CameraControllerV2.this.f8323N, false);
                                                                        }
                                                                        if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                                            CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                                                        }
                                                                        if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                                            CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                                        }
                                                                        CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                                        CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                                        CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                                        boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                        return;
                                                                    }
                                                                }
                                                                LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mDeviceProxy is NULL or next task is closeCamera, return");
                                                                CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            } catch (CameraAccessException e) {
                                                                e.printStackTrace();
                                                            } catch (Throwable th) {
                                                                boolean unused7 = CameraControllerV2.this.f8374ap = false;
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                throw th;
                                                            }
                                                        }
                                                    }

                                                    public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3147, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                            LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigureFailed");
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            boolean unused = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession onConfigureFailed"));
                                                        }
                                                    }

                                                    public void onClosed(android.hardware.camera2.CameraCaptureSession r9) {
                                                        /*
                                                            r8 = this;
                                                            r0 = 1
                                                            java.lang.Object[] r1 = new java.lang.Object[r0]
                                                            r2 = 0
                                                            r1[r2] = r9
                                                            com.meizu.savior.ChangeQuickRedirect r3 = f8510a
                                                            java.lang.Class[] r6 = new java.lang.Class[r0]
                                                            java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                            r6[r2] = r0
                                                            java.lang.Class r7 = java.lang.Void.TYPE
                                                            r4 = 0
                                                            r5 = 3148(0xc4c, float:4.411E-42)
                                                            r2 = r8
                                                            com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                            boolean r0 = r0.isSupported
                                                            if (r0 == 0) goto L_0x001d
                                                            return
                                                        L_0x001d:
                                                            com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                            java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                            r1.<init>()
                                                            java.lang.String r2 = "PreviewSession onClosed "
                                                            r1.append(r2)
                                                            r1.append(r9)
                                                            java.lang.String r2 = " mCaptureSession: "
                                                            r1.append(r2)
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2$23 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                            android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                            r1.append(r2)
                                                            java.lang.String r1 = r1.toString()
                                                            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2$23 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                            android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                            boolean r0 = r9.equals(r0)
                                                            if (r0 != 0) goto L_0x0054
                                                            return
                                                        L_0x0054:
                                                            com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                            java.lang.String r1 = "PreviewSession onClosed"
                                                            com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y
                                                            r2.<init>(r8, r9)
                                                            r0.mo22621a(r1, r2)
                                                            return
                                                        */
                                                        throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.C18981.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                    }

                                                    /* access modifiers changed from: private */
                                                    /* renamed from: a */
                                                    public /* synthetic */ void m9343a(CameraCaptureSession cameraCaptureSession) {
                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3149, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                            try {
                                                                CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                                if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                    CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                                }
                                                            } catch (InterruptedException e) {
                                                                e.printStackTrace();
                                                            } catch (Throwable th) {
                                                                CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                throw th;
                                                            }
                                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                        }
                                                    }
                                                }, CameraControllerV2.this.f8279c};
                                                CameraCaptureSession unused6 = CameraControllerV2.this.f8325P = null;
                                                TimingLoggerUtil.m16032a("startUp", "startPreview");
                                                C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr22);
                                                return;
                                            }
                                            if (CameraControllerV2.this.f8311B.mo19733b() != DeviceHelper.f14029du) {
                                                if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                    i = 32770;
                                                } else if (modeType == CameraModeType.ModeType.AUTO && DeviceHelper.f13851aD) {
                                                    i = 32769;
                                                } else if (!(modeType == CameraModeType.ModeType.SQUARE || modeType == CameraModeType.ModeType.MACRO)) {
                                                    if (modeType != CameraModeType.ModeType.AUTO || DeviceHelper.f13851aD) {
                                                        if (modeType == CameraModeType.ModeType.BARCODE || modeType == CameraModeType.ModeType.DOCUMENT) {
                                                            i = 34960;
                                                        }
                                                    }
                                                }
                                                LogUtil.C2630a al222 = CameraControllerV2.f8305s;
                                                LogUtil.m15952c(al222, "createCustomCaptureSession mStreamConfigOptMode :" + i + ", modeType:" + modeType);
                                                CameraControllerV2.this.mo19572e(0);
                                                Object[] objArr222 = {null, arrayList, Integer.valueOf(i), new CameraCaptureSession.StateCallback() {

                                                    /* renamed from: a */
                                                    public static ChangeQuickRedirect f8510a;

                                                    public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3146, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                            TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                            LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigured");
                                                            try {
                                                                if (CameraControllerV2.this.f8311B != null) {
                                                                    if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                        CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                                        if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                            int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                                        } else {
                                                                            int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                                        }
                                                                        CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                                        CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                                        CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                                        CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                                        CameraControllerV2.this.m9122ar();
                                                                        CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                                        CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                                        if (modeType == CameraModeType.ModeType.MANUAL && CameraControllerV2.this.f8353aR != null) {
                                                                            CameraControllerV2.this.m9083a(CameraControllerV2.this.f8353aR, CameraControllerV2.this.f8323N, false);
                                                                        }
                                                                        if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                                            CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                                                        }
                                                                        if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                                            CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                                        }
                                                                        CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                                        CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                                        CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                                        boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                        return;
                                                                    }
                                                                }
                                                                LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mDeviceProxy is NULL or next task is closeCamera, return");
                                                                CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            } catch (CameraAccessException e) {
                                                                e.printStackTrace();
                                                            } catch (Throwable th) {
                                                                boolean unused7 = CameraControllerV2.this.f8374ap = false;
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                throw th;
                                                            }
                                                        }
                                                    }

                                                    public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3147, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                            LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigureFailed");
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            boolean unused = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession onConfigureFailed"));
                                                        }
                                                    }

                                                    public void onClosed(android.hardware.camera2.CameraCaptureSession r9) {
                                                        /*
                                                            r8 = this;
                                                            r0 = 1
                                                            java.lang.Object[] r1 = new java.lang.Object[r0]
                                                            r2 = 0
                                                            r1[r2] = r9
                                                            com.meizu.savior.ChangeQuickRedirect r3 = f8510a
                                                            java.lang.Class[] r6 = new java.lang.Class[r0]
                                                            java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                            r6[r2] = r0
                                                            java.lang.Class r7 = java.lang.Void.TYPE
                                                            r4 = 0
                                                            r5 = 3148(0xc4c, float:4.411E-42)
                                                            r2 = r8
                                                            com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                            boolean r0 = r0.isSupported
                                                            if (r0 == 0) goto L_0x001d
                                                            return
                                                        L_0x001d:
                                                            com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                            java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                            r1.<init>()
                                                            java.lang.String r2 = "PreviewSession onClosed "
                                                            r1.append(r2)
                                                            r1.append(r9)
                                                            java.lang.String r2 = " mCaptureSession: "
                                                            r1.append(r2)
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2$23 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                            android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                            r1.append(r2)
                                                            java.lang.String r1 = r1.toString()
                                                            com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2$23 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                            com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                            android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                            boolean r0 = r9.equals(r0)
                                                            if (r0 != 0) goto L_0x0054
                                                            return
                                                        L_0x0054:
                                                            com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                            java.lang.String r1 = "PreviewSession onClosed"
                                                            com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y
                                                            r2.<init>(r8, r9)
                                                            r0.mo22621a(r1, r2)
                                                            return
                                                        */
                                                        throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.C18981.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                    }

                                                    /* access modifiers changed from: private */
                                                    /* renamed from: a */
                                                    public /* synthetic */ void m9343a(CameraCaptureSession cameraCaptureSession) {
                                                        if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3149, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                            try {
                                                                CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                                if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                    CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                                }
                                                            } catch (InterruptedException e) {
                                                                e.printStackTrace();
                                                            } catch (Throwable th) {
                                                                CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                throw th;
                                                            }
                                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                        }
                                                    }
                                                }, CameraControllerV2.this.f8279c};
                                                CameraCaptureSession unused7 = CameraControllerV2.this.f8325P = null;
                                                TimingLoggerUtil.m16032a("startUp", "startPreview");
                                                C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr222);
                                                return;
                                            }
                                            i = 32771;
                                            LogUtil.C2630a al2222 = CameraControllerV2.f8305s;
                                            LogUtil.m15952c(al2222, "createCustomCaptureSession mStreamConfigOptMode :" + i + ", modeType:" + modeType);
                                            CameraControllerV2.this.mo19572e(0);
                                            Object[] objArr2222 = {null, arrayList, Integer.valueOf(i), new CameraCaptureSession.StateCallback() {

                                                /* renamed from: a */
                                                public static ChangeQuickRedirect f8510a;

                                                public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3146, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigured");
                                                        try {
                                                            if (CameraControllerV2.this.f8311B != null) {
                                                                if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                    CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                                    if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                        int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                                    } else {
                                                                        int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                                    }
                                                                    CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                                    CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                                    CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                                    CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                                    CameraControllerV2.this.m9122ar();
                                                                    CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                                    CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                                    if (modeType == CameraModeType.ModeType.MANUAL && CameraControllerV2.this.f8353aR != null) {
                                                                        CameraControllerV2.this.m9083a(CameraControllerV2.this.f8353aR, CameraControllerV2.this.f8323N, false);
                                                                    }
                                                                    if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                                                    }
                                                                    if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                                    }
                                                                    CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                                    CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                                    boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                    return;
                                                                }
                                                            }
                                                            LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mDeviceProxy is NULL or next task is closeCamera, return");
                                                            CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                        } catch (CameraAccessException e) {
                                                            e.printStackTrace();
                                                        } catch (Throwable th) {
                                                            boolean unused7 = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            throw th;
                                                        }
                                                    }
                                                }

                                                public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3147, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigureFailed");
                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                        boolean unused = CameraControllerV2.this.f8374ap = false;
                                                        CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession onConfigureFailed"));
                                                    }
                                                }

                                                public void onClosed(android.hardware.camera2.CameraCaptureSession r9) {
                                                    /*
                                                        r8 = this;
                                                        r0 = 1
                                                        java.lang.Object[] r1 = new java.lang.Object[r0]
                                                        r2 = 0
                                                        r1[r2] = r9
                                                        com.meizu.savior.ChangeQuickRedirect r3 = f8510a
                                                        java.lang.Class[] r6 = new java.lang.Class[r0]
                                                        java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                        r6[r2] = r0
                                                        java.lang.Class r7 = java.lang.Void.TYPE
                                                        r4 = 0
                                                        r5 = 3148(0xc4c, float:4.411E-42)
                                                        r2 = r8
                                                        com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                        boolean r0 = r0.isSupported
                                                        if (r0 == 0) goto L_0x001d
                                                        return
                                                    L_0x001d:
                                                        com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                        java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                        r1.<init>()
                                                        java.lang.String r2 = "PreviewSession onClosed "
                                                        r1.append(r2)
                                                        r1.append(r9)
                                                        java.lang.String r2 = " mCaptureSession: "
                                                        r1.append(r2)
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2$23 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                        android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                        r1.append(r2)
                                                        java.lang.String r1 = r1.toString()
                                                        com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2$23 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                        android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                        boolean r0 = r9.equals(r0)
                                                        if (r0 != 0) goto L_0x0054
                                                        return
                                                    L_0x0054:
                                                        com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                        java.lang.String r1 = "PreviewSession onClosed"
                                                        com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y
                                                        r2.<init>(r8, r9)
                                                        r0.mo22621a(r1, r2)
                                                        return
                                                    */
                                                    throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.C18981.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                }

                                                /* access modifiers changed from: private */
                                                /* renamed from: a */
                                                public /* synthetic */ void m9343a(CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3149, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        try {
                                                            CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                            if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                            }
                                                        } catch (InterruptedException e) {
                                                            e.printStackTrace();
                                                        } catch (Throwable th) {
                                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                            throw th;
                                                        }
                                                        CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                    }
                                                }
                                            }, CameraControllerV2.this.f8279c};
                                            CameraCaptureSession unused8 = CameraControllerV2.this.f8325P = null;
                                            TimingLoggerUtil.m16032a("startUp", "startPreview");
                                            C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr2222);
                                            return;
                                            i = 0;
                                            LogUtil.C2630a al22222 = CameraControllerV2.f8305s;
                                            LogUtil.m15952c(al22222, "createCustomCaptureSession mStreamConfigOptMode :" + i + ", modeType:" + modeType);
                                            CameraControllerV2.this.mo19572e(0);
                                            Object[] objArr22222 = {null, arrayList, Integer.valueOf(i), new CameraCaptureSession.StateCallback() {

                                                /* renamed from: a */
                                                public static ChangeQuickRedirect f8510a;

                                                public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3146, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigured");
                                                        try {
                                                            if (CameraControllerV2.this.f8311B != null) {
                                                                if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                    CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                                    if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                        int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                                    } else {
                                                                        int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                                    }
                                                                    CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                                    CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                                    CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                                    CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                                    CameraControllerV2.this.m9122ar();
                                                                    CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                                    CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                                    if (modeType == CameraModeType.ModeType.MANUAL && CameraControllerV2.this.f8353aR != null) {
                                                                        CameraControllerV2.this.m9083a(CameraControllerV2.this.f8353aR, CameraControllerV2.this.f8323N, false);
                                                                    }
                                                                    if (modeType == CameraModeType.ModeType.PORTRAIT) {
                                                                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                                                    }
                                                                    if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                                    }
                                                                    CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                                    CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                                    boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                                    return;
                                                                }
                                                            }
                                                            LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSession mDeviceProxy is NULL or next task is closeCamera, return");
                                                            CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                        } catch (CameraAccessException e) {
                                                            e.printStackTrace();
                                                        } catch (Throwable th) {
                                                            boolean unused7 = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                            throw th;
                                                        }
                                                    }
                                                }

                                                public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3147, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSession onConfigureFailed");
                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                        boolean unused = CameraControllerV2.this.f8374ap = false;
                                                        CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession onConfigureFailed"));
                                                    }
                                                }

                                                public void onClosed(android.hardware.camera2.CameraCaptureSession r9) {
                                                    /*
                                                        r8 = this;
                                                        r0 = 1
                                                        java.lang.Object[] r1 = new java.lang.Object[r0]
                                                        r2 = 0
                                                        r1[r2] = r9
                                                        com.meizu.savior.ChangeQuickRedirect r3 = f8510a
                                                        java.lang.Class[] r6 = new java.lang.Class[r0]
                                                        java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                        r6[r2] = r0
                                                        java.lang.Class r7 = java.lang.Void.TYPE
                                                        r4 = 0
                                                        r5 = 3148(0xc4c, float:4.411E-42)
                                                        r2 = r8
                                                        com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                        boolean r0 = r0.isSupported
                                                        if (r0 == 0) goto L_0x001d
                                                        return
                                                    L_0x001d:
                                                        com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                        java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                        r1.<init>()
                                                        java.lang.String r2 = "PreviewSession onClosed "
                                                        r1.append(r2)
                                                        r1.append(r9)
                                                        java.lang.String r2 = " mCaptureSession: "
                                                        r1.append(r2)
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2$23 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                        android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                        r1.append(r2)
                                                        java.lang.String r1 = r1.toString()
                                                        com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2$23 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.this
                                                        com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                        android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                        boolean r0 = r9.equals(r0)
                                                        if (r0 != 0) goto L_0x0054
                                                        return
                                                    L_0x0054:
                                                        com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                        java.lang.String r1 = "PreviewSession onClosed"
                                                        com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$23$1$CKaUu-5e1azRUYGK2dQxOJoo40Y
                                                        r2.<init>(r8, r9)
                                                        r0.mo22621a(r1, r2)
                                                        return
                                                    */
                                                    throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C189723.C18981.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                }

                                                /* access modifiers changed from: private */
                                                /* renamed from: a */
                                                public /* synthetic */ void m9343a(CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8510a, false, 3149, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        try {
                                                            CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                            if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                            }
                                                        } catch (InterruptedException e) {
                                                            e.printStackTrace();
                                                        } catch (Throwable th) {
                                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                            throw th;
                                                        }
                                                        CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                    }
                                                }
                                            }, CameraControllerV2.this.f8279c};
                                            try {
                                                CameraCaptureSession unused9 = CameraControllerV2.this.f8325P = null;
                                                TimingLoggerUtil.m16032a("startUp", "startPreview");
                                                C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr22222);
                                                return;
                                            } catch (Exception e) {
                                                LogUtil.m15950b(CameraControllerV2.f8305s, "createCameraPreviewSession ReflectError", e);
                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                                CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession ReflectError.", e));
                                                return;
                                            }
                                        }
                                    }
                                    LogUtil.m15956e(CameraControllerV2.f8305s, "mDeviceProxy or mDeviceProxy.getDevice() is null or next task  is closeCamera, return!");
                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                    boolean unused10 = CameraControllerV2.this.f8374ap = false;
                                } catch (CameraAccessException e2) {
                                    LogUtil.m15950b(CameraControllerV2.f8305s, "createCameraPreviewSession error", e2);
                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                    CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSession error.", e2));
                                } catch (InterruptedException e3) {
                                    e3.printStackTrace();
                                }
                            }
                        }
                    });
                    AsyncTaskEx.f13744r.mo22622a("createCameraPreviewSession");
                }
            }

            /* renamed from: b */
            private void m9137b(Intent intent, List<Surface> list) {
                if (!PatchProxy.proxy(new Object[]{intent, list}, this, f8303o, false, 2972, new Class[]{Intent.class, List.class}, Void.TYPE).isSupported && Build.VERSION.SDK_INT >= 24) {
                    if (this.f8287m == null) {
                        this.f8287m = mo19528n();
                    }
                    if (this.f8287m != null) {
                        LogUtil.C2630a aVar = f8305s;
                        LogUtil.m15952c(aVar, "createCameraPreviewSessionForMain preview size:" + this.f8287m.x + "x" + this.f8287m.y);
                    } else {
                        LogUtil.m15952c(f8305s, "createCameraPreviewSessionForMain preview is null");
                    }
                    this.f8397bn = true;
                    final UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                    final Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                    final boolean booleanExtra = intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
                    this.f8281e.mo19040a(uuid);
                    final CameraModeType.ModeType modeType = (CameraModeType.ModeType) intent.getSerializableExtra("modeType");
                    CameraModeType.ModeType a = CameraModeType.m10946a();
                    if (modeType != a) {
                        LogUtil.C2630a aVar2 = f8305s;
                        LogUtil.m15952c(aVar2, "cancel createCameraPreviewSessionForMain, modeType:" + modeType + ", currentModeType:" + a);
                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                        this.f8374ap = false;
                        return;
                    }
                    try {
                        this.f8315F.mo19728a("createCameraPreviewSessionForMain");
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    final List<Surface> list2 = list;
                    this.f8406q.post(new Runnable() {

                        /* renamed from: a */
                        public static ChangeQuickRedirect f8537a;

                        public void run() {
                            if (!PatchProxy.proxy(new Object[0], this, f8537a, false, 3159, new Class[0], Void.TYPE).isSupported) {
                                try {
                                    if (!(CameraControllerV2.this.f8311B == null || CameraControllerV2.this.f8311B.mo19730a() == null)) {
                                        if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                            final int intValue = (!CameraModeType.m10983m(CameraModeType.ModeType.MANUAL) || CameraControllerV2.this.f8323N == null) ? 0 : ((Integer) CameraControllerV2.this.f8323N.get(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION)).intValue();
                                            CaptureRequest.Builder unused = CameraControllerV2.this.f8323N = ((CameraDevice) CameraControllerV2.this.f8311B.mo19730a()).createCaptureRequest(1);
                                            Surface unused2 = CameraControllerV2.this.f8383ay = (Surface) list2.get(list2.size() - 1);
                                            for (Surface addTarget : list2) {
                                                CameraControllerV2.this.f8323N.addTarget(addTarget);
                                            }
                                            if (CameraControllerV2.this.f8316G == null) {
                                                LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSessionForMain mImageReader is NULL, return");
                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                                boolean unused3 = CameraControllerV2.this.f8374ap = false;
                                                return;
                                            }
                                            list2.add(CameraControllerV2.this.f8316G.getSurface());
                                            ArrayList arrayList = new ArrayList(list2.size());
                                            for (Surface outputConfiguration : list2) {
                                                arrayList.add(new OutputConfiguration(outputConfiguration));
                                            }
                                            LogUtil.C2630a al = CameraControllerV2.f8305s;
                                            LogUtil.m15952c(al, "createCameraPreviewSessionForMain mStreamConfigOptMode :" + 32774 + ", modeType:" + modeType);
                                            CameraControllerV2.this.mo19572e(0);
                                            Object[] objArr = {null, arrayList, 32774, new CameraCaptureSession.StateCallback() {

                                                /* renamed from: a */
                                                public static ChangeQuickRedirect f8544a;

                                                public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8544a, false, 3160, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSessionForMain onConfigured");
                                                        if (CameraControllerV2.this.f8311B == null || CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                            LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSessionForMain mDeviceProxy is NULL or next task is closeCamera, return");
                                                            CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                                            return;
                                                        }
                                                        try {
                                                            CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                            if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                            } else {
                                                                int unused3 = CameraControllerV2.this.f8344aI = 4;
                                                            }
                                                            CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                            CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, Integer.valueOf(intValue));
                                                            CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                            CameraControllerV2.this.m9065a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8342aG);
                                                            CameraControllerV2.this.m9122ar();
                                                            CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                            CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                            CaptureRequest unused4 = CameraControllerV2.this.f8324O = CameraControllerV2.this.f8323N.build();
                                                            CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8324O, CameraControllerV2.this.f8401br, CameraControllerV2.this.f8406q);
                                                            CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                        } catch (CameraAccessException e) {
                                                            e.printStackTrace();
                                                        } catch (Throwable th) {
                                                            boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                                            throw th;
                                                        }
                                                        boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                                    }
                                                }

                                                public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8544a, false, 3161, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSessionForMain onConfigureFailed");
                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                                        boolean unused = CameraControllerV2.this.f8374ap = false;
                                                        CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSessionForMain onConfigureFailed"));
                                                    }
                                                }

                                                public void onClosed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8544a, false, 3162, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                        LogUtil.m15942a(al, "PreviewSession onClosed " + cameraCaptureSession + " mCaptureSession: " + CameraControllerV2.this.f8325P);
                                                        if (cameraCaptureSession.equals(CameraControllerV2.this.f8325P)) {
                                                            AsyncTaskEx.f13744r.mo22621a("PreviewSession onClosed", 
                                                            /*  JADX ERROR: Method code generation error
                                                                jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x005d: INVOKE  
                                                                  (wrap: com.meizu.media.camera.util.AsyncTaskEx$c : 0x0054: SGET  (r0v9 com.meizu.media.camera.util.AsyncTaskEx$c) =  com.meizu.media.camera.util.AsyncTaskEx.r com.meizu.media.camera.util.AsyncTaskEx$c)
                                                                  ("PreviewSession onClosed")
                                                                  (wrap: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA : 0x005a: CONSTRUCTOR  (r2v7 com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA) = 
                                                                  (r8v0 'this' com.meizu.media.camera.camcontroller.CameraControllerV2$31$1 A[THIS])
                                                                  (r9v0 'cameraCaptureSession' android.hardware.camera2.CameraCaptureSession)
                                                                 call: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA.<init>(com.meizu.media.camera.camcontroller.CameraControllerV2$31$1, android.hardware.camera2.CameraCaptureSession):void type: CONSTRUCTOR)
                                                                 com.meizu.media.camera.util.AsyncTaskEx.c.a(java.lang.String, java.lang.Runnable):void type: VIRTUAL in method: com.meizu.media.camera.camcontroller.CameraControllerV2.31.1.onClosed(android.hardware.camera2.CameraCaptureSession):void, dex: classes.dex
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                	at java.util.ArrayList.forEach(Unknown Source)
                                                                	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                                                                	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                                                                	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                	at jadx.core.codegen.InsnGen.filledNewArray(InsnGen.java:594)
                                                                	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:391)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeTryCatch(RegionGen.java:311)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:68)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                	at java.util.ArrayList.forEach(Unknown Source)
                                                                	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                                                                	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                                                                	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                                                                	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                                                                	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                	at java.util.ArrayList.forEach(Unknown Source)
                                                                	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                	at jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:112)
                                                                	at jadx.core.codegen.ClassGen.makeClass(ClassGen.java:78)
                                                                	at jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)
                                                                	at jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:33)
                                                                	at jadx.core.codegen.CodeGen.generate(CodeGen.java:21)
                                                                	at jadx.core.ProcessClass.generateCode(ProcessClass.java:61)
                                                                	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)
                                                                Caused by: jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x005a: CONSTRUCTOR  (r2v7 com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA) = 
                                                                  (r8v0 'this' com.meizu.media.camera.camcontroller.CameraControllerV2$31$1 A[THIS])
                                                                  (r9v0 'cameraCaptureSession' android.hardware.camera2.CameraCaptureSession)
                                                                 call: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA.<init>(com.meizu.media.camera.camcontroller.CameraControllerV2$31$1, android.hardware.camera2.CameraCaptureSession):void type: CONSTRUCTOR in method: com.meizu.media.camera.camcontroller.CameraControllerV2.31.1.onClosed(android.hardware.camera2.CameraCaptureSession):void, dex: classes.dex
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)
                                                                	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                                                                	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                                                                	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                	... 141 more
                                                                Caused by: jadx.core.utils.exceptions.JadxRuntimeException: Expected class to be processed at this point, class: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA, state: NOT_LOADED
                                                                	at jadx.core.dex.nodes.ClassNode.ensureProcessed(ClassNode.java:260)
                                                                	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:606)
                                                                	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                	... 147 more
                                                                */
                                                            /*
                                                                this = this;
                                                                r0 = 1
                                                                java.lang.Object[] r1 = new java.lang.Object[r0]
                                                                r2 = 0
                                                                r1[r2] = r9
                                                                com.meizu.savior.ChangeQuickRedirect r3 = f8544a
                                                                java.lang.Class[] r6 = new java.lang.Class[r0]
                                                                java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                                r6[r2] = r0
                                                                java.lang.Class r7 = java.lang.Void.TYPE
                                                                r4 = 0
                                                                r5 = 3162(0xc5a, float:4.431E-42)
                                                                r2 = r8
                                                                com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                                boolean r0 = r0.isSupported
                                                                if (r0 == 0) goto L_0x001d
                                                                return
                                                            L_0x001d:
                                                                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                                r1.<init>()
                                                                java.lang.String r2 = "PreviewSession onClosed "
                                                                r1.append(r2)
                                                                r1.append(r9)
                                                                java.lang.String r2 = " mCaptureSession: "
                                                                r1.append(r2)
                                                                com.meizu.media.camera.camcontroller.CameraControllerV2$31 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C190731.this
                                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                                r1.append(r2)
                                                                java.lang.String r1 = r1.toString()
                                                                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                                com.meizu.media.camera.camcontroller.CameraControllerV2$31 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C190731.this
                                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                android.hardware.camera2.CameraCaptureSession r0 = r0.f8325P
                                                                boolean r0 = r9.equals(r0)
                                                                if (r0 != 0) goto L_0x0054
                                                                return
                                                            L_0x0054:
                                                                com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                                java.lang.String r1 = "PreviewSession onClosed"
                                                                com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$31$1$bumjdpUD5cQhphTwcCoerXw2hhA
                                                                r2.<init>(r8, r9)
                                                                r0.mo22621a(r1, r2)
                                                                return
                                                            */
                                                            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C190731.C19081.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                        }

                                                        /* access modifiers changed from: private */
                                                        /* renamed from: a */
                                                        public /* synthetic */ void m9348a(CameraCaptureSession cameraCaptureSession) {
                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8544a, false, 3163, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                try {
                                                                    CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                                    if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                                        CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                                                    }
                                                                } catch (InterruptedException e) {
                                                                    e.printStackTrace();
                                                                } catch (Throwable th) {
                                                                    CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                    throw th;
                                                                }
                                                                CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                            }
                                                        }
                                                    }, CameraControllerV2.this.f8406q};
                                                    try {
                                                        CameraCaptureSession unused4 = CameraControllerV2.this.f8325P = null;
                                                        TimingLoggerUtil.m16032a("startUp", "startPreview");
                                                        C2634am.m15993a(CameraControllerV2.this.f8311B.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr);
                                                        return;
                                                    } catch (Exception e) {
                                                        LogUtil.m15950b(CameraControllerV2.f8305s, "createCameraPreviewSessionForMain ReflectError", e);
                                                        CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                                        CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSessionForMain ReflectError.", e));
                                                        return;
                                                    }
                                                }
                                            }
                                            LogUtil.m15956e(CameraControllerV2.f8305s, "mDeviceProxy or mDeviceProxy.getDevice() is null or next task  is closeCamera, return!");
                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSession");
                                            CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                            boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                        } catch (CameraAccessException e2) {
                                            LogUtil.m15950b(CameraControllerV2.f8305s, "createCameraPreviewSessionForMain error", e2);
                                            CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForMain");
                                            CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSessionForMain error.", e2));
                                        }
                                    }
                                }
                            });
                        }
                    }

                    /* renamed from: c */
                    private void m9152c(Intent intent, List<Surface> list) {
                        if (!PatchProxy.proxy(new Object[]{intent, list}, this, f8303o, false, 2973, new Class[]{Intent.class, List.class}, Void.TYPE).isSupported && Build.VERSION.SDK_INT >= 24) {
                            LogUtil.C2630a aVar = f8305s;
                            LogUtil.m15952c(aVar, "createCameraPreviewSessionForTof preview size:" + DeviceHelper.f14009da + "x" + DeviceHelper.f14010db);
                            final UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                            final Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                            final boolean booleanExtra = intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
                            CamIntentTask.C1777c a = this.f8281e.mo19040a(uuid);
                            final CameraModeType.ModeType modeType = (CameraModeType.ModeType) intent.getSerializableExtra("modeType");
                            this.f8388be = true;
                            this.f8387bd = false;
                            CameraModeType.ModeType a2 = CameraModeType.m10946a();
                            if (modeType != a2) {
                                LogUtil.C2630a aVar2 = f8305s;
                                LogUtil.m15952c(aVar2, "cancel createCameraPreviewSessionForTof, modeType:" + modeType + ", currentModeType:" + a2);
                                this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                this.f8374ap = false;
                                return;
                            }
                            try {
                                this.f8315F.mo19728a("createCameraPreviewSessionForTof");
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                            final List<Surface> list2 = list;
                            final CamIntentTask.C1777c cVar = a;
                            this.f8407r.post(new Runnable() {

                                /* renamed from: a */
                                public static ChangeQuickRedirect f8547a;

                                public void run() {
                                    if (!PatchProxy.proxy(new Object[0], this, f8547a, false, 3164, new Class[0], Void.TYPE).isSupported) {
                                        try {
                                            if (!(CameraControllerV2.this.f8312C == null || CameraControllerV2.this.f8312C.mo19730a() == null)) {
                                                if (!CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                    CaptureRequest.Builder unused = CameraControllerV2.this.f8326Q = ((CameraDevice) CameraControllerV2.this.f8312C.mo19730a()).createCaptureRequest(1);
                                                    Surface unused2 = CameraControllerV2.this.f8384az = (Surface) list2.get(list2.size() - 1);
                                                    for (Surface addTarget : list2) {
                                                        CameraControllerV2.this.f8326Q.addTarget(addTarget);
                                                    }
                                                    ArrayList arrayList = new ArrayList(list2.size());
                                                    for (Surface outputConfiguration : list2) {
                                                        arrayList.add(new OutputConfiguration(outputConfiguration));
                                                    }
                                                    LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                    LogUtil.m15952c(al, "createCameraPreviewSessionForTof mStreamConfigOptMode :" + 0 + ", modeType:" + modeType);
                                                    Object[] objArr = {null, arrayList, 0, new CameraCaptureSession.StateCallback() {

                                                        /* renamed from: a */
                                                        public static ChangeQuickRedirect f8555a;

                                                        public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8555a, false, 3165, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSessionForTof onConfigured");
                                                                if (CameraControllerV2.this.f8312C == null || CameraControllerV2.this.f8281e.mo19051a(booleanExtra)) {
                                                                    LogUtil.m15952c(CameraControllerV2.f8305s, "createCameraPreviewSessionForTof mDeviceProxy is NULL or next task is closeCamera, return");
                                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForTof");
                                                                    return;
                                                                }
                                                                try {
                                                                    CameraCaptureSession unused = CameraControllerV2.this.f8328S = cameraCaptureSession;
                                                                    CaptureRequest unused2 = CameraControllerV2.this.f8327R = CameraControllerV2.this.f8326Q.build();
                                                                    CameraControllerV2.this.f8328S.setRepeatingRequest(CameraControllerV2.this.f8327R, new CameraCaptureSession.CaptureCallback() {

                                                                        /* renamed from: a */
                                                                        public static ChangeQuickRedirect f8557a;

                                                                        public void onCaptureStarted(CameraCaptureSession cameraCaptureSession, CaptureRequest captureRequest, long j, long j2) {
                                                                        }

                                                                        public void onCaptureCompleted(CameraCaptureSession cameraCaptureSession, CaptureRequest captureRequest, TotalCaptureResult totalCaptureResult) {
                                                                            Object obj;
                                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, totalCaptureResult}, this, f8557a, false, 3169, new Class[]{CameraCaptureSession.class, CaptureRequest.class, TotalCaptureResult.class}, Void.TYPE).isSupported) {
                                                                                if (totalCaptureResult != null && CameraControllerV2.f8300aY == null) {
                                                                                    Object obj2 = totalCaptureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.DUAL_OPT_DATA));
                                                                                    if (obj2 != null) {
                                                                                        byte[] unused = CameraControllerV2.f8300aY = (byte[]) obj2;
                                                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                                                        LogUtil.m15952c(al, "processTofCaliData: " + totalCaptureResult + CameraControllerV2.f8300aY);
                                                                                    }
                                                                                    if (!(CameraControllerV2.this.f8396bm == null || CameraControllerV2.f8300aY == null)) {
                                                                                        CameraControllerV2.this.f8396bm.mo19548a(CameraControllerV2.f8300aY);
                                                                                    }
                                                                                }
                                                                                if (!(totalCaptureResult == null || CameraControllerV2.f8301aZ != null || (obj = totalCaptureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.DUAL_OPT_JCX_DATA))) == null)) {
                                                                                    byte[] unused2 = CameraControllerV2.f8301aZ = (byte[]) obj;
                                                                                    LogUtil.C2630a al2 = CameraControllerV2.f8305s;
                                                                                    LogUtil.m15952c(al2, "processTofCaliData_JCX: " + CameraControllerV2.f8301aZ.length);
                                                                                    int[] unused3 = CameraControllerV2.f8302ba = new int[(CameraControllerV2.f8301aZ.length / 4)];
                                                                                    for (int i = 0; i < CameraControllerV2.f8301aZ.length; i += 4) {
                                                                                        CameraControllerV2.f8302ba[i / 4] = C2644av.m16110b(new byte[]{CameraControllerV2.f8301aZ[i], CameraControllerV2.f8301aZ[i + 1], CameraControllerV2.f8301aZ[i + 2], CameraControllerV2.f8301aZ[i + 3]});
                                                                                    }
                                                                                }
                                                                                if (CameraControllerV2.this.f8388be && totalCaptureResult != null) {
                                                                                    try {
                                                                                        Object obj3 = totalCaptureResult.get(CameraControllerV2.this.mo19562a(Contants.CameraV2Key.TOF_OPT_ENABLE));
                                                                                        if (obj3 == null) {
                                                                                            return;
                                                                                        }
                                                                                        if ("1".equals(obj3.toString())) {
                                                                                            if (CameraControllerV2.this.f8387bd) {
                                                                                                LogUtil.m15952c(CameraControllerV2.f8305s, "TOF camera enable ");
                                                                                                cVar.mo18243k();
                                                                                                boolean unused4 = CameraControllerV2.this.f8387bd = false;
                                                                                            }
                                                                                        } else if (!CameraControllerV2.this.f8387bd) {
                                                                                            LogUtil.m15952c(CameraControllerV2.f8305s, "TOF camera damage ");
                                                                                            cVar.mo18241j();
                                                                                            boolean unused5 = CameraControllerV2.this.f8387bd = true;
                                                                                        }
                                                                                    } catch (IllegalArgumentException e) {
                                                                                        LogUtil.m15952c(CameraControllerV2.f8305s, "this system has no key com.meizu.dualcamera.bokehTx_enable");
                                                                                        boolean unused6 = CameraControllerV2.this.f8388be = false;
                                                                                        e.printStackTrace();
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }, CameraControllerV2.this.f8407r);
                                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE2, new Object[0]);
                                                                } catch (CameraAccessException e) {
                                                                    e.printStackTrace();
                                                                } catch (Throwable th) {
                                                                    boolean unused3 = CameraControllerV2.this.f8374ap = false;
                                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForTof");
                                                                    throw th;
                                                                }
                                                                boolean unused4 = CameraControllerV2.this.f8374ap = false;
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForTof");
                                                            }
                                                        }

                                                        public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8555a, false, 3166, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "createCameraPreviewSessionForTof onConfigureFailed");
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForTof");
                                                                boolean unused = CameraControllerV2.this.f8374ap = false;
                                                                CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSessionForTof onConfigureFailed"));
                                                            }
                                                        }

                                                        public void onClosed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8555a, false, 3167, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                                LogUtil.m15942a(al, "PreviewSession onClosed " + cameraCaptureSession + " mCaptureSession: " + CameraControllerV2.this.f8325P);
                                                                if (cameraCaptureSession.equals(CameraControllerV2.this.f8328S)) {
                                                                    AsyncTaskEx.f13744r.mo22621a("PreviewSession onClosed", 
                                                                    /*  JADX ERROR: Method code generation error
                                                                        jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x005d: INVOKE  
                                                                          (wrap: com.meizu.media.camera.util.AsyncTaskEx$c : 0x0054: SGET  (r0v9 com.meizu.media.camera.util.AsyncTaskEx$c) =  com.meizu.media.camera.util.AsyncTaskEx.r com.meizu.media.camera.util.AsyncTaskEx$c)
                                                                          ("PreviewSession onClosed")
                                                                          (wrap: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI : 0x005a: CONSTRUCTOR  (r2v7 com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI) = 
                                                                          (r8v0 'this' com.meizu.media.camera.camcontroller.CameraControllerV2$32$1 A[THIS])
                                                                          (r9v0 'cameraCaptureSession' android.hardware.camera2.CameraCaptureSession)
                                                                         call: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI.<init>(com.meizu.media.camera.camcontroller.CameraControllerV2$32$1, android.hardware.camera2.CameraCaptureSession):void type: CONSTRUCTOR)
                                                                         com.meizu.media.camera.util.AsyncTaskEx.c.a(java.lang.String, java.lang.Runnable):void type: VIRTUAL in method: com.meizu.media.camera.camcontroller.CameraControllerV2.32.1.onClosed(android.hardware.camera2.CameraCaptureSession):void, dex: classes.dex
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                        	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                        	at java.util.ArrayList.forEach(Unknown Source)
                                                                        	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                        	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                        	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                        	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                        	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                        	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                        	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                                                                        	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                                                                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                        	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                        	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                        	at jadx.core.codegen.InsnGen.filledNewArray(InsnGen.java:594)
                                                                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:391)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeTryCatch(RegionGen.java:311)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:68)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                        	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                        	at java.util.ArrayList.forEach(Unknown Source)
                                                                        	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                        	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                        	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                        	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                        	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                        	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                        	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                                                                        	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                                                                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                        	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                        	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                        	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                                                                        	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                                                                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                                                                        	at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                                                                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                                                                        	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                                                                        	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                                                                        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                                                                        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                                                                        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                                                                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)
                                                                        	at java.util.ArrayList.forEach(Unknown Source)
                                                                        	at java.util.stream.SortedOps$RefSortingSink.end(Unknown Source)
                                                                        	at java.util.stream.Sink$ChainedReference.end(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
                                                                        	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
                                                                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
                                                                        	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
                                                                        	at java.util.stream.ReferencePipeline.forEach(Unknown Source)
                                                                        	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                                                                        	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                                                                        	at jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:112)
                                                                        	at jadx.core.codegen.ClassGen.makeClass(ClassGen.java:78)
                                                                        	at jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)
                                                                        	at jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:33)
                                                                        	at jadx.core.codegen.CodeGen.generate(CodeGen.java:21)
                                                                        	at jadx.core.ProcessClass.generateCode(ProcessClass.java:61)
                                                                        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)
                                                                        Caused by: jadx.core.utils.exceptions.CodegenException: Error generate insn: 0x005a: CONSTRUCTOR  (r2v7 com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI) = 
                                                                          (r8v0 'this' com.meizu.media.camera.camcontroller.CameraControllerV2$32$1 A[THIS])
                                                                          (r9v0 'cameraCaptureSession' android.hardware.camera2.CameraCaptureSession)
                                                                         call: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI.<init>(com.meizu.media.camera.camcontroller.CameraControllerV2$32$1, android.hardware.camera2.CameraCaptureSession):void type: CONSTRUCTOR in method: com.meizu.media.camera.camcontroller.CameraControllerV2.32.1.onClosed(android.hardware.camera2.CameraCaptureSession):void, dex: classes.dex
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)
                                                                        	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                                                                        	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                                                                        	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                                                                        	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                                                                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                                                                        	... 137 more
                                                                        Caused by: jadx.core.utils.exceptions.JadxRuntimeException: Expected class to be processed at this point, class: com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI, state: NOT_LOADED
                                                                        	at jadx.core.dex.nodes.ClassNode.ensureProcessed(ClassNode.java:260)
                                                                        	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:606)
                                                                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                                                                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                                                                        	... 143 more
                                                                        */
                                                                    /*
                                                                        this = this;
                                                                        r0 = 1
                                                                        java.lang.Object[] r1 = new java.lang.Object[r0]
                                                                        r2 = 0
                                                                        r1[r2] = r9
                                                                        com.meizu.savior.ChangeQuickRedirect r3 = f8555a
                                                                        java.lang.Class[] r6 = new java.lang.Class[r0]
                                                                        java.lang.Class<android.hardware.camera2.CameraCaptureSession> r0 = android.hardware.camera2.CameraCaptureSession.class
                                                                        r6[r2] = r0
                                                                        java.lang.Class r7 = java.lang.Void.TYPE
                                                                        r4 = 0
                                                                        r5 = 3167(0xc5f, float:4.438E-42)
                                                                        r2 = r8
                                                                        com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                                        boolean r0 = r0.isSupported
                                                                        if (r0 == 0) goto L_0x001d
                                                                        return
                                                                    L_0x001d:
                                                                        com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                                        java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                                        r1.<init>()
                                                                        java.lang.String r2 = "PreviewSession onClosed "
                                                                        r1.append(r2)
                                                                        r1.append(r9)
                                                                        java.lang.String r2 = " mCaptureSession: "
                                                                        r1.append(r2)
                                                                        com.meizu.media.camera.camcontroller.CameraControllerV2$32 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.C190932.this
                                                                        com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                        android.hardware.camera2.CameraCaptureSession r2 = r2.f8325P
                                                                        r1.append(r2)
                                                                        java.lang.String r1 = r1.toString()
                                                                        com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                                        com.meizu.media.camera.camcontroller.CameraControllerV2$32 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.C190932.this
                                                                        com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                                        android.hardware.camera2.CameraCaptureSession r0 = r0.f8328S
                                                                        boolean r0 = r9.equals(r0)
                                                                        if (r0 != 0) goto L_0x0054
                                                                        return
                                                                    L_0x0054:
                                                                        com.meizu.media.camera.util.AsyncTaskEx$c r0 = com.meizu.media.camera.util.AsyncTaskEx.f13744r
                                                                        java.lang.String r1 = "PreviewSession onClosed"
                                                                        com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI r2 = new com.meizu.media.camera.camcontroller.-$$Lambda$CameraControllerV2$32$1$WagivZgZKS77XQce6S2vwovwGOI
                                                                        r2.<init>(r8, r9)
                                                                        r0.mo22621a(r1, r2)
                                                                        return
                                                                    */
                                                                    throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C190932.C19101.onClosed(android.hardware.camera2.CameraCaptureSession):void");
                                                                }

                                                                /* access modifiers changed from: private */
                                                                /* renamed from: a */
                                                                public /* synthetic */ void m9349a(CameraCaptureSession cameraCaptureSession) {
                                                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8555a, false, 3168, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                                                        try {
                                                                            CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                                                            if (CameraControllerV2.this.f8328S != null && CameraControllerV2.this.f8328S.equals(cameraCaptureSession)) {
                                                                                CameraCaptureSession unused = CameraControllerV2.this.f8328S = null;
                                                                            }
                                                                        } catch (InterruptedException e) {
                                                                            e.printStackTrace();
                                                                        } catch (Throwable th) {
                                                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                            throw th;
                                                                        }
                                                                        CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                                                    }
                                                                }
                                                            }, CameraControllerV2.this.f8407r};
                                                            try {
                                                                CameraCaptureSession unused3 = CameraControllerV2.this.f8328S = null;
                                                                C2634am.m15993a(CameraControllerV2.this.f8312C.mo19730a(), "createCustomCaptureSession", (Class<?>[]) new Class[]{InputConfiguration.class, List.class, Integer.TYPE, CameraCaptureSession.StateCallback.class, Handler.class}, objArr);
                                                                return;
                                                            } catch (Exception e) {
                                                                LogUtil.m15950b(CameraControllerV2.f8305s, "createCameraPreviewSessionForTof ReflectError", e);
                                                                CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForTof");
                                                                CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSessionForTof ReflectError.", e));
                                                                return;
                                                            }
                                                        }
                                                    }
                                                    LogUtil.m15956e(CameraControllerV2.f8305s, "mDeviceProxy or mDeviceProxy.getDevice() is null or next task  is closeCamera, return!");
                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                                    boolean unused4 = CameraControllerV2.this.f8374ap = false;
                                                } catch (CameraAccessException e2) {
                                                    LogUtil.m15950b(CameraControllerV2.f8305s, "createCameraPreviewSessionForTof error", e2);
                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraPreviewSessionForTof");
                                                    CameraControllerV2.this.m9084a(new RuntimeException("createCameraPreviewSessionForTof error.", e2));
                                                }
                                            }
                                        }
                                    });
                                }
                            }

                            /* renamed from: d */
                            private void m9164d(Intent intent, final List<Surface> list) {
                                if (!PatchProxy.proxy(new Object[]{intent, list}, this, f8303o, false, 2974, new Class[]{Intent.class, List.class}, Void.TYPE).isSupported) {
                                    if (this.f8287m == null) {
                                        this.f8287m = mo19528n();
                                    }
                                    if (this.f8287m != null) {
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15952c(aVar, "createCameraVideoSession preview size:" + this.f8287m.x + "x" + this.f8287m.y);
                                    } else {
                                        LogUtil.m15952c(f8305s, "createCameraVideoSession preview is null");
                                    }
                                    final UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                    final Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    CameraModeType.ModeType modeType = (CameraModeType.ModeType) intent.getSerializableExtra("modeType");
                                    CameraModeType.ModeType a = CameraModeType.m10946a();
                                    if (modeType != a) {
                                        LogUtil.C2630a aVar2 = f8305s;
                                        LogUtil.m15952c(aVar2, "cancel createCameraVideoSession, modeType:" + modeType + ", currentModeType:" + a);
                                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                        this.f8374ap = false;
                                        return;
                                    }
                                    AsyncTaskEx.f13744r.mo22621a("createCameraVideoSession", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8559a;

                                        /* JADX WARNING: Code restructure failed: missing block: B:53:0x01e3, code lost:
                                            if (com.meizu.media.camera.util.DeviceHelper.f13863aP != false) goto L_0x01e5;
                                         */
                                        /* JADX WARNING: Code restructure failed: missing block: B:80:0x023a, code lost:
                                            if (com.meizu.media.camera.camcontroller.CameraControllerV2.m9170e(r8.f8563e).mo19733b() == 1) goto L_0x023c;
                                         */
                                        /* JADX WARNING: Removed duplicated region for block: B:84:0x0245 A[Catch:{ all -> 0x0352, CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }] */
                                        /* Code decompiled incorrectly, please refer to instructions dump. */
                                        public void run() {
                                            /*
                                                r20 = this;
                                                r8 = r20
                                                r9 = 0
                                                java.lang.Object[] r1 = new java.lang.Object[r9]
                                                com.meizu.savior.ChangeQuickRedirect r3 = f8559a
                                                java.lang.Class[] r6 = new java.lang.Class[r9]
                                                java.lang.Class r7 = java.lang.Void.TYPE
                                                r4 = 0
                                                r5 = 3170(0xc62, float:4.442E-42)
                                                r2 = r20
                                                com.meizu.savior.PatchProxyResult r1 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                boolean r1 = r1.isSupported
                                                if (r1 == 0) goto L_0x0019
                                                return
                                            L_0x0019:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.c r1 = r1.f8315F     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r2 = "createCameraVideoSession"
                                                r1.mo19728a(r2)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader r1 = r1.f8316G     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r2 = 2
                                                r3 = 1
                                                if (r1 == 0) goto L_0x0090
                                                java.util.List r1 = r11     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0090
                                                java.util.List r1 = r11     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r1 = r1.size()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r2) goto L_0x0090
                                                com.meizu.media.camera.util.ac$a r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r4 = "surfaces initial"
                                                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r1, (java.lang.String) r4)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.List r4 = r11     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Object r4 = r4.get(r9)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = (android.view.Surface) r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface unused = r1.f8320K = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.List r4 = r11     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Object r4 = r4.get(r3)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = (android.view.Surface) r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface unused = r1.f8319J = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader r1 = r1.f8316G     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1.close()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader r4 = r4.f8316G     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r4 = r4.getWidth()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r5 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader r5 = r5.f8316G     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r5 = r5.getHeight()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6 = 256(0x100, float:3.59E-43)
                                                android.media.ImageReader r4 = android.media.ImageReader.newInstance(r4, r5, r6, r2)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader unused = r1.f8316G = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8319J     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface unused = r1.f8383ay = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x0090:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.graphics.Point r1 = r1.f8287m     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0419
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0419
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r1 = r1.f8320K     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0419
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r1 = r1.f8319J     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != 0) goto L_0x00b0
                                                goto L_0x0419
                                            L_0x00b0:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.f r4 = r4.f8311B     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Object r4 = r4.mo19730a()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CameraDevice r4 = (android.hardware.camera2.CameraDevice) r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r5 = 3
                                                android.hardware.camera2.CaptureRequest$Builder r4 = r4.createCaptureRequest(r5)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CaptureRequest.Builder unused = r1.f8323N = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CaptureRequest$Builder r1 = r1.f8323N     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8319J     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1.addTarget(r4)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CaptureRequest$Builder r1 = r1.f8323N     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8320K     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1.addTarget(r4)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r1 = r1.f8322M     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != 0) goto L_0x00f4
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r1 = r1.f8321L     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0118
                                            L_0x00f4:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CaptureRequest$Builder r1 = r1.f8323N     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CaptureRequest$Key r4 = android.hardware.camera2.CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.util.Range r6 = new android.util.Range     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r7 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r7 = r7.f8333X     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r10 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r10 = r10.f8333X     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6.<init>(r7, r10)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1.set(r4, r6)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x0118:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r1 = r1.f8322M     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0137
                                                android.view.Surface[] r1 = new android.view.Surface[r2]     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8319J     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r9] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8320K     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r3] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.List r1 = java.util.Arrays.asList(r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                goto L_0x0178
                                            L_0x0137:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader r1 = r1.f8316G     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0162
                                                android.view.Surface[] r1 = new android.view.Surface[r5]     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8319J     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r9] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.media.ImageReader r4 = r4.f8316G     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.getSurface()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r3] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8320K     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r2] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.List r1 = java.util.Arrays.asList(r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                goto L_0x0178
                                            L_0x0162:
                                                android.view.Surface[] r1 = new android.view.Surface[r2]     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8319J     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r9] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r4 = r4.f8320K     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r3] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.List r1 = java.util.Arrays.asList(r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x0178:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r4 = r4.f8322M     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6 = 24
                                                r7 = -1
                                                r10 = 0
                                                r11 = 4
                                                if (r4 != 0) goto L_0x02c3
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r4 = r4.f8321L     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r4 == 0) goto L_0x018f
                                                goto L_0x02c3
                                            L_0x018f:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.b$a r4 = r4.f8281e     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.UUID r13 = r0     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.a$c r4 = r4.mo19040a((java.util.UUID) r13)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r4 == 0) goto L_0x019f
                                                int r7 = r4.mo18238h()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x019f:
                                                java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r13 = r1.size()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r4.<init>(r13)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.Iterator r1 = r1.iterator()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x01ac:
                                                boolean r13 = r1.hasNext()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 == 0) goto L_0x01c5
                                                java.lang.Object r13 = r1.next()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r13 = (android.view.Surface) r13     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r14 = android.os.Build.VERSION.SDK_INT     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r14 < r6) goto L_0x01ac
                                                android.hardware.camera2.params.OutputConfiguration r14 = new android.hardware.camera2.params.OutputConfiguration     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r14.<init>(r13)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r4.add(r14)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                goto L_0x01ac
                                            L_0x01c5:
                                                boolean r1 = com.meizu.media.camera.util.DeviceHelper.f13862aO     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6 = 34951(0x8887, float:4.8977E-41)
                                                r13 = 5
                                                if (r1 == 0) goto L_0x0230
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r1 = r1.f8399bp     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0230
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r1 = r1.mo19733b()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r3) goto L_0x01ea
                                                boolean r1 = com.meizu.media.camera.util.DeviceHelper.f13863aP     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x023c
                                            L_0x01e5:
                                                r1 = 1
                                                r12 = 34950(0x8886, float:4.8975E-41)
                                                goto L_0x0243
                                            L_0x01ea:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r1 = r1.mo19733b()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r6 = com.meizu.media.camera.util.DeviceHelper.f14029du     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r6) goto L_0x0209
                                                boolean r1 = com.meizu.media.camera.util.DeviceHelper.f13863aP     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0241
                                                com.meizu.media.camera.util.DeviceHelper$EIS_SUPPORT_SCENE r1 = com.meizu.media.camera.util.DeviceHelper.f14019dk     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.DeviceHelper$EIS_SUPPORT_SCENE r6 = com.meizu.media.camera.util.DeviceHelper.EIS_SUPPORT_SCENE.WITHOUT_TELE     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == r6) goto L_0x01e5
                                                com.meizu.media.camera.util.DeviceHelper$EIS_SUPPORT_SCENE r1 = com.meizu.media.camera.util.DeviceHelper.f14019dk     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.DeviceHelper$EIS_SUPPORT_SCENE r6 = com.meizu.media.camera.util.DeviceHelper.EIS_SUPPORT_SCENE.ALL     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r6) goto L_0x0241
                                                goto L_0x01e5
                                            L_0x0209:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r1 = r1.mo19733b()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r6 = com.meizu.media.camera.util.DeviceHelper.f13949bw     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r6) goto L_0x0222
                                                boolean r1 = com.meizu.media.camera.util.DeviceHelper.f13863aP     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0241
                                                com.meizu.media.camera.util.DeviceHelper$EIS_SUPPORT_SCENE r1 = com.meizu.media.camera.util.DeviceHelper.f14019dk     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.DeviceHelper$EIS_SUPPORT_SCENE r6 = com.meizu.media.camera.util.DeviceHelper.EIS_SUPPORT_SCENE.ALL     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r6) goto L_0x0241
                                                goto L_0x01e5
                                            L_0x0222:
                                                if (r7 == r13) goto L_0x01e5
                                                r1 = 6
                                                if (r7 == r1) goto L_0x01e5
                                                boolean r1 = com.meizu.media.camera.util.DeviceHelper.f13859aL     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 == 0) goto L_0x0241
                                                int r1 = com.meizu.media.camera.util.DeviceHelper.f14004cy     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r7 != r1) goto L_0x0241
                                                goto L_0x01e5
                                            L_0x0230:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r1 = r1.mo19733b()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r1 != r3) goto L_0x0241
                                            L_0x023c:
                                                r1 = 0
                                                r12 = 34951(0x8887, float:4.8977E-41)
                                                goto L_0x0243
                                            L_0x0241:
                                                r1 = 0
                                                r12 = 0
                                            L_0x0243:
                                                if (r1 == 0) goto L_0x024e
                                                com.meizu.media.camera.util.ac$a r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r7 = "use video electronic stabilization"
                                                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r6, (java.lang.String) r7)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x024e:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6.mo19572e((int) r9)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6[r9] = r10     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6[r3] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Integer r4 = java.lang.Integer.valueOf(r12)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6[r2] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$33$1 r4 = new com.meizu.media.camera.camcontroller.CameraControllerV2$33$1     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r4.<init>(r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6[r5] = r4     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraController$e r1 = r1.f8279c     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6[r11] = r1     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x029f }
                                                android.hardware.camera2.CameraCaptureSession unused = r1.f8325P = r10     // Catch:{ Exception -> 0x029f }
                                                java.lang.String r1 = "startUp"
                                                java.lang.String r4 = "startPreview"
                                                com.meizu.media.camera.util.TimingLoggerUtil.m16032a((java.lang.String) r1, (java.lang.String) r4)     // Catch:{ Exception -> 0x029f }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x029f }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ Exception -> 0x029f }
                                                java.lang.Object r1 = r1.mo19730a()     // Catch:{ Exception -> 0x029f }
                                                java.lang.String r4 = "createCustomCaptureSession"
                                                java.lang.Class[] r7 = new java.lang.Class[r13]     // Catch:{ Exception -> 0x029f }
                                                java.lang.Class<android.hardware.camera2.params.InputConfiguration> r10 = android.hardware.camera2.params.InputConfiguration.class
                                                r7[r9] = r10     // Catch:{ Exception -> 0x029f }
                                                java.lang.Class<java.util.List> r9 = java.util.List.class
                                                r7[r3] = r9     // Catch:{ Exception -> 0x029f }
                                                java.lang.Class r3 = java.lang.Integer.TYPE     // Catch:{ Exception -> 0x029f }
                                                r7[r2] = r3     // Catch:{ Exception -> 0x029f }
                                                java.lang.Class<android.hardware.camera2.CameraCaptureSession$StateCallback> r2 = android.hardware.camera2.CameraCaptureSession.StateCallback.class
                                                r7[r5] = r2     // Catch:{ Exception -> 0x029f }
                                                java.lang.Class<android.os.Handler> r2 = android.os.Handler.class
                                                r7[r11] = r2     // Catch:{ Exception -> 0x029f }
                                                com.meizu.media.camera.util.C2634am.m15993a((java.lang.Object) r1, (java.lang.String) r4, (java.lang.Class<?>[]) r7, (java.lang.Object[]) r6)     // Catch:{ Exception -> 0x029f }
                                                goto L_0x046a
                                            L_0x029f:
                                                r0 = move-exception
                                                r1 = r0
                                                com.meizu.media.camera.util.ac$a r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r3 = "createCameraVideoSession ReflectError"
                                                com.meizu.media.camera.util.LogUtil.m15950b(r2, r3, r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.c r2 = r2.f8315F     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r3 = "createCameraVideoSession"
                                                r2.mo19729b(r3)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.RuntimeException r3 = new java.lang.RuntimeException     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r4 = "createCameraVideoSession ReflectError."
                                                r3.<init>(r4, r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r2.m9084a((java.lang.RuntimeException) r3)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                goto L_0x046a
                                            L_0x02c3:
                                                java.lang.Object r4 = new java.lang.Object     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r4.<init>()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r13 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.b$a r13 = r13.f8281e     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.UUID r14 = r0     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.a$c r13 = r13.mo19040a((java.util.UUID) r14)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 == 0) goto L_0x02d8
                                                int r7 = r13.mo18238h()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x02d8:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r13 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r13 = r13.f8321L     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 == 0) goto L_0x0303
                                                boolean r13 = com.meizu.media.camera.util.DeviceHelper.f13862aO     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 == 0) goto L_0x0303
                                                boolean r13 = com.meizu.media.camera.util.DeviceHelper.f13863aP     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 == 0) goto L_0x0303
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r13 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r13 = r13.f8399bp     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 == 0) goto L_0x0303
                                                int r13 = com.meizu.media.camera.util.DeviceHelper.f14003cx     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r7 == r13) goto L_0x02f8
                                                int r13 = com.meizu.media.camera.util.DeviceHelper.f14005cz     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r7 != r13) goto L_0x0303
                                            L_0x02f8:
                                                com.meizu.media.camera.util.ac$a r7 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r13 = "use video electronic stabilization"
                                                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r7, (java.lang.String) r13)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r7 = 1
                                                goto L_0x0304
                                            L_0x0303:
                                                r7 = 0
                                            L_0x0304:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$i r15 = new com.meizu.media.camera.camcontroller.CameraControllerV2$i     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r14 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.UUID r13 = r0     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.Contants$CameraService$RequestCode r12 = r1     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r16 = r13
                                                r13 = r15
                                                r5 = r15
                                                r15 = r16
                                                r16 = r12
                                                r17 = r4
                                                r18 = r7
                                                r13.<init>(r15, r16, r17, r18)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r12 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r12.mo19572e((int) r9)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r12 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.hardware.camera2.CameraCaptureSession unused = r12.f8325P = r10     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r10 = com.meizu.media.camera.util.DeviceUtil.m16206f()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r10 != 0) goto L_0x0356
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r10 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r10 = r10.f8321L     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r10 == 0) goto L_0x0334
                                                goto L_0x0356
                                            L_0x0334:
                                                java.lang.String r2 = "startUp"
                                                java.lang.String r3 = "startPreview"
                                                com.meizu.media.camera.util.TimingLoggerUtil.m16032a((java.lang.String) r2, (java.lang.String) r3)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                monitor-enter(r4)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ all -> 0x0352 }
                                                com.meizu.media.camera.camcontroller.f r2 = r2.f8311B     // Catch:{ all -> 0x0352 }
                                                java.lang.Object r2 = r2.mo19730a()     // Catch:{ all -> 0x0352 }
                                                android.hardware.camera2.CameraDevice r2 = (android.hardware.camera2.CameraDevice) r2     // Catch:{ all -> 0x0352 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ all -> 0x0352 }
                                                com.meizu.media.camera.camcontroller.CameraController$e r3 = r3.f8279c     // Catch:{ all -> 0x0352 }
                                                r2.createConstrainedHighSpeedCaptureSession(r1, r5, r3)     // Catch:{ all -> 0x0352 }
                                                monitor-exit(r4)     // Catch:{ all -> 0x0352 }
                                                goto L_0x046a
                                            L_0x0352:
                                                r0 = move-exception
                                                r1 = r0
                                                monitor-exit(r4)     // Catch:{ all -> 0x0352 }
                                                throw r1     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x0356:
                                                java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r12 = r1.size()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r10.<init>(r12)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.Iterator r1 = r1.iterator()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                            L_0x0363:
                                                boolean r12 = r1.hasNext()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r12 == 0) goto L_0x037c
                                                java.lang.Object r12 = r1.next()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                android.view.Surface r12 = (android.view.Surface) r12     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                int r13 = android.os.Build.VERSION.SDK_INT     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r13 < r6) goto L_0x0363
                                                android.hardware.camera2.params.OutputConfiguration r13 = new android.hardware.camera2.params.OutputConfiguration     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r13.<init>(r12)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r10.add(r13)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                goto L_0x0363
                                            L_0x037c:
                                                java.lang.Object[] r1 = new java.lang.Object[r11]     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean r6 = r6.f8322M     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                if (r6 == 0) goto L_0x0389
                                                r19 = 1
                                                goto L_0x0391
                                            L_0x0389:
                                                if (r7 == 0) goto L_0x038f
                                                r19 = 34950(0x8886, float:4.8975E-41)
                                                goto L_0x0391
                                            L_0x038f:
                                                r19 = 0
                                            L_0x0391:
                                                java.lang.Integer r6 = java.lang.Integer.valueOf(r19)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r9] = r6     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r3] = r10     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$h r6 = new com.meizu.media.camera.camcontroller.CameraControllerV2$h     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r7 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r10 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraController$e r10 = r10.f8279c     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6.<init>(r10)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1[r2] = r6     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r6 = 3
                                                r1[r6] = r5     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r5 = "android.hardware.camera2.params.SessionConfiguration"
                                                java.lang.Class r5 = java.lang.Class.forName(r5)     // Catch:{ Exception -> 0x03fb }
                                                java.lang.Class[] r6 = new java.lang.Class[r11]     // Catch:{ Exception -> 0x03fb }
                                                java.lang.Class r7 = java.lang.Integer.TYPE     // Catch:{ Exception -> 0x03fb }
                                                r6[r9] = r7     // Catch:{ Exception -> 0x03fb }
                                                java.lang.Class<java.util.List> r7 = java.util.List.class
                                                r6[r3] = r7     // Catch:{ Exception -> 0x03fb }
                                                java.lang.Class<java.util.concurrent.Executor> r7 = java.util.concurrent.Executor.class
                                                r6[r2] = r7     // Catch:{ Exception -> 0x03fb }
                                                java.lang.Class<android.hardware.camera2.CameraCaptureSession$StateCallback> r2 = android.hardware.camera2.CameraCaptureSession.StateCallback.class
                                                r7 = 3
                                                r6[r7] = r2     // Catch:{ Exception -> 0x03fb }
                                                java.lang.Object r1 = com.meizu.media.camera.util.C2634am.m15989a((java.lang.Class<?>) r5, (java.lang.Class<?>[]) r6, (java.lang.Object[]) r1)     // Catch:{ Exception -> 0x03fb }
                                                java.lang.String r2 = "setSessionParameters"
                                                java.lang.Object[] r5 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x03fb }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r6 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x03fb }
                                                android.hardware.camera2.CaptureRequest$Builder r6 = r6.f8323N     // Catch:{ Exception -> 0x03fb }
                                                android.hardware.camera2.CaptureRequest r6 = r6.build()     // Catch:{ Exception -> 0x03fb }
                                                r5[r9] = r6     // Catch:{ Exception -> 0x03fb }
                                                com.meizu.media.camera.util.C2634am.m15994a((java.lang.Object) r1, (java.lang.String) r2, (java.lang.Object[]) r5)     // Catch:{ Exception -> 0x03fb }
                                                java.lang.String r2 = "startUp"
                                                java.lang.String r5 = "startPreview"
                                                com.meizu.media.camera.util.TimingLoggerUtil.m16032a((java.lang.String) r2, (java.lang.String) r5)     // Catch:{ Exception -> 0x03fb }
                                                monitor-enter(r4)     // Catch:{ Exception -> 0x03fb }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ all -> 0x03f7 }
                                                com.meizu.media.camera.camcontroller.f r2 = r2.f8311B     // Catch:{ all -> 0x03f7 }
                                                java.lang.Object r2 = r2.mo19730a()     // Catch:{ all -> 0x03f7 }
                                                java.lang.String r5 = "createCaptureSession"
                                                java.lang.Object[] r3 = new java.lang.Object[r3]     // Catch:{ all -> 0x03f7 }
                                                r3[r9] = r1     // Catch:{ all -> 0x03f7 }
                                                com.meizu.media.camera.util.C2634am.m15994a((java.lang.Object) r2, (java.lang.String) r5, (java.lang.Object[]) r3)     // Catch:{ all -> 0x03f7 }
                                                monitor-exit(r4)     // Catch:{ all -> 0x03f7 }
                                                goto L_0x046a
                                            L_0x03f7:
                                                r0 = move-exception
                                                r1 = r0
                                                monitor-exit(r4)     // Catch:{ all -> 0x03f7 }
                                                throw r1     // Catch:{ Exception -> 0x03fb }
                                            L_0x03fb:
                                                r0 = move-exception
                                                r1 = r0
                                                r1.printStackTrace()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.ac$a r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r3.<init>()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r4 = "reflect failed, "
                                                r3.append(r4)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r3.append(r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r1 = r3.toString()     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r2, (java.lang.String) r1)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                goto L_0x046a
                                            L_0x0419:
                                                com.meizu.media.camera.util.ac$a r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r2 = "cancel createCameraVideoSession, surfaces initial failed"
                                                com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r1, (java.lang.String) r2)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.b$a r1 = r1.f8281e     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.util.UUID r2 = r0     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.Contants$CameraService$RequestCode r3 = r1     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.util.Contants$CameraService$ResultCode r4 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_CANCEL_START_PREVIEW     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.Object[] r5 = new java.lang.Object[r9]     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                r1.mo19053b(r2, r3, r4, r5)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.c r1 = r1.f8315F     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                java.lang.String r2 = "createCameraVideoSession"
                                                r1.mo19729b(r2)     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                boolean unused = r1.f8374ap = r9     // Catch:{ CameraAccessException -> 0x0448, InterruptedException -> 0x0442 }
                                                return
                                            L_0x0442:
                                                r0 = move-exception
                                                r1 = r0
                                                r1.printStackTrace()
                                                goto L_0x046a
                                            L_0x0448:
                                                r0 = move-exception
                                                r1 = r0
                                                com.meizu.media.camera.util.ac$a r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                java.lang.String r3 = "createCameraVideoSession error"
                                                com.meizu.media.camera.util.LogUtil.m15950b(r2, r3, r1)
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.c r2 = r2.f8315F
                                                java.lang.String r3 = "createCameraVideoSession"
                                                r2.mo19729b(r3)
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                java.lang.RuntimeException r3 = new java.lang.RuntimeException
                                                java.lang.String r4 = "createCameraVideoSession error."
                                                r3.<init>(r4, r1)
                                                r2.m9084a((java.lang.RuntimeException) r3)
                                            L_0x046a:
                                                return
                                            */
                                            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C191233.run():void");
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("createCameraVideoSession");
                                }
                            }

                            /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$i */
                            private class C1936i extends CameraCaptureSession.StateCallback {

                                /* renamed from: a */
                                public static ChangeQuickRedirect f8696a;

                                /* renamed from: c */
                                private UUID f8698c;

                                /* renamed from: d */
                                private Contants.CameraService.RequestCode f8699d;

                                /* renamed from: e */
                                private Object f8700e;

                                /* renamed from: f */
                                private boolean f8701f;

                                public C1936i(UUID uuid, Contants.CameraService.RequestCode requestCode, Object obj, boolean z) {
                                    this.f8698c = uuid;
                                    this.f8699d = requestCode;
                                    this.f8700e = obj;
                                    this.f8701f = z;
                                }

                                public void onConfigured(CameraCaptureSession cameraCaptureSession) {
                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8696a, false, 3221, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                        LogUtil.m15942a(CameraControllerV2.f8305s, "SMSession onConfigured");
                                        synchronized (this.f8700e) {
                                            TimingLoggerUtil.m16032a("startUp", "startPreviewFinish");
                                            if (CameraControllerV2.this.f8311B != null) {
                                                if (cameraCaptureSession != null) {
                                                    CameraCaptureSession unused = CameraControllerV2.this.f8325P = cameraCaptureSession;
                                                    if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                        int unused2 = CameraControllerV2.this.f8344aI = 0;
                                                    } else {
                                                        int unused3 = CameraControllerV2.this.f8344aI = 3;
                                                    }
                                                    CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(CameraControllerV2.this.f8344aI));
                                                    CameraControllerV2.this.m9064a(CameraControllerV2.this.f8323N, CameraControllerV2.this.f8341aF, false);
                                                    CameraControllerV2.this.m9122ar();
                                                    CameraControllerV2.this.m9207n(CameraControllerV2.this.f8323N);
                                                    boolean unused4 = CameraControllerV2.this.f8345aJ = false;
                                                    CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.AI_ASD_ENABLE), 0);
                                                    if (DeviceHelper.f14034dz && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT), Integer.valueOf(CameraControllerV2.this.f8369ak ? 1 : 0));
                                                    }
                                                    if (CameraModeType.m10946a() == CameraModeType.ModeType.VIDEO && this.f8701f && DeviceHelper.f14018dj == DeviceHelper.EIS_TYPE.ARCSOFT) {
                                                        CameraControllerV2.this.f8323N.set(CameraControllerV2.this.m9130b(Contants.CameraV2Key.STOP_EIS), 1);
                                                    }
                                                    try {
                                                        if (CameraControllerV2.this.f8322M) {
                                                            cameraCaptureSession.setRepeatingBurst(((CameraConstrainedHighSpeedCaptureSession) CameraControllerV2.this.f8325P).createHighSpeedRequestList(CameraControllerV2.this.f8323N.build()), CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                        } else if (CameraControllerV2.this.f8321L) {
                                                            cameraCaptureSession.setRepeatingRequest(CameraControllerV2.this.f8323N.build(), CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                        }
                                                    } catch (CameraAccessException e) {
                                                        e.printStackTrace();
                                                    }
                                                    CameraControllerV2.this.f8281e.mo19053b(this.f8698c, this.f8699d, Contants.CameraService.ResultCode.RESULT_START_PREVIEW_DONE, new Object[0]);
                                                    LogUtil.m15942a(CameraControllerV2.f8305s, "createConstrainedHighSpeedCaptureSession onConfigured finished");
                                                    CameraControllerV2.this.f8315F.mo19729b("createCameraVideoSession");
                                                    boolean unused5 = CameraControllerV2.this.f8374ap = false;
                                                    return;
                                                }
                                            }
                                            CameraControllerV2.this.f8281e.mo19053b(this.f8698c, this.f8699d, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                            CameraControllerV2.this.f8315F.mo19729b("createCameraVideoSession");
                                            boolean unused6 = CameraControllerV2.this.f8374ap = false;
                                        }
                                    }
                                }

                                public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {
                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8696a, false, 3222, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                        LogUtil.m15942a(CameraControllerV2.f8305s, "createConstrainedHighSpeedCaptureSession onConfigureFailed");
                                        CameraControllerV2.this.f8315F.mo19729b("createCameraVideoSession");
                                        boolean unused = CameraControllerV2.this.f8374ap = false;
                                        CameraControllerV2.this.m9084a(new RuntimeException("createConstrainedHighSpeedCaptureSession onConfigureFailed"));
                                    }
                                }

                                public void onClosed(@NonNull CameraCaptureSession cameraCaptureSession) {
                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8696a, false, 3223, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                        LogUtil.m15942a(al, "HighSpeedVideoPreviewSession onClosed " + cameraCaptureSession + " mCaptureSession: " + CameraControllerV2.this.f8325P);
                                        if (cameraCaptureSession.equals(CameraControllerV2.this.f8325P)) {
                                            AsyncTaskEx.f13744r.mo22621a("HighSpeedVideoPreviewSession onClosed", new Runnable(cameraCaptureSession) {
                                                private final /* synthetic */ CameraCaptureSession f$1;

                                                {
                                                    this.f$1 = r2;
                                                }

                                                public final void run() {
                                                    CameraControllerV2.C1936i.this.m9399a(this.f$1);
                                                }
                                            });
                                        }
                                    }
                                }

                                /* access modifiers changed from: private */
                                /* renamed from: a */
                                public /* synthetic */ void m9399a(CameraCaptureSession cameraCaptureSession) {
                                    if (!PatchProxy.proxy(new Object[]{cameraCaptureSession}, this, f8696a, false, 3224, new Class[]{CameraCaptureSession.class}, Void.TYPE).isSupported) {
                                        try {
                                            CameraControllerV2.this.f8315F.mo19728a("mCaptureSession onClosed");
                                            if (CameraControllerV2.this.f8325P != null && CameraControllerV2.this.f8325P.equals(cameraCaptureSession)) {
                                                CameraCaptureSession unused = CameraControllerV2.this.f8325P = null;
                                            }
                                        } catch (InterruptedException e) {
                                            e.printStackTrace();
                                        } catch (Throwable th) {
                                            CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                            throw th;
                                        }
                                        CameraControllerV2.this.f8315F.mo19729b("mCaptureSession onClosed");
                                    }
                                }
                            }

                            /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$h */
                            private class C1935h implements Executor {

                                /* renamed from: a */
                                public static ChangeQuickRedirect f8693a;

                                /* renamed from: c */
                                private final Handler f8695c;

                                public C1935h(Handler handler) {
                                    this.f8695c = handler;
                                }

                                public void execute(Runnable runnable) {
                                    if (!PatchProxy.proxy(new Object[]{runnable}, this, f8693a, false, 3220, new Class[]{Runnable.class}, Void.TYPE).isSupported) {
                                        this.f8695c.post(runnable);
                                    }
                                }
                            }

                            /* renamed from: b */
                            public void mo19492b(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 2975, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    if (this.f8311B != null) {
                                        LogUtil.m15942a(f8305s, "mDeviceProxy is not null");
                                        return;
                                    }
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "openCamera " + Thread.currentThread().getName());
                                    UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    final CameraModeType.ModeType modeType = (CameraModeType.ModeType) intent.getSerializableExtra("modeType");
                                    intent.getBooleanExtra("stereoOn", false);
                                    boolean booleanExtra = intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
                                    final int intExtra = intent.getIntExtra("cameraId", 0);
                                    if (this.f8313D == null) {
                                        this.f8313D = (CameraManager) this.f8286l.getSystemService("camera");
                                    }
                                    LogUtil.C2630a aVar2 = f8305s;
                                    LogUtil.m15942a(aVar2, "openCamera cameraId:" + intExtra);
                                    if (this.f8402bs == null) {
                                        this.f8402bs = new C1928c(intent);
                                    } else {
                                        this.f8402bs.mo19637a(intent);
                                    }
                                    if ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && intExtra != 1) {
                                        if (this.f8403bt == null) {
                                            this.f8403bt = new C1928c(intent) {

                                                /* renamed from: a */
                                                public static ChangeQuickRedirect f8567a;

                                                public void onOpened(@NonNull CameraDevice cameraDevice) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraDevice}, this, f8567a, false, 3175, new Class[]{CameraDevice.class}, Void.TYPE).isSupported) {
                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                        LogUtil.m15942a(al, "openCamera cameraId  onOpened2:" + cameraDevice.getId());
                                                        CameraProxyV2 unused = CameraControllerV2.this.f8312C = new CameraProxyV2(Integer.parseInt(cameraDevice.getId()), cameraDevice);
                                                        CameraControllerV2.this.f8315F.mo19729b("openCamera2");
                                                    }
                                                }

                                                public void onDisconnected(@NonNull CameraDevice cameraDevice) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraDevice}, this, f8567a, false, 3176, new Class[]{CameraDevice.class}, Void.TYPE).isSupported) {
                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                        LogUtil.m15942a(al, "openCamera cameraId  onDisconnected2:" + cameraDevice.getId());
                                                        CameraControllerV2.this.f8315F.mo19729b("openCamera2");
                                                    }
                                                }

                                                public void onError(@NonNull CameraDevice cameraDevice, int i) {
                                                    if (!PatchProxy.proxy(new Object[]{cameraDevice, new Integer(i)}, this, f8567a, false, 3177, new Class[]{CameraDevice.class, Integer.TYPE}, Void.TYPE).isSupported) {
                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                        LogUtil.m15942a(al, "openCamera cameraId  onError2:" + cameraDevice.getId());
                                                        CameraControllerV2.this.f8315F.mo19729b("openCamera2");
                                                    }
                                                }
                                            };
                                        } else {
                                            this.f8403bt.mo19637a(intent);
                                        }
                                    }
                                    AsyncTaskEx.f13744r.mo22621a("openCamera", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8569a;

                                        /* JADX WARNING: Code restructure failed: missing block: B:34:0x00ce, code lost:
                                            r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.m9116al();
                                            com.meizu.media.camera.util.LogUtil.m15952c(r0, "Do not try to open the camera again, error:" + com.meizu.media.camera.camcontroller.CameraControllerV2.m9020X(r12.f8572d).mo19636a());
                                         */
                                        /* Code decompiled incorrectly, please refer to instructions dump. */
                                        public void run() {
                                            /*
                                                r12 = this;
                                                r0 = 0
                                                java.lang.Object[] r1 = new java.lang.Object[r0]
                                                com.meizu.savior.ChangeQuickRedirect r3 = f8569a
                                                java.lang.Class[] r6 = new java.lang.Class[r0]
                                                java.lang.Class r7 = java.lang.Void.TYPE
                                                r4 = 0
                                                r5 = 3178(0xc6a, float:4.453E-42)
                                                r2 = r12
                                                com.meizu.savior.PatchProxyResult r1 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                boolean r1 = r1.isSupported
                                                if (r1 == 0) goto L_0x0016
                                                return
                                            L_0x0016:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                android.content.Context r1 = r1.f8286l
                                                java.lang.String r2 = "android.permission.CAMERA"
                                                int r1 = androidx.core.content.ContextCompat.checkSelfPermission(r1, r2)
                                                if (r1 == 0) goto L_0x002c
                                                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                java.lang.String r1 = "no camera permission!"
                                                com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                                return
                                            L_0x002c:
                                                r1 = 10
                                                long r2 = java.lang.System.currentTimeMillis()
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$c r4 = r4.f8402bs
                                                r4.mo19638b()
                                                java.lang.String r4 = "startUp"
                                                java.lang.String r5 = "openCamera"
                                                com.meizu.media.camera.util.TimingLoggerUtil.m16032a((java.lang.String) r4, (java.lang.String) r5)
                                            L_0x0042:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r4 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.f r4 = r4.f8311B
                                                if (r4 != 0) goto L_0x0198
                                                int r4 = r0 + 1
                                                if (r0 >= r1) goto L_0x0198
                                                long r5 = java.lang.System.currentTimeMillis()
                                                long r5 = r5 - r2
                                                r7 = 5000(0x1388, double:2.4703E-320)
                                                int r0 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
                                                if (r0 >= 0) goto L_0x0198
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ InterruptedException -> 0x0184 }
                                                com.meizu.media.camera.camcontroller.c r0 = r0.f8315F     // Catch:{ InterruptedException -> 0x0184 }
                                                java.lang.String r5 = "openCamera"
                                                r0.mo19728a(r5)     // Catch:{ InterruptedException -> 0x0184 }
                                                r5 = 200(0xc8, double:9.9E-322)
                                                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ Exception -> 0x0151 }
                                                java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0151 }
                                                r7.<init>()     // Catch:{ Exception -> 0x0151 }
                                                java.lang.String r8 = "openCameraMain: "
                                                r7.append(r8)     // Catch:{ Exception -> 0x0151 }
                                                int r8 = r5     // Catch:{ Exception -> 0x0151 }
                                                r7.append(r8)     // Catch:{ Exception -> 0x0151 }
                                                java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.util.LogUtil.m15952c(r0, r7)     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x0151 }
                                                android.hardware.camera2.CameraManager r0 = r0.f8313D     // Catch:{ Exception -> 0x0151 }
                                                int r7 = r5     // Catch:{ Exception -> 0x0151 }
                                                java.lang.String r7 = java.lang.String.valueOf(r7)     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r8 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$c r8 = r8.f8402bs     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.mode.CameraModeType$ModeType r9 = r3     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.mode.CameraModeType$ModeType r10 = com.meizu.media.camera.mode.CameraModeType.ModeType.TOF     // Catch:{ Exception -> 0x0151 }
                                                r11 = 1
                                                if (r9 == r10) goto L_0x009f
                                                com.meizu.media.camera.mode.CameraModeType$ModeType r9 = r3     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.mode.CameraModeType$ModeType r10 = com.meizu.media.camera.mode.CameraModeType.ModeType.NightVision     // Catch:{ Exception -> 0x0151 }
                                                if (r9 != r10) goto L_0x00a8
                                            L_0x009f:
                                                int r9 = r5     // Catch:{ Exception -> 0x0151 }
                                                if (r9 == r11) goto L_0x00a8
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r9 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraController<com.meizu.media.camera.camcontroller.f>$e r9 = r9.f8406q     // Catch:{ Exception -> 0x0151 }
                                                goto L_0x00ac
                                            L_0x00a8:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r9 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraController$e r9 = r9.f8279c     // Catch:{ Exception -> 0x0151 }
                                            L_0x00ac:
                                                r0.openCamera(r7, r8, r9)     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraController$e r0 = r0.f8279c     // Catch:{ Exception -> 0x0151 }
                                                r0.mo19553a()     // Catch:{ Exception -> 0x0151 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$c r0 = r0.f8402bs
                                                int r0 = r0.mo19636a()
                                                r7 = -1
                                                if (r0 == r7) goto L_0x00f2
                                                if (r0 == r11) goto L_0x00f2
                                                r7 = 3
                                                if (r0 != r7) goto L_0x00ce
                                                int r0 = android.os.Build.VERSION.SDK_INT
                                                r7 = 28
                                                if (r0 >= r7) goto L_0x00f2
                                            L_0x00ce:
                                                com.meizu.media.camera.util.ac$a r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                                r1.<init>()
                                                java.lang.String r2 = "Do not try to open the camera again, error:"
                                                r1.append(r2)
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$c r2 = r2.f8402bs
                                                int r2 = r2.mo19636a()
                                                r1.append(r2)
                                                java.lang.String r1 = r1.toString()
                                                com.meizu.media.camera.util.LogUtil.m15952c(r0, r1)
                                                goto L_0x0198
                                            L_0x00f2:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.f r0 = r0.f8311B
                                                if (r0 != 0) goto L_0x0181
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ InterruptedException -> 0x0115 }
                                                com.meizu.media.camera.camcontroller.c r0 = r0.f8315F     // Catch:{ InterruptedException -> 0x0115 }
                                                java.lang.String r7 = "checkCameraStatus"
                                                r0.mo19728a(r7)     // Catch:{ InterruptedException -> 0x0115 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.f r0 = r0.f8311B
                                                if (r0 != 0) goto L_0x0129
                                                java.lang.Thread.sleep(r5)     // Catch:{ InterruptedException -> 0x0111 }
                                                goto L_0x0129
                                            L_0x0111:
                                                r0 = move-exception
                                                goto L_0x0126
                                            L_0x0113:
                                                r0 = move-exception
                                                goto L_0x0135
                                            L_0x0115:
                                                r0 = move-exception
                                                r0.printStackTrace()     // Catch:{ all -> 0x0113 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.f r0 = r0.f8311B
                                                if (r0 != 0) goto L_0x0129
                                                java.lang.Thread.sleep(r5)     // Catch:{ InterruptedException -> 0x0125 }
                                                goto L_0x0129
                                            L_0x0125:
                                                r0 = move-exception
                                            L_0x0126:
                                                r0.printStackTrace()
                                            L_0x0129:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.c r0 = r0.f8315F
                                                java.lang.String r5 = "checkCameraStatus"
                                                r0.mo19729b(r5)
                                                goto L_0x0181
                                            L_0x0135:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B
                                                if (r1 != 0) goto L_0x0145
                                                java.lang.Thread.sleep(r5)     // Catch:{ InterruptedException -> 0x0141 }
                                                goto L_0x0145
                                            L_0x0141:
                                                r1 = move-exception
                                                r1.printStackTrace()
                                            L_0x0145:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.c r1 = r1.f8315F
                                                java.lang.String r2 = "checkCameraStatus"
                                                r1.mo19729b(r2)
                                                throw r0
                                            L_0x0151:
                                                r0 = move-exception
                                                com.meizu.media.camera.util.ac$a r7 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                java.lang.StringBuilder r8 = new java.lang.StringBuilder
                                                r8.<init>()
                                                java.lang.String r9 = "open fail :"
                                                r8.append(r9)
                                                java.lang.String r0 = r0.getMessage()
                                                r8.append(r0)
                                                java.lang.String r0 = r8.toString()
                                                com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r7, (java.lang.String) r0)
                                                java.lang.Thread.sleep(r5)     // Catch:{ InterruptedException -> 0x0172 }
                                                goto L_0x0176
                                            L_0x0172:
                                                r0 = move-exception
                                                r0.printStackTrace()
                                            L_0x0176:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.c r0 = r0.f8315F
                                                java.lang.String r5 = "openCamera"
                                                r0.mo19729b(r5)
                                            L_0x0181:
                                                r0 = r4
                                                goto L_0x0042
                                            L_0x0184:
                                                r0 = move-exception
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.c r1 = r1.f8315F
                                                java.lang.String r2 = "openCamera"
                                                r1.mo19729b(r2)
                                                java.lang.IllegalStateException r1 = new java.lang.IllegalStateException
                                                java.lang.String r2 = "Interrupted while trying to lock camera opening."
                                                r1.<init>(r2, r0)
                                                throw r1
                                            L_0x0198:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this
                                                com.meizu.media.camera.camcontroller.CameraControllerV2$c r0 = r0.f8402bs
                                                r0.mo19638b()
                                                return
                                            */
                                            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C191535.run():void");
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("openCamera");
                                    if (this.f8311B == null) {
                                        boolean a = this.f8281e.mo19051a(booleanExtra);
                                        LogUtil.C2630a aVar3 = f8305s;
                                        LogUtil.m15949b(aVar3, "open camera fail isNextCloseCamera:" + a);
                                        this.f8315F.mo19729b("openCamera");
                                        this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_OPEN_CAMERA_FAILURE, Integer.valueOf(intExtra), Boolean.valueOf(a));
                                        return;
                                    }
                                    if ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && intExtra != 1) {
                                        AsyncTaskEx.f13744r.mo22621a("openCamera2", new Runnable() {

                                            /* renamed from: a */
                                            public static ChangeQuickRedirect f8573a;

                                            public void run() {
                                                int i;
                                                int i2 = 0;
                                                if (!PatchProxy.proxy(new Object[0], this, f8573a, false, 3179, new Class[0], Void.TYPE).isSupported) {
                                                    if (ContextCompat.checkSelfPermission(CameraControllerV2.this.f8286l, "android.permission.CAMERA") != 0) {
                                                        LogUtil.m15949b(CameraControllerV2.f8305s, "no camera permission!");
                                                        return;
                                                    }
                                                    try {
                                                        CameraControllerV2.this.f8315F.mo19728a("openCamera2");
                                                        long currentTimeMillis = System.currentTimeMillis();
                                                        CameraControllerV2.this.f8402bs.mo19638b();
                                                        TimingLoggerUtil.m16032a("startUp", "openCamera");
                                                        while (true) {
                                                            if (CameraControllerV2.this.f8312C != null) {
                                                                break;
                                                            }
                                                            i = i2 + 1;
                                                            if (i2 >= 10 || System.currentTimeMillis() - currentTimeMillis >= 5000) {
                                                                break;
                                                            }
                                                            try {
                                                                LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                                LogUtil.m15952c(al, "openCameraTof: " + DeviceHelper.f13914bN);
                                                                CameraControllerV2.this.f8313D.openCamera(String.valueOf(DeviceHelper.f13914bN), CameraControllerV2.this.f8403bt, CameraControllerV2.this.f8407r);
                                                                CameraControllerV2.this.f8279c.mo19553a();
                                                                CameraControllerV2.this.f8279c.mo19553a();
                                                                int a = CameraControllerV2.this.f8402bs.mo19636a();
                                                                if (a == -1 || a == 1 || (a == 3 && Build.VERSION.SDK_INT >= 28)) {
                                                                    if (CameraControllerV2.this.f8312C == null) {
                                                                        try {
                                                                            CameraControllerV2.this.f8315F.mo19728a("checkCameraStatus");
                                                                            if (CameraControllerV2.this.f8312C == null) {
                                                                                try {
                                                                                    Thread.sleep(200);
                                                                                } catch (InterruptedException e) {
                                                                                    e = e;
                                                                                }
                                                                            }
                                                                        } catch (InterruptedException e2) {
                                                                            e2.printStackTrace();
                                                                            if (CameraControllerV2.this.f8312C == null) {
                                                                                try {
                                                                                    Thread.sleep(200);
                                                                                } catch (InterruptedException e3) {
                                                                                    e = e3;
                                                                                }
                                                                            }
                                                                        } catch (Throwable th) {
                                                                            if (CameraControllerV2.this.f8312C == null) {
                                                                                try {
                                                                                    Thread.sleep(200);
                                                                                } catch (InterruptedException e4) {
                                                                                    e4.printStackTrace();
                                                                                }
                                                                            }
                                                                            CameraControllerV2.this.f8315F.mo19729b("checkCameraStatus");
                                                                            throw th;
                                                                        }
                                                                        CameraControllerV2.this.f8315F.mo19729b("checkCameraStatus");
                                                                    }
                                                                    i2 = i;
                                                                }
                                                            } catch (Exception e5) {
                                                                LogUtil.C2630a al2 = CameraControllerV2.f8305s;
                                                                LogUtil.m15949b(al2, "open fail :" + e5.getMessage());
                                                                try {
                                                                    Thread.sleep(200);
                                                                } catch (InterruptedException unused) {
                                                                    e5.printStackTrace();
                                                                }
                                                            }
                                                        }
                                                        LogUtil.C2630a al3 = CameraControllerV2.f8305s;
                                                        LogUtil.m15952c(al3, "Do not try to open the camera again, error:" + CameraControllerV2.this.f8403bt.mo19636a());
                                                        CameraControllerV2.this.f8403bt.mo19638b();
                                                        return;
                                                    } catch (InterruptedException e6) {
                                                        CameraControllerV2.this.f8315F.mo19729b("openCamera2");
                                                        throw new IllegalStateException("Interrupted while trying to lock camera opening.", e6);
                                                    }
                                                } else {
                                                    return;
                                                }
                                                e.printStackTrace();
                                                CameraControllerV2.this.f8315F.mo19729b("checkCameraStatus");
                                                i2 = i;
                                            }
                                        });
                                        AsyncTaskEx.f13744r.mo22622a("openCamera2");
                                    }
                                    if (this.f8312C == null && ((modeType == CameraModeType.ModeType.TOF || modeType == CameraModeType.ModeType.NightVision) && intExtra != 1)) {
                                        boolean a2 = this.f8281e.mo19051a(booleanExtra);
                                        LogUtil.C2630a aVar4 = f8305s;
                                        LogUtil.m15949b(aVar4, "open camera2 fail isNextCloseCamera:" + a2);
                                        this.f8315F.mo19729b("openCamera2");
                                        this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_OPEN_CAMERA_FAILURE, Integer.valueOf(intExtra), Boolean.valueOf(a2));
                                    } else if (uuid != null) {
                                        mo19513f(intent);
                                    }
                                }
                            }

                            /* renamed from: c */
                            public void mo19502c(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 2976, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "resumeCamera " + Thread.currentThread().getName());
                                    UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    boolean booleanExtra = intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
                                    LogUtil.C2630a aVar2 = f8305s;
                                    LogUtil.m15942a(aVar2, "resumeCamera isWatch:" + booleanExtra);
                                    if (this.f8281e.mo19051a(booleanExtra)) {
                                        LogUtil.m15942a(f8305s, "Cancel resume camera case Next action is close camera");
                                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                    } else if (this.f8281e.mo19054b()) {
                                        LogUtil.m15942a(f8305s, "Cancel resume camera case Next action is switchCamera");
                                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CANCEL, new Object[0]);
                                    } else {
                                        if (this.f8281e.mo19055b(booleanExtra)) {
                                            CameraOptTask.m8370a(booleanExtra, false);
                                        }
                                        if (this.f8311B == null) {
                                            mo19492b(intent);
                                            return;
                                        }
                                        this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CAMERA_OPENED, new Object[0]);
                                        mo19513f(intent);
                                    }
                                }
                            }

                            /* renamed from: d */
                            public void mo19507d(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 2977, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    mo19510e(intent);
                                    mo19513f(intent);
                                }
                            }

                            /* renamed from: e */
                            public void mo19510e(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 2978, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    AsyncTaskEx.f13744r.mo22621a("stopPreview", new Runnable(intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false), requestCode, (UUID) intent.getSerializableExtra("uuid")) {
                                        private final /* synthetic */ boolean f$1;
                                        private final /* synthetic */ Contants.CameraService.RequestCode f$2;
                                        private final /* synthetic */ UUID f$3;

                                        {
                                            this.f$1 = r2;
                                            this.f$2 = r3;
                                            this.f$3 = r4;
                                        }

                                        public final void run() {
                                            CameraControllerV2.this.m9091a(this.f$1, this.f$2, this.f$3);
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("stopPreview");
                                }
                            }

                            /* access modifiers changed from: private */
                            /* JADX WARNING: Code restructure failed: missing block: B:35:0x00c1, code lost:
                                if (r11.equals(com.meizu.media.camera.util.Contants.CameraService.RequestCode.REQUEST_CODE_RESTART_PREVIEW_FOR_MODE_CHANGE) != false) goto L_0x0105;
                             */
                            /* JADX WARNING: Code restructure failed: missing block: B:50:0x0103, code lost:
                                if (r11.equals(com.meizu.media.camera.util.Contants.CameraService.RequestCode.REQUEST_CODE_RESTART_PREVIEW_FOR_MODE_CHANGE) != false) goto L_0x0105;
                             */
                            /* JADX WARNING: Code restructure failed: missing block: B:51:0x0105, code lost:
                                com.meizu.media.camera.CameraOptTask.m8370a(r10, false);
                             */
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public /* synthetic */ void m9091a(boolean r10, com.meizu.media.camera.util.Contants.CameraService.RequestCode r11, java.util.UUID r12) {
                                /*
                                    r9 = this;
                                    r0 = 3
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r10)
                                    r8 = 0
                                    r1[r8] = r2
                                    r2 = 1
                                    r1[r2] = r11
                                    r3 = 2
                                    r1[r3] = r12
                                    com.meizu.savior.ChangeQuickRedirect r4 = f8303o
                                    java.lang.Class[] r6 = new java.lang.Class[r0]
                                    java.lang.Class r0 = java.lang.Boolean.TYPE
                                    r6[r8] = r0
                                    java.lang.Class<com.meizu.media.camera.util.Contants$CameraService$RequestCode> r0 = com.meizu.media.camera.util.Contants.CameraService.RequestCode.class
                                    r6[r2] = r0
                                    java.lang.Class<java.util.UUID> r0 = java.util.UUID.class
                                    r6[r3] = r0
                                    java.lang.Class r7 = java.lang.Void.TYPE
                                    r0 = 0
                                    r5 = 3120(0xc30, float:4.372E-42)
                                    r2 = r9
                                    r3 = r4
                                    r4 = r0
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                    boolean r0 = r0.isSupported
                                    if (r0 == 0) goto L_0x0032
                                    return
                                L_0x0032:
                                    com.meizu.media.camera.camcontroller.f r0 = r9.f8311B     // Catch:{ InterruptedException -> 0x00ea }
                                    if (r0 == 0) goto L_0x00c4
                                    android.hardware.camera2.CameraCaptureSession r0 = r9.f8325P     // Catch:{ InterruptedException -> 0x00ea }
                                    if (r0 != 0) goto L_0x003c
                                    goto L_0x00c4
                                L_0x003c:
                                    com.meizu.media.camera.camcontroller.c r0 = r9.f8315F     // Catch:{ InterruptedException -> 0x00ea }
                                    java.lang.String r1 = "stopPreview"
                                    r0.mo19728a(r1)     // Catch:{ InterruptedException -> 0x00ea }
                                    com.meizu.media.camera.camcontroller.f r0 = r9.f8311B     // Catch:{ InterruptedException -> 0x00ea }
                                    if (r0 == 0) goto L_0x00ac
                                    android.hardware.camera2.CameraCaptureSession r0 = r9.f8325P     // Catch:{ InterruptedException -> 0x00ea }
                                    if (r0 == 0) goto L_0x00ac
                                    r9.f8372an = r8     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8345aJ = r8     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8346aK = r8     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8322M = r8     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8321L = r8     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8333X = r8     // Catch:{ CameraAccessException -> 0x00a8 }
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r0 = r9.f8401br     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r1 = -1
                                    int unused = r0.f8675g = r1     // Catch:{ CameraAccessException -> 0x00a8 }
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r0 = r9.f8401br     // Catch:{ CameraAccessException -> 0x00a8 }
                                    int unused = r0.f8677i = r1     // Catch:{ CameraAccessException -> 0x00a8 }
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r0 = r9.f8401br     // Catch:{ CameraAccessException -> 0x00a8 }
                                    int unused = r0.f8678j = r1     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r0 = 0
                                    r9.f8353aR = r0     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r2 = 100
                                    r9.f8330U = r2     // Catch:{ CameraAccessException -> 0x00a8 }
                                    android.hardware.camera2.CameraCaptureSession r2 = r9.f8325P     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r2.stopRepeating()     // Catch:{ CameraAccessException -> 0x00a8 }
                                    android.hardware.camera2.CameraCaptureSession r2 = r9.f8325P     // Catch:{ CameraAccessException -> 0x00a8 }
                                    if (r2 == 0) goto L_0x0086
                                    boolean r2 = com.meizu.media.camera.util.DeviceUtil.m16206f()     // Catch:{ CameraAccessException -> 0x00a8 }
                                    if (r2 != 0) goto L_0x0082
                                    android.hardware.camera2.CameraCaptureSession r2 = r9.f8325P     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r2.close()     // Catch:{ CameraAccessException -> 0x00a8 }
                                L_0x0082:
                                    r9.f8325P = r0     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8394bk = r1     // Catch:{ CameraAccessException -> 0x00a8 }
                                L_0x0086:
                                    android.hardware.camera2.CameraCaptureSession r1 = r9.f8328S     // Catch:{ CameraAccessException -> 0x00a8 }
                                    if (r1 == 0) goto L_0x009c
                                    android.hardware.camera2.CameraCaptureSession r1 = r9.f8328S     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r1.stopRepeating()     // Catch:{ CameraAccessException -> 0x00a8 }
                                    boolean r1 = com.meizu.media.camera.util.DeviceUtil.m16206f()     // Catch:{ CameraAccessException -> 0x00a8 }
                                    if (r1 != 0) goto L_0x009a
                                    android.hardware.camera2.CameraCaptureSession r1 = r9.f8328S     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r1.close()     // Catch:{ CameraAccessException -> 0x00a8 }
                                L_0x009a:
                                    r9.f8328S = r0     // Catch:{ CameraAccessException -> 0x00a8 }
                                L_0x009c:
                                    android.view.Surface r1 = r9.f8320K     // Catch:{ CameraAccessException -> 0x00a8 }
                                    if (r1 == 0) goto L_0x00ac
                                    android.view.Surface r1 = r9.f8320K     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r1.release()     // Catch:{ CameraAccessException -> 0x00a8 }
                                    r9.f8320K = r0     // Catch:{ CameraAccessException -> 0x00a8 }
                                    goto L_0x00ac
                                L_0x00a8:
                                    r0 = move-exception
                                    r0.printStackTrace()     // Catch:{ InterruptedException -> 0x00ea }
                                L_0x00ac:
                                    com.meizu.media.camera.camcontroller.c r0 = r9.f8315F
                                    java.lang.String r1 = "stopPreview"
                                    r0.mo19729b(r1)
                                    com.meizu.media.camera.b$a r0 = r9.f8281e
                                    boolean r0 = r0.mo19055b((boolean) r10)
                                    if (r0 == 0) goto L_0x0108
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r0 = com.meizu.media.camera.util.Contants.CameraService.RequestCode.REQUEST_CODE_RESTART_PREVIEW_FOR_MODE_CHANGE
                                    boolean r0 = r11.equals(r0)
                                    if (r0 == 0) goto L_0x0108
                                    goto L_0x0105
                                L_0x00c4:
                                    com.meizu.media.camera.camcontroller.c r0 = r9.f8315F
                                    java.lang.String r1 = "stopPreview"
                                    r0.mo19729b(r1)
                                    com.meizu.media.camera.b$a r0 = r9.f8281e
                                    boolean r0 = r0.mo19055b((boolean) r10)
                                    if (r0 == 0) goto L_0x00de
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r0 = com.meizu.media.camera.util.Contants.CameraService.RequestCode.REQUEST_CODE_RESTART_PREVIEW_FOR_MODE_CHANGE
                                    boolean r0 = r11.equals(r0)
                                    if (r0 == 0) goto L_0x00de
                                    com.meizu.media.camera.CameraOptTask.m8370a((boolean) r10, (boolean) r8)
                                L_0x00de:
                                    com.meizu.media.camera.b$a r10 = r9.f8281e
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r0 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_STOP_PREVIEW_DONE
                                    java.lang.Object[] r1 = new java.lang.Object[r8]
                                    r10.mo19053b(r12, r11, r0, r1)
                                    return
                                L_0x00e8:
                                    r0 = move-exception
                                    goto L_0x0112
                                L_0x00ea:
                                    r0 = move-exception
                                    r0.printStackTrace()     // Catch:{ all -> 0x00e8 }
                                    com.meizu.media.camera.camcontroller.c r0 = r9.f8315F
                                    java.lang.String r1 = "stopPreview"
                                    r0.mo19729b(r1)
                                    com.meizu.media.camera.b$a r0 = r9.f8281e
                                    boolean r0 = r0.mo19055b((boolean) r10)
                                    if (r0 == 0) goto L_0x0108
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r0 = com.meizu.media.camera.util.Contants.CameraService.RequestCode.REQUEST_CODE_RESTART_PREVIEW_FOR_MODE_CHANGE
                                    boolean r0 = r11.equals(r0)
                                    if (r0 == 0) goto L_0x0108
                                L_0x0105:
                                    com.meizu.media.camera.CameraOptTask.m8370a((boolean) r10, (boolean) r8)
                                L_0x0108:
                                    com.meizu.media.camera.b$a r10 = r9.f8281e
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r0 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_STOP_PREVIEW_DONE
                                    java.lang.Object[] r1 = new java.lang.Object[r8]
                                    r10.mo19053b(r12, r11, r0, r1)
                                    return
                                L_0x0112:
                                    com.meizu.media.camera.camcontroller.c r1 = r9.f8315F
                                    java.lang.String r2 = "stopPreview"
                                    r1.mo19729b(r2)
                                    com.meizu.media.camera.b$a r1 = r9.f8281e
                                    boolean r1 = r1.mo19055b((boolean) r10)
                                    if (r1 == 0) goto L_0x012c
                                    com.meizu.media.camera.util.Contants$CameraService$RequestCode r1 = com.meizu.media.camera.util.Contants.CameraService.RequestCode.REQUEST_CODE_RESTART_PREVIEW_FOR_MODE_CHANGE
                                    boolean r1 = r11.equals(r1)
                                    if (r1 == 0) goto L_0x012c
                                    com.meizu.media.camera.CameraOptTask.m8370a((boolean) r10, (boolean) r8)
                                L_0x012c:
                                    com.meizu.media.camera.b$a r10 = r9.f8281e
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r1 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.RESULT_STOP_PREVIEW_DONE
                                    java.lang.Object[] r2 = new java.lang.Object[r8]
                                    r10.mo19053b(r12, r11, r1, r2)
                                    throw r0
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9091a(boolean, com.meizu.media.camera.util.Contants$CameraService$RequestCode, java.util.UUID):void");
                            }

                            /* renamed from: g */
                            public void mo19515g(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 2979, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    final UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                    final Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    intent.getBooleanExtra("shouldStopFaceDetection", false);
                                    final boolean booleanExtra = intent.getBooleanExtra("EXTRA_IS_WATCH_CAMERA_INTENT", false);
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "closeCamera isWatch:" + booleanExtra);
                                    AsyncTaskEx.f13744r.mo22621a("closeCamera", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8450a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8450a, false, 3122, new Class[0], Void.TYPE).isSupported) {
                                                CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CAMERA_CLOSE_START, new Object[0]);
                                                try {
                                                    if (CameraControllerV2.this.f8336aA) {
                                                        boolean unused = CameraControllerV2.this.f8336aA = false;
                                                        CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                        CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_FACE_DETECTION_STOPED, new Object[0]);
                                                    }
                                                    CameraController.HdrMode unused2 = CameraControllerV2.this.f8342aG = CameraController.HdrMode.OFF;
                                                    boolean unused3 = CameraControllerV2.this.f8345aJ = false;
                                                    boolean unused4 = CameraControllerV2.this.f8346aK = false;
                                                    boolean unused5 = CameraControllerV2.this.f8322M = false;
                                                    boolean unused6 = CameraControllerV2.this.f8321L = false;
                                                    int unused7 = CameraControllerV2.this.f8333X = 0;
                                                    int unused8 = CameraControllerV2.this.f8401br.f8675g = -1;
                                                    int unused9 = CameraControllerV2.this.f8401br.f8676h = -1;
                                                    int unused10 = CameraControllerV2.this.f8401br.f8677i = -1;
                                                    int unused11 = CameraControllerV2.this.f8401br.f8678j = -1;
                                                    boolean unused12 = CameraControllerV2.this.f8372an = false;
                                                    CameraController.FlashMode unused13 = CameraControllerV2.this.f8341aF = CameraController.FlashMode.FLASH_MODE_OFF;
                                                    int unused14 = CameraControllerV2.this.f8330U = 100;
                                                    int unused15 = CameraControllerV2.this.f8376ar = 0;
                                                    int unused16 = CameraControllerV2.this.f8377as = 0;
                                                    float unused17 = CameraControllerV2.this.f8378at = 0.0f;
                                                    CameraController.C1877d unused18 = CameraControllerV2.this.f8337aB = null;
                                                    CameraController.C1876c unused19 = CameraControllerV2.this.f8338aC = null;
                                                    MeizuCamera.MeizuSceneModeDetectionCallback unused20 = CameraControllerV2.this.f8339aD = null;
                                                    MeizuCamera.MeizuMetaDataCallback unused21 = CameraControllerV2.this.f8340aE = null;
                                                    ComboPreferences unused22 = CameraControllerV2.this.f8353aR = null;
                                                    try {
                                                        CameraControllerV2.this.f8315F.mo19728a("closeCamera");
                                                    } catch (RuntimeException e) {
                                                        DeviceUtil.m16195a(e);
                                                    }
                                                    if (CameraControllerV2.this.f8328S != null) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CaptureSession2 close start");
                                                        CameraControllerV2.this.f8281e.mo19040a(uuid).mo18243k();
                                                        CameraControllerV2.this.f8328S.close();
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CaptureSession2 close end");
                                                        CameraCaptureSession unused23 = CameraControllerV2.this.f8328S = null;
                                                    }
                                                    if (CameraControllerV2.this.f8312C != null) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CameraDevice2 close start");
                                                        ((CameraDevice) CameraControllerV2.this.f8312C.mo19730a()).close();
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CameraDevice2 close end");
                                                        CameraProxyV2 unused24 = CameraControllerV2.this.f8312C = null;
                                                    }
                                                    if (CameraControllerV2.this.f8325P != null) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CaptureSession close start");
                                                        CameraControllerV2.this.f8325P.close();
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CaptureSession close end");
                                                        CameraCaptureSession unused25 = CameraControllerV2.this.f8325P = null;
                                                    }
                                                    if (CameraControllerV2.this.f8311B != null) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CameraDevice close start");
                                                        ((CameraDevice) CameraControllerV2.this.f8311B.mo19730a()).close();
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, CameraDevice close end");
                                                        CameraProxyV2 unused26 = CameraControllerV2.this.f8311B = null;
                                                    }
                                                    ImageReaderHolder.f14378b.mo22759a().mo22758a();
                                                    if (CameraControllerV2.this.f8316G != null) {
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, ImageReader close start");
                                                        CameraControllerV2.this.f8316G.close();
                                                        LogUtil.m15942a(CameraControllerV2.f8305s, "closeCamera, ImageReader close end");
                                                        ImageReader unused27 = CameraControllerV2.this.f8316G = null;
                                                    }
                                                    if (CameraControllerV2.this.f8317H != null) {
                                                        CameraControllerV2.this.f8317H.close();
                                                        ImageReader unused28 = CameraControllerV2.this.f8317H = null;
                                                    }
                                                    if (CameraControllerV2.this.f8318I != null) {
                                                        CameraControllerV2.this.f8318I.close();
                                                        ImageReader unused29 = CameraControllerV2.this.f8318I = null;
                                                    }
                                                    if (CameraControllerV2.this.f8320K != null) {
                                                        CameraControllerV2.this.f8320K.release();
                                                        Surface unused30 = CameraControllerV2.this.f8320K = null;
                                                    }
                                                    if (CameraControllerV2.this.f8314E != null) {
                                                        CameraCharacteristics unused31 = CameraControllerV2.this.f8314E = null;
                                                    }
                                                    if (CameraControllerV2.f8300aY != null) {
                                                        byte[] unused32 = CameraControllerV2.f8300aY = null;
                                                    }
                                                    int unused33 = CameraControllerV2.this.f8394bk = -1;
                                                    LogUtil.m15942a(CameraControllerV2.f8305s, "close camera success");
                                                    CameraOptTask.m8370a(booleanExtra, false);
                                                    CameraControllerV2.this.f8315F.mo19729b("closeCamera");
                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CAMERA_CLOSED, new Object[0]);
                                                } catch (InterruptedException e2) {
                                                    throw new IllegalStateException("Interrupted while trying to lock camera closing.", e2);
                                                } catch (Throwable th) {
                                                    CameraOptTask.m8370a(booleanExtra, false);
                                                    CameraControllerV2.this.f8315F.mo19729b("closeCamera");
                                                    CameraControllerV2.this.f8281e.mo19053b(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_CAMERA_CLOSED, new Object[0]);
                                                    throw th;
                                                }
                                            }
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("closeCamera");
                                }
                            }

                            /* renamed from: a */
                            public void mo19458a(final Surface surface, final boolean z) {
                                if (!PatchProxy.proxy(new Object[]{surface, new Byte(z ? (byte) 1 : 0)}, this, f8303o, false, 2980, new Class[]{Surface.class, Boolean.TYPE}, Void.TYPE).isSupported) {
                                    LogUtil.m15942a(f8305s, "prepareVideoCamera");
                                    AsyncTaskEx.f13744r.mo22621a("prepareVideoCamera", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8530a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8530a, false, 3123, new Class[0], Void.TYPE).isSupported && CameraControllerV2.this.f8325P != null) {
                                                try {
                                                    CaptureRequest.Builder a = CameraControllerV2.this.f8323N;
                                                    if (z) {
                                                        a.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE, new Range(Integer.valueOf(CameraControllerV2.this.f8333X), Integer.valueOf(CameraControllerV2.this.f8333X)));
                                                    }
                                                    a.addTarget(CameraControllerV2.this.f8319J);
                                                    if (surface != null) {
                                                        a.addTarget(surface);
                                                    }
                                                    CaptureRequest.Builder unused = CameraControllerV2.this.f8323N = a;
                                                    CameraControllerV2.this.m9125au();
                                                } catch (CameraAccessException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                }
                            }

                            /* renamed from: E */
                            public void mo19441E() {
                                if (!PatchProxy.proxy(new Object[0], this, f8303o, false, 2981, new Class[0], Void.TYPE).isSupported) {
                                    LogUtil.m15942a(f8305s, "release video camera");
                                    AsyncTaskEx.f13744r.mo22621a("releaseVideoCamera", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8575a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8575a, false, 3124, new Class[0], Void.TYPE).isSupported && CameraControllerV2.this.f8325P != null) {
                                                try {
                                                    CameraControllerV2.this.f8325P.stopRepeating();
                                                } catch (CameraAccessException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                }
                            }

                            /* renamed from: F */
                            public boolean mo19442F() {
                                return (DeviceHelper.f14003cx == -1 && DeviceHelper.f14005cz == -1) ? false : true;
                            }

                            /* renamed from: G */
                            public List<HashMap<Integer, Size>> mo19443G() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 2982, new Class[0], List.class);
                                if (proxy.isSupported) {
                                    return (List) proxy.result;
                                }
                                if (this.f8366ah == null) {
                                    LogUtil.m15956e(f8305s, "extendedHFRSize is null");
                                    return null;
                                } else if (DeviceHelper.f13955cB == -1 && DeviceHelper.f13956cC == -1) {
                                    return null;
                                } else {
                                    if (this.f8352aQ != null && this.f8352aQ.size() > 0) {
                                        return this.f8352aQ;
                                    }
                                    this.f8352aQ = new ArrayList();
                                    for (int i = 0; i < this.f8366ah.length; i += 3) {
                                        int i2 = this.f8366ah[i + 2];
                                        HashMap hashMap = new HashMap();
                                        if (i2 == 240 && DeviceHelper.f13955cB != -1) {
                                            Size size = new Size(1920, 1080);
                                            if (size.getWidth() <= this.f8366ah[i] && size.getHeight() <= this.f8366ah[i + 1]) {
                                                hashMap.put(Integer.valueOf(i2), size);
                                            }
                                        } else if (i2 == 480 && DeviceHelper.f13956cC != -1) {
                                            Size size2 = new Size(1280, 720);
                                            if (size2.getWidth() <= this.f8366ah[i] && size2.getHeight() <= this.f8366ah[i + 1]) {
                                                hashMap.put(Integer.valueOf(i2), size2);
                                            }
                                        }
                                        if (!hashMap.isEmpty()) {
                                            this.f8352aQ.add(hashMap);
                                        }
                                    }
                                    if (this.f8352aQ.size() > 0) {
                                        return this.f8352aQ;
                                    }
                                    LogUtil.m15956e(f8305s, "supportedSizes is null");
                                    return null;
                                }
                            }

                            /* renamed from: a */
                            public void mo19472a(String str, boolean z) {
                                if (!PatchProxy.proxy(new Object[]{str, new Byte(z ? (byte) 1 : 0)}, this, f8303o, false, 2983, new Class[]{String.class, Boolean.TYPE}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "setVideoFps = " + str + ", isSlowMotion = " + z);
                                    int intValue = Integer.valueOf(str).intValue();
                                    if (z) {
                                        this.f8322M = true;
                                        this.f8321L = false;
                                        if (intValue < Integer.valueOf(DeviceHelper.f14038h.getValue()).intValue()) {
                                            this.f8333X = Integer.valueOf(DeviceHelper.f14038h.getValue()).intValue();
                                        } else {
                                            this.f8333X = intValue;
                                        }
                                    } else {
                                        this.f8322M = false;
                                        if (Integer.valueOf(str).intValue() >= f8309y.intValue()) {
                                            this.f8333X = Integer.valueOf(str).intValue();
                                            this.f8321L = true;
                                            return;
                                        }
                                        this.f8321L = false;
                                    }
                                }
                            }

                            /* renamed from: ag */
                            public void mo19565ag() {
                                if (!PatchProxy.proxy(new Object[0], this, f8303o, false, 2984, new Class[0], Void.TYPE).isSupported) {
                                    try {
                                        if (this.f8323N != null && this.f8325P != null) {
                                            if (this.f8311B != null) {
                                                this.f8323N.set(m9130b(Contants.CameraV2Key.END_OF_STREAM), (byte) 1);
                                                this.f8325P.capture(this.f8323N.build(), this.f8401br, this.f8279c);
                                            }
                                        }
                                    } catch (CameraAccessException e) {
                                        e.printStackTrace();
                                    }
                                }
                            }

                            /* renamed from: c */
                            public void mo19503c(boolean z) {
                                Object[] objArr = {new Byte(z ? (byte) 1 : 0)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 2985, new Class[]{Boolean.TYPE}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setParamsForEIS", new Runnable(z) {
                                        private final /* synthetic */ boolean f$1;

                                        {
                                            this.f$1 = r2;
                                        }

                                        public final void run() {
                                            CameraControllerV2.this.m9196j(this.f$1);
                                        }
                                    });
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: j */
                            public /* synthetic */ void m9196j(boolean z) {
                                Object[] objArr = {new Byte(z ? (byte) 1 : 0)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3119, new Class[]{Boolean.TYPE}, Void.TYPE).isSupported) {
                                    try {
                                        this.f8315F.mo19728a("setParamsForEIS");
                                        if (this.f8325P == null) {
                                            this.f8315F.mo19729b("setParamsForEIS");
                                            return;
                                        }
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15942a(aVar, "setParamsForEIS, start video recording ? " + z);
                                        if (DeviceHelper.f14018dj == DeviceHelper.EIS_TYPE.INVENSENSE) {
                                            this.f8323N.set(m9130b(Contants.CameraV2Key.STOP_EIS), 1);
                                            this.f8325P.capture(this.f8323N.build(), this.f8401br, this.f8279c);
                                            Thread.sleep(40);
                                        } else if (DeviceHelper.f14018dj == DeviceHelper.EIS_TYPE.ARCSOFT) {
                                            this.f8323N.set(m9130b(Contants.CameraV2Key.STOP_EIS), Integer.valueOf(z ^ true ? 1 : 0));
                                            this.f8325P.setRepeatingRequest(this.f8323N.build(), this.f8401br, this.f8279c);
                                        }
                                        this.f8315F.mo19729b("setParamsForEIS");
                                    } catch (CameraAccessException | InterruptedException e) {
                                        e.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("setParamsForEIS");
                                        throw th;
                                    }
                                }
                            }

                            /* renamed from: d */
                            public void mo19508d(boolean z) {
                                Object[] objArr = {new Byte(z ? (byte) 1 : 0)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 2986, new Class[]{Boolean.TYPE}, Void.TYPE).isSupported && DeviceHelper.f14021dm && this.f8311B != null && this.f8311B.f9122a != 1) {
                                    AsyncTaskEx.f13744r.mo22621a("setOpticalStablization", new Runnable(z) {
                                        private final /* synthetic */ boolean f$1;

                                        {
                                            this.f$1 = r2;
                                        }

                                        public final void run() {
                                            CameraControllerV2.this.m9192i(this.f$1);
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("setOpticalStablization");
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: i */
                            public /* synthetic */ void m9192i(boolean z) {
                                Object[] objArr = {new Byte(z ? (byte) 1 : 0)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3118, new Class[]{Boolean.TYPE}, Void.TYPE).isSupported) {
                                    try {
                                        this.f8315F.mo19728a("setOpticalStablization");
                                        if (!(this.f8323N == null || this.f8325P == null)) {
                                            this.f8323N.set(CaptureRequest.LENS_OPTICAL_STABILIZATION_MODE, Integer.valueOf(z ? 1 : 0));
                                            m9125au();
                                        }
                                    } catch (CameraAccessException e) {
                                        e.printStackTrace();
                                    } catch (InterruptedException e2) {
                                        e2.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("setOpticalStablization");
                                        throw th;
                                    }
                                    this.f8315F.mo19729b("setOpticalStablization");
                                }
                            }

                            /* renamed from: j */
                            public Point mo19520j() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 2987, new Class[0], Point.class);
                                if (proxy.isSupported) {
                                    return (Point) proxy.result;
                                }
                                if (this.f8316G == null) {
                                    return new Point(0, 0);
                                }
                                return new Point(this.f8316G.getWidth(), this.f8316G.getHeight());
                            }

                            /* renamed from: ah */
                            public CameraProxyV2 mo19522k() {
                                return this.f8311B;
                            }

                            /* renamed from: a */
                            public void mo19471a(String str, String str2, boolean... zArr) {
                                boolean z = false;
                                if (!PatchProxy.proxy(new Object[]{str, str2, zArr}, this, f8303o, false, 2988, new Class[]{String.class, String.class, boolean[].class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "setParameter, key = " + str + ", value = " + str2);
                                    if (this.f8323N != null && this.f8324O != null && this.f8325P != null) {
                                        boolean z2 = zArr != null && zArr.length > 0 && zArr[0];
                                        LogUtil.C2630a aVar2 = f8305s;
                                        LogUtil.m15942a(aVar2, "needUpdateNow " + z2 + " key = " + str);
                                        if (zArr != null && zArr.length > 1 && zArr[1]) {
                                            z = true;
                                        }
                                        AsyncTaskEx.f13744r.mo22621a((String) null, new Runnable(str, str2, z2) {
                                            private final /* synthetic */ String f$1;
                                            private final /* synthetic */ String f$2;
                                            private final /* synthetic */ boolean f$3;

                                            {
                                                this.f$1 = r2;
                                                this.f$2 = r3;
                                                this.f$3 = r4;
                                            }

                                            public final void run() {
                                                CameraControllerV2.this.m9085a(this.f$1, this.f$2, this.f$3);
                                            }
                                        });
                                        if (z2 && !z) {
                                            AsyncTaskEx.f13744r.mo22622a((String) null);
                                        }
                                    }
                                }
                            }

                            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v1, resolved type: boolean} */
                            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v3, resolved type: int} */
                            /* JADX WARNING: type inference failed for: r9v0 */
                            /* JADX WARNING: type inference failed for: r9v2 */
                            /* JADX WARNING: type inference failed for: r9v4 */
                            /* JADX WARNING: type inference failed for: r9v5 */
                            /* JADX WARNING: type inference failed for: r9v6 */
                            /* access modifiers changed from: private */
                            /* JADX WARNING: Multi-variable type inference failed */
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public /* synthetic */ void m9085a(java.lang.String r12, java.lang.String r13, boolean r14) {
                                /*
                                    r11 = this;
                                    r0 = 3
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    r8 = 0
                                    r1[r8] = r12
                                    r9 = 1
                                    r1[r9] = r13
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r14)
                                    r10 = 2
                                    r1[r10] = r2
                                    com.meizu.savior.ChangeQuickRedirect r3 = f8303o
                                    java.lang.Class[] r6 = new java.lang.Class[r0]
                                    java.lang.Class<java.lang.String> r2 = java.lang.String.class
                                    r6[r8] = r2
                                    java.lang.Class<java.lang.String> r2 = java.lang.String.class
                                    r6[r9] = r2
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r6[r10] = r2
                                    java.lang.Class r7 = java.lang.Void.TYPE
                                    r4 = 0
                                    r5 = 3117(0xc2d, float:4.368E-42)
                                    r2 = r11
                                    com.meizu.savior.PatchProxyResult r1 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                    boolean r1 = r1.isSupported
                                    if (r1 == 0) goto L_0x0030
                                    return
                                L_0x0030:
                                    android.hardware.camera2.CaptureRequest$Builder r1 = r11.f8323N
                                    if (r1 == 0) goto L_0x0309
                                    android.hardware.camera2.CaptureRequest r1 = r11.f8324O
                                    if (r1 == 0) goto L_0x0309
                                    android.hardware.camera2.CameraCaptureSession r1 = r11.f8325P
                                    if (r1 != 0) goto L_0x003e
                                    goto L_0x0309
                                L_0x003e:
                                    java.lang.String r1 = "exposure-compensation"
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x0053
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    android.hardware.camera2.CaptureRequest$Key r0 = android.hardware.camera2.CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION
                                    java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r13)
                                    goto L_0x02ef
                                L_0x0053:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION
                                    java.lang.String r1 = r1.getKeyName()
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x0070
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Byte r13 = java.lang.Byte.valueOf(r13)
                                    r12.set(r0, r13)
                                    goto L_0x02ef
                                L_0x0070:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION_OUT
                                    java.lang.String r1 = r1.getKeyName()
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x0093
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N     // Catch:{ IllegalArgumentException -> 0x008d }
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.SMOOTH_ZOOM_TRANSITION_OUT     // Catch:{ IllegalArgumentException -> 0x008d }
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)     // Catch:{ IllegalArgumentException -> 0x008d }
                                    java.lang.Byte r13 = java.lang.Byte.valueOf(r13)     // Catch:{ IllegalArgumentException -> 0x008d }
                                    r12.set(r0, r13)     // Catch:{ IllegalArgumentException -> 0x008d }
                                    goto L_0x02ef
                                L_0x008d:
                                    r12 = move-exception
                                    r12.printStackTrace()
                                    goto L_0x02ef
                                L_0x0093:
                                    java.lang.String r1 = com.meizu.media.camera.mode.ManualMode.f10872f
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x00f9
                                    int r12 = java.lang.Integer.parseInt(r13)
                                    r0 = -1
                                    r1 = 7
                                    if (r12 != r0) goto L_0x00be
                                    int r12 = r11.f8344aI
                                    if (r12 == r9) goto L_0x02ef
                                    int r12 = r11.f8344aI
                                    r13 = 4
                                    if (r12 == r13) goto L_0x00b5
                                    int r12 = r11.f8408w
                                    if (r12 != r1) goto L_0x00b5
                                    r11.mo19572e((int) r8)
                                    r11.f8372an = r8
                                L_0x00b5:
                                    r11.f8344aI = r13
                                    int r12 = r11.f8344aI
                                    r11.mo19573f((int) r12)
                                    goto L_0x02ef
                                L_0x00be:
                                    int r12 = r11.f8344aI
                                    if (r12 == 0) goto L_0x00cb
                                    int r12 = r11.f8408w
                                    if (r12 != r1) goto L_0x00cb
                                    r11.mo19572e((int) r8)
                                    r11.f8372an = r8
                                L_0x00cb:
                                    r11.f8344aI = r8
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    android.hardware.camera2.CaptureRequest$Key r0 = android.hardware.camera2.CaptureRequest.CONTROL_AF_MODE
                                    java.lang.Integer r1 = java.lang.Integer.valueOf(r8)
                                    r12.set(r0, r1)
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    android.hardware.camera2.CaptureRequest$Key r0 = android.hardware.camera2.CaptureRequest.LENS_FOCUS_DISTANCE
                                    java.lang.Float r13 = java.lang.Float.valueOf(r13)
                                    float r13 = r13.floatValue()
                                    java.lang.Float r1 = r11.f8367ai
                                    float r1 = r1.floatValue()
                                    float r13 = r13 * r1
                                    r1 = 1149222912(0x447fc000, float:1023.0)
                                    float r13 = r13 / r1
                                    java.lang.Float r13 = java.lang.Float.valueOf(r13)
                                    r12.set(r0, r13)
                                    goto L_0x02ef
                                L_0x00f9:
                                    java.lang.String r1 = "device-Watermark"
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x0130
                                    boolean r12 = com.meizu.media.camera.util.DeviceHelper.f13881ah
                                    if (r12 == 0) goto L_0x0122
                                    com.meizu.media.camera.util.Contants$DeviceMarkType r12 = com.meizu.media.camera.util.Contants.DeviceMarkType.DEVICE_MARK_DEFAULT
                                    java.lang.String r12 = r12.getOption()
                                    boolean r12 = r12.equals(r13)
                                    if (r12 != 0) goto L_0x011d
                                    com.meizu.media.camera.util.Contants$DeviceMarkType r12 = com.meizu.media.camera.util.Contants.DeviceMarkType.DEVICE_MARK_CUSTOM
                                    java.lang.String r12 = r12.getOption()
                                    boolean r12 = r12.equals(r13)
                                    if (r12 == 0) goto L_0x011e
                                L_0x011d:
                                    r8 = 1
                                L_0x011e:
                                    r11.f8379au = r8
                                    goto L_0x02ef
                                L_0x0122:
                                    com.meizu.media.camera.util.Contants$DeviceMarkType r12 = com.meizu.media.camera.util.Contants.DeviceMarkType.DEVICE_MARK_DEFAULT
                                    java.lang.String r12 = r12.getOption()
                                    boolean r12 = r12.equals(r13)
                                    r11.f8379au = r12
                                    goto L_0x02ef
                                L_0x0130:
                                    java.lang.String r1 = "digital-Watermark"
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x0142
                                    java.lang.String r12 = "1"
                                    boolean r12 = r12.equals(r13)
                                    r11.f8380av = r12
                                    goto L_0x02ef
                                L_0x0142:
                                    java.lang.String r1 = "watermark-Date"
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x014e
                                    r11.f8381aw = r13
                                    goto L_0x02ef
                                L_0x014e:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.BEAUTY_LEVEL
                                    java.lang.String r1 = r1.getKeyName()
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x0175
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.BEAUTY_LEVEL
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Integer r1 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r1)
                                    java.lang.Integer r12 = java.lang.Integer.valueOf(r13)
                                    int r12 = r12.intValue()
                                    r11.f8354aS = r12
                                    goto L_0x02ef
                                L_0x0175:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r1 = com.meizu.media.camera.util.Contants.CameraV2Key.DEVICE_ORIENTATION
                                    java.lang.String r1 = r1.getKeyName()
                                    boolean r1 = r1.equals(r12)
                                    if (r1 == 0) goto L_0x01aa
                                    int r12 = java.lang.Integer.parseInt(r13)
                                    if (r12 != 0) goto L_0x0189
                                    r9 = 0
                                    goto L_0x0199
                                L_0x0189:
                                    r13 = 90
                                    if (r12 != r13) goto L_0x018e
                                    goto L_0x0199
                                L_0x018e:
                                    r13 = 180(0xb4, float:2.52E-43)
                                    if (r12 != r13) goto L_0x0194
                                    r9 = 2
                                    goto L_0x0199
                                L_0x0194:
                                    r13 = 270(0x10e, float:3.78E-43)
                                    if (r12 != r13) goto L_0x0199
                                    r9 = 3
                                L_0x0199:
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r13 = com.meizu.media.camera.util.Contants.CameraV2Key.DEVICE_ORIENTATION
                                    android.hardware.camera2.CaptureRequest$Key r13 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r13)
                                    java.lang.Integer r0 = java.lang.Integer.valueOf(r9)
                                    r12.set(r13, r0)
                                    goto L_0x02ef
                                L_0x01aa:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.DEVICE_MOVING
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x01c7
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.DEVICE_MOVING
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r13)
                                    goto L_0x02ef
                                L_0x01c7:
                                    java.lang.String r0 = "front-mirror"
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x01db
                                    java.lang.Integer r12 = java.lang.Integer.valueOf(r13)
                                    int r12 = r12.intValue()
                                    r11.f8355aT = r12
                                    goto L_0x02ef
                                L_0x01db:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.AI_ASD_ENABLE
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x0222
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.AI_ASD_ENABLE
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Integer r1 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r1)
                                    java.lang.Integer r12 = java.lang.Integer.valueOf(r13)
                                    int r12 = r12.intValue()
                                    if (r12 != r9) goto L_0x0201
                                    goto L_0x0202
                                L_0x0201:
                                    r9 = 0
                                L_0x0202:
                                    r11.f8345aJ = r9
                                    boolean r12 = r11.f8345aJ
                                    if (r12 != 0) goto L_0x02ef
                                    com.meizu.media.camera.camcontroller.CameraController$c r12 = r11.f8338aC
                                    if (r12 == 0) goto L_0x02ef
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r12 = r11.f8401br
                                    int unused = r12.f8675g = r8
                                    com.meizu.media.camera.camcontroller.CameraController$c r12 = r11.f8338aC
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r13 = r11.f8401br
                                    int r13 = r13.f8675g
                                    com.meizu.media.camera.util.Contants$AsdSceneType r13 = com.meizu.media.camera.util.Contants.AsdSceneType.convertAsdSceneType(r13)
                                    r12.mo18557a((com.meizu.media.camera.util.Contants.AsdSceneType) r13)
                                    goto L_0x02ef
                                L_0x0222:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.MFNR_ENABLE
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x024c
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.MFNR_ENABLE
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Integer r1 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r1)
                                    java.lang.Integer r12 = java.lang.Integer.valueOf(r13)
                                    int r12 = r12.intValue()
                                    if (r12 != r9) goto L_0x0248
                                    r8 = 1
                                L_0x0248:
                                    r11.f8346aK = r8
                                    goto L_0x02ef
                                L_0x024c:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.HDR_ENABLE
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x028c
                                    java.lang.Integer r12 = java.lang.Integer.valueOf(r13)
                                    int r12 = r12.intValue()
                                    com.meizu.media.camera.camcontroller.CameraController$HdrMode r12 = com.meizu.media.camera.camcontroller.CameraController.HdrMode.convertHdrMode(r12)
                                    r11.f8342aG = r12
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.HDR_ENABLE
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r13)
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r12 = r11.f8401br
                                    int r12 = r12.f8674f
                                    if (r12 == 0) goto L_0x02ef
                                    com.meizu.media.camera.camcontroller.CameraController$c r12 = r11.f8338aC
                                    if (r12 == 0) goto L_0x02ef
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r12 = r11.f8401br
                                    r12.mo19642b()
                                    com.meizu.media.camera.camcontroller.CameraController$c r12 = r11.f8338aC
                                    r12.mo18560b()
                                    goto L_0x02ef
                                L_0x028c:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.EXPOSURE_METERING_MODE
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x02a8
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.EXPOSURE_METERING_MODE
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)
                                    java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
                                    r12.set(r0, r13)
                                    goto L_0x02ef
                                L_0x02a8:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.BURST_FPS
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r0 = r0.equals(r12)
                                    if (r0 == 0) goto L_0x02cc
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N     // Catch:{ Exception -> 0x02c4 }
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.BURST_FPS     // Catch:{ Exception -> 0x02c4 }
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)     // Catch:{ Exception -> 0x02c4 }
                                    java.lang.Byte r13 = java.lang.Byte.valueOf(r13)     // Catch:{ Exception -> 0x02c4 }
                                    r12.set(r0, r13)     // Catch:{ Exception -> 0x02c4 }
                                    goto L_0x02ef
                                L_0x02c4:
                                    com.meizu.media.camera.util.ac$a r12 = f8305s
                                    java.lang.String r13 = "not support BURST_FPS setting"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r12, (java.lang.String) r13)
                                    goto L_0x02ef
                                L_0x02cc:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT
                                    java.lang.String r0 = r0.getKeyName()
                                    boolean r12 = r0.equals(r12)
                                    if (r12 == 0) goto L_0x0308
                                    android.hardware.camera2.CaptureRequest$Builder r12 = r11.f8323N     // Catch:{ Exception -> 0x02e8 }
                                    com.meizu.media.camera.util.Contants$CameraV2Key r0 = com.meizu.media.camera.util.Contants.CameraV2Key.WIDE_ANGLE_UNDISTORT     // Catch:{ Exception -> 0x02e8 }
                                    android.hardware.camera2.CaptureRequest$Key r0 = r11.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r0)     // Catch:{ Exception -> 0x02e8 }
                                    java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x02e8 }
                                    r12.set(r0, r13)     // Catch:{ Exception -> 0x02e8 }
                                    goto L_0x02ef
                                L_0x02e8:
                                    com.meizu.media.camera.util.ac$a r12 = f8305s
                                    java.lang.String r13 = "not support WIDE_ANGLE_UNDISTORT setting"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r12, (java.lang.String) r13)
                                L_0x02ef:
                                    if (r14 == 0) goto L_0x0307
                                    com.meizu.media.camera.util.ac$a r12 = f8305s     // Catch:{ CameraAccessException -> 0x02fc }
                                    java.lang.String r13 = "needUpdateNow updateRepeatingRequest"
                                    com.meizu.media.camera.util.LogUtil.m15952c(r12, r13)     // Catch:{ CameraAccessException -> 0x02fc }
                                    r11.m9125au()     // Catch:{ CameraAccessException -> 0x02fc }
                                    goto L_0x0307
                                L_0x02fc:
                                    r12 = move-exception
                                    com.meizu.media.camera.util.ac$a r13 = f8305s
                                    java.lang.String r14 = "set parameters fails!"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r13, (java.lang.String) r14)
                                    r12.printStackTrace()
                                L_0x0307:
                                    return
                                L_0x0308:
                                    return
                                L_0x0309:
                                    return
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9085a(java.lang.String, java.lang.String, boolean):void");
                            }

                            /* renamed from: a */
                            public void mo19480a(boolean... zArr) {
                                if (!PatchProxy.proxy(new Object[]{zArr}, this, f8303o, false, 2989, new Class[]{boolean[].class}, Void.TYPE).isSupported && this.f8323N != null && this.f8324O != null && this.f8325P != null) {
                                    AsyncTaskEx.f13744r.mo22621a((String) null, new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8577a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8577a, false, 3125, new Class[0], Void.TYPE).isSupported && CameraControllerV2.this.f8323N != null && CameraControllerV2.this.f8324O != null && CameraControllerV2.this.f8325P != null) {
                                                try {
                                                    CameraControllerV2.this.m9125au();
                                                } catch (CameraAccessException e) {
                                                    LogUtil.m15949b(CameraControllerV2.f8305s, "set all parameters fails!");
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                    if (zArr == null || zArr.length <= 0 || !zArr[0]) {
                                        AsyncTaskEx.f13744r.mo22622a((String) null);
                                    }
                                }
                            }

                            /* renamed from: a */
                            public Point mo19450a(int i, int i2, boolean... zArr) {
                                Object[] objArr = {new Integer(i), new Integer(i2), zArr};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                ChangeQuickRedirect changeQuickRedirect2 = changeQuickRedirect;
                                PatchProxyResult proxy = PatchProxy.proxy(objArr, this, changeQuickRedirect2, false, 2990, new Class[]{Integer.TYPE, Integer.TYPE, boolean[].class}, Point.class);
                                if (proxy.isSupported) {
                                    return (Point) proxy.result;
                                }
                                LogUtil.C2630a aVar = f8305s;
                                LogUtil.m15942a(aVar, "width = " + i + ", height = " + i2);
                                this.f8287m = new Point(i, i2);
                                return this.f8287m;
                            }

                            /* renamed from: l */
                            public Point mo19524l() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 2991, new Class[0], Point.class);
                                if (proxy.isSupported) {
                                    return (Point) proxy.result;
                                }
                                if (this.f8287m == null) {
                                    return mo19528n();
                                }
                                return this.f8287m;
                            }

                            /* renamed from: a */
                            public void mo19461a(final MeizuCamera.MeizuSceneModeDetectionCallback meizuSceneModeDetectionCallback) {
                                if (!PatchProxy.proxy(new Object[]{meizuSceneModeDetectionCallback}, this, f8303o, false, 2992, new Class[]{MeizuCamera.MeizuSceneModeDetectionCallback.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setMeizuSceneModeDetectionCallback", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8579a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8579a, false, 3126, new Class[0], Void.TYPE).isSupported) {
                                                MeizuCamera.MeizuSceneModeDetectionCallback unused = CameraControllerV2.this.f8339aD = meizuSceneModeDetectionCallback;
                                            }
                                        }
                                    });
                                }
                            }

                            /* renamed from: a */
                            public void mo19459a(final MeizuCamera.MeizuMetaDataCallback meizuMetaDataCallback) {
                                if (!PatchProxy.proxy(new Object[]{meizuMetaDataCallback}, this, f8303o, false, 2993, new Class[]{MeizuCamera.MeizuMetaDataCallback.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setMeizuMetaDataCallback", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8582a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8582a, false, 3127, new Class[0], Void.TYPE).isSupported) {
                                                MeizuCamera.MeizuMetaDataCallback unused = CameraControllerV2.this.f8340aE = meizuMetaDataCallback;
                                            }
                                        }
                                    });
                                }
                            }

                            /* renamed from: a */
                            public void mo19457a(Handler handler, final CameraController.C1877d dVar) {
                                if (!PatchProxy.proxy(new Object[]{handler, dVar}, this, f8303o, false, 2994, new Class[]{Handler.class, CameraController.C1877d.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setFaceDetectionCallback", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8585a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8585a, false, 3128, new Class[0], Void.TYPE).isSupported && CameraControllerV2.this.f8311B != null) {
                                                CameraController.C1877d unused = CameraControllerV2.this.f8337aB = dVar;
                                            }
                                        }
                                    });
                                }
                            }

                            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v9, resolved type: java.lang.Object} */
                            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v9, resolved type: java.lang.Float} */
                            /* JADX WARNING: Multi-variable type inference failed */
                            /* renamed from: m */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public int mo19526m() {
                                /*
                                    r8 = this;
                                    r0 = 0
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    com.meizu.savior.ChangeQuickRedirect r3 = f8303o
                                    java.lang.Class[] r6 = new java.lang.Class[r0]
                                    java.lang.Class r7 = java.lang.Integer.TYPE
                                    r4 = 0
                                    r5 = 2995(0xbb3, float:4.197E-42)
                                    r2 = r8
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                    boolean r1 = r0.isSupported
                                    if (r1 == 0) goto L_0x001e
                                    java.lang.Object r0 = r0.result
                                    java.lang.Integer r0 = (java.lang.Integer) r0
                                    int r0 = r0.intValue()
                                    return r0
                                L_0x001e:
                                    r0 = -1082130432(0xffffffffbf800000, float:-1.0)
                                    java.lang.Float r1 = java.lang.Float.valueOf(r0)
                                    int r2 = r8.f8344aI
                                    r3 = 1
                                    if (r2 != r3) goto L_0x0043
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r2 = r8.f8401br
                                    if (r2 == 0) goto L_0x0043
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r2 = r8.f8401br
                                    android.hardware.camera2.TotalCaptureResult r2 = r2.mo19639a()
                                    if (r2 == 0) goto L_0x0043
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r1 = r8.f8401br
                                    android.hardware.camera2.TotalCaptureResult r1 = r1.mo19639a()
                                    android.hardware.camera2.CaptureResult$Key r2 = android.hardware.camera2.CaptureResult.LENS_FOCUS_DISTANCE
                                    java.lang.Object r1 = r1.get(r2)
                                    java.lang.Float r1 = (java.lang.Float) r1
                                L_0x0043:
                                    float r2 = r1.floatValue()
                                    int r0 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1))
                                    if (r0 != 0) goto L_0x0056
                                    android.hardware.camera2.CaptureRequest$Builder r0 = r8.f8323N
                                    android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.LENS_FOCUS_DISTANCE
                                    java.lang.Object r0 = r0.get(r1)
                                    r1 = r0
                                    java.lang.Float r1 = (java.lang.Float) r1
                                L_0x0056:
                                    float r0 = r1.floatValue()
                                    r1 = 1149222912(0x447fc000, float:1023.0)
                                    float r0 = r0 * r1
                                    java.lang.Float r1 = r8.f8367ai
                                    float r1 = r1.floatValue()
                                    float r0 = r0 / r1
                                    int r0 = (int) r0
                                    return r0
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.mo19526m():int");
                            }

                            /* renamed from: a */
                            public void mo19477a(final boolean z, final boolean... zArr) {
                                if (!PatchProxy.proxy(new Object[]{new Byte(z ? (byte) 1 : 0), zArr}, this, f8303o, false, 2997, new Class[]{Boolean.TYPE, boolean[].class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setAutoExposureLock", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8588a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8588a, false, 3129, new Class[0], Void.TYPE).isSupported) {
                                                CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AE_LOCK, Boolean.valueOf(z));
                                                try {
                                                    if (zArr != null && zArr.length > 0 && zArr[0]) {
                                                        CameraControllerV2.this.m9125au();
                                                    }
                                                } catch (CameraAccessException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                    if (zArr != null && zArr.length > 0 && zArr[0]) {
                                        AsyncTaskEx.f13744r.mo22622a("setAutoExposureLock");
                                    }
                                }
                            }

                            /* renamed from: b */
                            public void mo19497b(final boolean z, final boolean... zArr) {
                                if (!PatchProxy.proxy(new Object[]{new Byte(z ? (byte) 1 : 0), zArr}, this, f8303o, false, 2998, new Class[]{Boolean.TYPE, boolean[].class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setAutoWhiteBalanceLock", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8413a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8413a, false, 3130, new Class[0], Void.TYPE).isSupported) {
                                                CameraControllerV2.this.f8323N.set(CaptureRequest.CONTROL_AWB_LOCK, Boolean.valueOf(z));
                                                try {
                                                    if (zArr != null && zArr.length > 0 && zArr[0]) {
                                                        CameraControllerV2.this.m9125au();
                                                    }
                                                } catch (CameraAccessException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                    if (zArr != null && zArr.length > 0 && zArr[0]) {
                                        AsyncTaskEx.f13744r.mo22622a("setAutoWhiteBalanceLock");
                                    }
                                }
                            }

                            /* renamed from: b */
                            public List<String> mo19570b(boolean... zArr) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{zArr}, this, f8303o, false, 2999, new Class[]{boolean[].class}, List.class);
                                if (proxy.isSupported) {
                                    return (List) proxy.result;
                                }
                                String a = mo19451a(5, zArr);
                                if (a == null) {
                                    return null;
                                }
                                return Arrays.asList(a.split(SystemInfoUtil.COMMA));
                            }

                            /* renamed from: b */
                            public void mo19495b(String str, boolean... zArr) {
                                if (!PatchProxy.proxy(new Object[]{str, zArr}, this, f8303o, false, 3000, new Class[]{String.class, boolean[].class}, Void.TYPE).isSupported) {
                                    WhiteBalanceMode whiteBalanceMode = WhiteBalanceMode.WHITE_BALANCE_AUTO;
                                    WhiteBalanceMode[] whiteBalanceModeArr = f8308v;
                                    int length = whiteBalanceModeArr.length;
                                    int i = 0;
                                    while (true) {
                                        if (i >= length) {
                                            break;
                                        }
                                        WhiteBalanceMode whiteBalanceMode2 = whiteBalanceModeArr[i];
                                        if (whiteBalanceMode2.getModeName().equals(str)) {
                                            whiteBalanceMode = whiteBalanceMode2;
                                            break;
                                        }
                                        i++;
                                    }
                                    this.f8323N.set(CaptureRequest.CONTROL_AWB_MODE, Integer.valueOf(whiteBalanceMode.getModeId()));
                                    if (zArr != null && zArr.length > 0 && zArr[0]) {
                                        try {
                                            this.f8325P.setRepeatingRequest(this.f8323N.build(), this.f8401br, this.f8279c);
                                        } catch (CameraAccessException e) {
                                            LogUtil.m15949b(f8305s, "set parameters fails!");
                                            e.printStackTrace();
                                        }
                                    }
                                }
                            }

                            /* renamed from: n */
                            public Point mo19528n() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, ARPMessageType.MSG_TYPE_SDK_CALL_LUA_FUC, new Class[0], Point.class);
                                if (proxy.isSupported) {
                                    return (Point) proxy.result;
                                }
                                try {
                                    if (this.f8311B != null) {
                                        if (this.f8314E != null) {
                                            this.f8315F.mo19728a("getPreviewSize");
                                            if (this.f8311B != null) {
                                                if (this.f8314E != null) {
                                                    StreamConfigurationMap streamConfigurationMap = (StreamConfigurationMap) this.f8314E.get(CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
                                                    if (streamConfigurationMap == null) {
                                                        LogUtil.m15949b(f8305s, "StreamConfigurationMap is NULL!");
                                                        this.f8315F.mo19729b("getPreviewSize");
                                                        return null;
                                                    }
                                                    Size[] outputSizes = streamConfigurationMap.getOutputSizes(SurfaceTexture.class);
                                                    if (outputSizes != null && outputSizes.length > 0) {
                                                        Point point = new Point(outputSizes[0].getWidth(), outputSizes[0].getHeight());
                                                        this.f8315F.mo19729b("getPreviewSize");
                                                        return point;
                                                    }
                                                    this.f8315F.mo19729b("getPreviewSize");
                                                    return null;
                                                }
                                            }
                                            this.f8315F.mo19729b("getPreviewSize");
                                            return null;
                                        }
                                    }
                                    this.f8315F.mo19729b("getPreviewSize");
                                    return null;
                                } catch (InterruptedException e) {
                                    e.printStackTrace();
                                } catch (Throwable th) {
                                    this.f8315F.mo19729b("getPreviewSize");
                                    throw th;
                                }
                            }

                            /* renamed from: c */
                            public void mo19500c(final int i, final int i2, boolean... zArr) {
                                Object[] objArr = {new Integer(i), new Integer(i2), zArr};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, ARPMessageType.MSG_TYPE_LUA_CALL_SDK_FUC, new Class[]{Integer.TYPE, Integer.TYPE, boolean[].class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "setPictureSize width:" + i + "  height:" + i2);
                                    AsyncTaskEx.f13744r.mo22621a("setPictureSize", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8417a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8417a, false, 3131, new Class[0], Void.TYPE).isSupported) {
                                                if (CameraControllerV2.this.f8316G != null) {
                                                    CameraControllerV2.this.f8316G.close();
                                                }
                                                ImageReader unused = CameraControllerV2.this.f8316G = ImageReader.newInstance(i, i2, 35, 2);
                                            }
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("setPictureSize");
                                }
                            }

                            /* renamed from: a */
                            public void mo19563a(final int i, final int i2) {
                                Object[] objArr = {new Integer(i), new Integer(i2)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3003, new Class[]{Integer.TYPE, Integer.TYPE}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "setMonoPictureSize width:" + i + "  height:" + i2);
                                    AsyncTaskEx.f13744r.mo22621a("setMonoPictureSize", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8423a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8423a, false, 3133, new Class[0], Void.TYPE).isSupported) {
                                                if (CameraControllerV2.this.f8317H != null) {
                                                    CameraControllerV2.this.f8317H.close();
                                                    CameraControllerV2.this.f8318I.close();
                                                }
                                                if (CameraControllerV2.this.f8316G != null) {
                                                    ImageReader unused = CameraControllerV2.this.f8317H = ImageReader.newInstance(i, i2, 35, 2);
                                                    ImageReader unused2 = CameraControllerV2.this.f8318I = ImageReader.newInstance(CameraControllerV2.this.f8316G.getWidth(), CameraControllerV2.this.f8316G.getHeight(), 256, 2);
                                                }
                                            }
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("setMonoPictureSize");
                                }
                            }

                            /* renamed from: o */
                            public List<Point> mo19530o() {
                                List list;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3004, new Class[0], List.class);
                                if (proxy.isSupported) {
                                    return (List) proxy.result;
                                }
                                ArrayList arrayList = new ArrayList();
                                if (this.f8311B == null || this.f8314E == null) {
                                    return arrayList;
                                }
                                if (this.f8311B == null || (list = this.f8350aO.get(Integer.valueOf(this.f8311B.f9122a))) == null || list.size() == 0) {
                                    try {
                                        this.f8315F.mo19728a("getSupportedPictureSizes");
                                        if (!(this.f8311B == null || this.f8314E == null)) {
                                            StreamConfigurationMap streamConfigurationMap = (StreamConfigurationMap) this.f8314E.get(CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
                                            if (streamConfigurationMap == null) {
                                                LogUtil.m15949b(f8305s, "StreamConfigurationMap is NULL!");
                                                this.f8315F.mo19729b("getSupportedPictureSizes");
                                                return arrayList;
                                            }
                                            for (Size size : streamConfigurationMap.getOutputSizes(35)) {
                                                arrayList.add(new Point(size.getWidth(), size.getHeight()));
                                            }
                                            if (arrayList.size() != 0) {
                                                this.f8350aO.put(Integer.valueOf(this.f8311B.f9122a), arrayList);
                                            }
                                        }
                                    } catch (InterruptedException e) {
                                        e.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("getSupportedPictureSizes");
                                        throw th;
                                    }
                                    this.f8315F.mo19729b("getSupportedPictureSizes");
                                    return arrayList;
                                }
                                CameraUtil.m15838a((List<Point>) arrayList, (List<Point>) list);
                                return arrayList;
                            }

                            /* renamed from: p */
                            public List<Point> mo19532p() {
                                List list;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, ComponentMessageType.MSG_TYPE_LOGO_START, new Class[0], List.class);
                                if (proxy.isSupported) {
                                    return (List) proxy.result;
                                }
                                ArrayList arrayList = new ArrayList();
                                if (this.f8311B == null || this.f8314E == null) {
                                    return arrayList;
                                }
                                if (this.f8311B == null || (list = this.f8351aP.get(Integer.valueOf(this.f8311B.f9122a))) == null || list.size() == 0) {
                                    try {
                                        this.f8315F.mo19728a("getSupportedPreviewSizes");
                                        if (!(this.f8311B == null || this.f8314E == null)) {
                                            StreamConfigurationMap streamConfigurationMap = (StreamConfigurationMap) this.f8314E.get(CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);
                                            if (streamConfigurationMap == null) {
                                                LogUtil.m15949b(f8305s, "StreamConfigurationMap is NULL!");
                                                this.f8315F.mo19729b("getSupportedPreviewSizes");
                                                return arrayList;
                                            }
                                            for (Size size : streamConfigurationMap.getOutputSizes(SurfaceTexture.class)) {
                                                arrayList.add(new Point(size.getWidth(), size.getHeight()));
                                            }
                                            if (arrayList.size() != 0) {
                                                this.f8351aP.put(Integer.valueOf(this.f8311B.f9122a), arrayList);
                                            }
                                        }
                                    } catch (InterruptedException e) {
                                        e.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("getSupportedPreviewSizes");
                                        throw th;
                                    }
                                    this.f8315F.mo19729b("getSupportedPreviewSizes");
                                    return arrayList;
                                }
                                CameraUtil.m15838a((List<Point>) arrayList, (List<Point>) list);
                                return arrayList;
                            }

                            /* renamed from: d */
                            public int mo19505d(int i) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Integer(i)}, this, f8303o, false, ComponentMessageType.MSG_TYPE_LOGO_HIT, new Class[]{Integer.TYPE}, Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                try {
                                    return ((Integer) this.f8313D.getCameraCharacteristics(String.valueOf(i)).get(CameraCharacteristics.SENSOR_ORIENTATION)).intValue();
                                } catch (CameraAccessException e) {
                                    e.printStackTrace();
                                    return 0;
                                }
                            }

                            /* renamed from: a */
                            public boolean mo19481a(int i) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Integer(i)}, this, f8303o, false, 3008, new Class[]{Integer.TYPE}, Boolean.TYPE);
                                if (proxy.isSupported) {
                                    return ((Boolean) proxy.result).booleanValue();
                                }
                                if (this.f8313D == null) {
                                    this.f8313D = (CameraManager) this.f8286l.getSystemService("camera");
                                }
                                try {
                                    if (((Integer) this.f8313D.getCameraCharacteristics(String.valueOf(i)).get(CameraCharacteristics.LENS_FACING)).intValue() == 0) {
                                        return true;
                                    }
                                    return false;
                                } catch (CameraAccessException e) {
                                    e.printStackTrace();
                                    return false;
                                }
                            }

                            /* renamed from: f */
                            public int mo19512f() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, ComponentMessageType.MSG_TYPE_LOGOT, new Class[0], Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                if (this.f8313D == null) {
                                    this.f8313D = (CameraManager) this.f8286l.getSystemService("camera");
                                }
                                try {
                                    return this.f8313D.getCameraIdList().length;
                                } catch (CameraAccessException e) {
                                    e.printStackTrace();
                                    return -1;
                                }
                            }

                            /* renamed from: q */
                            public CameraController.FlashMode mo19534q() {
                                if (this.f8341aF != null) {
                                    return this.f8341aF;
                                }
                                return CameraController.FlashMode.FLASH_MODE_OFF;
                            }

                            /* renamed from: r */
                            public boolean mo19535r() {
                                return this.f8371am;
                            }

                            /* renamed from: b */
                            public void mo19496b(boolean z) {
                                this.f8371am = z;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9062a(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3011, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15952c(aVar, "applyFaceDetection" + this.f8336aA);
                                    if (this.f8336aA) {
                                        builder.set(CaptureRequest.STATISTICS_FACE_DETECT_MODE, 1);
                                    } else {
                                        builder.set(CaptureRequest.STATISTICS_FACE_DETECT_MODE, 0);
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9064a(CaptureRequest.Builder builder, CameraController.FlashMode flashMode, boolean z) {
                                int i;
                                if (!PatchProxy.proxy(new Object[]{builder, flashMode, new Byte(z ? (byte) 1 : 0)}, this, f8303o, false, 3012, new Class[]{CaptureRequest.Builder.class, CameraController.FlashMode.class, Boolean.TYPE}, Void.TYPE).isSupported && flashMode != null) {
                                    int i2 = null;
                                    if (CameraController.FlashMode.FLASH_MODE_AUTO == flashMode) {
                                        if (z) {
                                            i2 = 1;
                                            i = 0;
                                        } else {
                                            i2 = 2;
                                            i = 1;
                                        }
                                    } else if (CameraController.FlashMode.FLASH_MODE_OFF == flashMode) {
                                        i2 = 1;
                                        i = 0;
                                    } else if (CameraController.FlashMode.FLASH_MODE_ON == flashMode) {
                                        if (z) {
                                            i2 = 1;
                                            i = 0;
                                        } else {
                                            i2 = 3;
                                            i = 1;
                                        }
                                    } else if (CameraController.FlashMode.FLASH_MODE_TORCH == flashMode) {
                                        i2 = 1;
                                        i = 2;
                                    } else if (CameraController.FlashMode.FLASH_MODE_RED_EYE == flashMode) {
                                        i2 = 4;
                                        i = null;
                                    } else {
                                        LogUtil.m15949b(f8305s, "Unable to convert to API 2 flash mode: " + flashMode);
                                        i = null;
                                    }
                                    LogUtil.m15952c(f8305s, "apply Flash :" + flashMode);
                                    builder.set(CaptureRequest.FLASH_MODE, i);
                                    builder.set(CaptureRequest.CONTROL_AE_MODE, i2);
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9063a(CaptureRequest.Builder builder, int i) {
                                if (!PatchProxy.proxy(new Object[]{builder, new Integer(i)}, this, f8303o, false, 3013, new Class[]{CaptureRequest.Builder.class, Integer.TYPE}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "applyBeautyLevel:" + i);
                                    builder.set(m9130b(Contants.CameraV2Key.BEAUTY_LEVEL), Integer.valueOf(i));
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9065a(CaptureRequest.Builder builder, CameraController.HdrMode hdrMode) {
                                Class[] clsArr = {CaptureRequest.Builder.class, CameraController.HdrMode.class};
                                if (!PatchProxy.proxy(new Object[]{builder, hdrMode}, this, f8303o, false, 3014, clsArr, Void.TYPE).isSupported) {
                                    int convertInt = CameraController.HdrMode.convertInt(hdrMode);
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15952c(aVar, "applyHDR value:" + convertInt);
                                    builder.set(m9130b(Contants.CameraV2Key.HDR_ENABLE), Integer.valueOf(convertInt));
                                }
                            }

                            /* renamed from: a */
                            public void mo19466a(final CameraController.FlashMode flashMode, final boolean... zArr) {
                                if (!PatchProxy.proxy(new Object[]{flashMode, zArr}, this, f8303o, false, 3015, new Class[]{CameraController.FlashMode.class, boolean[].class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setFlashMode", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8427a;

                                        /* JADX WARNING: Removed duplicated region for block: B:17:0x0081 A[Catch:{ CameraAccessException -> 0x00c8 }] */
                                        /* JADX WARNING: Removed duplicated region for block: B:32:? A[RETURN, SYNTHETIC] */
                                        /* Code decompiled incorrectly, please refer to instructions dump. */
                                        public void run() {
                                            /*
                                                r8 = this;
                                                r0 = 0
                                                java.lang.Object[] r1 = new java.lang.Object[r0]
                                                com.meizu.savior.ChangeQuickRedirect r3 = f8427a
                                                java.lang.Class[] r6 = new java.lang.Class[r0]
                                                java.lang.Class r7 = java.lang.Void.TYPE
                                                r4 = 0
                                                r5 = 3134(0xc3e, float:4.392E-42)
                                                r2 = r8
                                                com.meizu.savior.PatchProxyResult r1 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                                boolean r1 = r1.isSupported
                                                if (r1 == 0) goto L_0x0016
                                                return
                                            L_0x0016:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 == 0) goto L_0x0061
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CameraCharacteristics r1 = r1.f8314E     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 == 0) goto L_0x0061
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CameraCharacteristics r1 = r1.f8314E     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CameraCharacteristics$Key r2 = android.hardware.camera2.CameraCharacteristics.FLASH_INFO_AVAILABLE     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.Object r1 = r1.get(r2)     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.Boolean r1 = (java.lang.Boolean) r1     // Catch:{ CameraAccessException -> 0x00c8 }
                                                boolean r1 = r1.booleanValue()     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 != 0) goto L_0x003b
                                                goto L_0x0061
                                            L_0x003b:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController$FlashMode r2 = r10     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController.FlashMode unused = r1.f8341aF = r2     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.util.ac$a r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ CameraAccessException -> 0x00c8 }
                                                r2.<init>()     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.String r3 = "setFlashMode mFlashMode:"
                                                r2.append(r3)     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r3 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController$FlashMode r3 = r3.f8341aF     // Catch:{ CameraAccessException -> 0x00c8 }
                                                r2.append(r3)     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.String r2 = r2.toString()     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.util.LogUtil.m15952c(r1, r2)     // Catch:{ CameraAccessException -> 0x00c8 }
                                                goto L_0x0071
                                            L_0x0061:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController$FlashMode r2 = com.meizu.media.camera.camcontroller.CameraController.FlashMode.FLASH_MODE_OFF     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController.FlashMode unused = r1.f8341aF = r2     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.util.ac$a r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.String r2 = "setFlashMode mFlashMode OFF"
                                                com.meizu.media.camera.util.LogUtil.m15952c(r1, r2)     // Catch:{ CameraAccessException -> 0x00c8 }
                                            L_0x0071:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CaptureRequest$Builder r1 = r1.f8323N     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 == 0) goto L_0x00c7
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.f r1 = r1.f8311B     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 == 0) goto L_0x00c7
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CameraCharacteristics r1 = r1.f8314E     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 != 0) goto L_0x008a
                                                goto L_0x00c7
                                            L_0x008a:
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CameraCharacteristics r1 = r1.f8314E     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CameraCharacteristics$Key r2 = android.hardware.camera2.CameraCharacteristics.FLASH_INFO_AVAILABLE     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.Object r1 = r1.get(r2)     // Catch:{ CameraAccessException -> 0x00c8 }
                                                java.lang.Boolean r1 = (java.lang.Boolean) r1     // Catch:{ CameraAccessException -> 0x00c8 }
                                                boolean r1 = r1.booleanValue()     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 == 0) goto L_0x00e8
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r2 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                android.hardware.camera2.CaptureRequest$Builder r2 = r2.f8323N     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController$FlashMode r3 = r10     // Catch:{ CameraAccessException -> 0x00c8 }
                                                r1.m9064a((android.hardware.camera2.CaptureRequest.Builder) r2, (com.meizu.media.camera.camcontroller.CameraController.FlashMode) r3, (boolean) r0)     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController$FlashMode r2 = r10     // Catch:{ CameraAccessException -> 0x00c8 }
                                                com.meizu.media.camera.camcontroller.CameraController.FlashMode unused = r1.f8341aF = r2     // Catch:{ CameraAccessException -> 0x00c8 }
                                                boolean[] r1 = r11     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 == 0) goto L_0x00e8
                                                boolean[] r1 = r11     // Catch:{ CameraAccessException -> 0x00c8 }
                                                int r1 = r1.length     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r1 <= 0) goto L_0x00e8
                                                boolean[] r1 = r11     // Catch:{ CameraAccessException -> 0x00c8 }
                                                boolean r0 = r1[r0]     // Catch:{ CameraAccessException -> 0x00c8 }
                                                if (r0 == 0) goto L_0x00e8
                                                com.meizu.media.camera.camcontroller.CameraControllerV2 r0 = com.meizu.media.camera.camcontroller.CameraControllerV2.this     // Catch:{ CameraAccessException -> 0x00c8 }
                                                r0.m9125au()     // Catch:{ CameraAccessException -> 0x00c8 }
                                                goto L_0x00e8
                                            L_0x00c7:
                                                return
                                            L_0x00c8:
                                                r0 = move-exception
                                                com.meizu.media.camera.util.ac$a r1 = com.meizu.media.camera.camcontroller.CameraControllerV2.f8305s
                                                java.lang.StringBuilder r2 = new java.lang.StringBuilder
                                                r2.<init>()
                                                java.lang.String r3 = "setFlashMode error:"
                                                r2.append(r3)
                                                java.lang.String r3 = r0.getMessage()
                                                r2.append(r3)
                                                java.lang.String r2 = r2.toString()
                                                com.meizu.media.camera.util.LogUtil.m15952c(r1, r2)
                                                r0.printStackTrace()
                                            L_0x00e8:
                                                return
                                            */
                                            throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.C188714.run():void");
                                        }
                                    });
                                    if (zArr != null && zArr.length > 0 && zArr[0]) {
                                        AsyncTaskEx.f13744r.mo22622a("setFlashMode");
                                    }
                                }
                            }

                            /* renamed from: a */
                            public boolean mo19482a(String str) {
                                return this.f8373ao;
                            }

                            /* renamed from: b */
                            public void mo19494b(String str, String str2, boolean... zArr) {
                                Class[] clsArr = {String.class, String.class, boolean[].class};
                                if (!PatchProxy.proxy(new Object[]{str, str2, zArr}, this, f8303o, false, 3016, clsArr, Void.TYPE).isSupported) {
                                    if ("zsl".equals(str) || "zsd".equals(str)) {
                                        this.f8373ao = "on".equals(str2);
                                    }
                                }
                            }

                            /* renamed from: b */
                            public void mo19493b(String str) {
                                if (!PatchProxy.proxy(new Object[]{str}, this, f8303o, false, 3017, new Class[]{String.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "setCustomDeviceMark = " + str);
                                    this.f8382ax = str;
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: b */
                            public void m9138b(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3018, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "apply zsl, mCurrentZslStatus = " + this.f8373ao);
                                    builder.set(m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), Boolean.valueOf(this.f8373ao));
                                }
                            }

                            /* renamed from: s */
                            public int mo19536s() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3019, new Class[0], Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                if (this.f8329T != null) {
                                    return this.f8329T.mo8618a();
                                }
                                return 0;
                            }

                            /* renamed from: u */
                            public int mo19538u() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3020, new Class[0], Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                int indexOf = mo19540w().indexOf(Integer.valueOf(this.f8330U));
                                LogUtil.C2630a aVar = f8305s;
                                LogUtil.m15942a(aVar, "getZoomIndex index:" + indexOf);
                                return indexOf;
                            }

                            /* renamed from: v */
                            public int mo19539v() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, DownloadMsgHandler.LOAD_STATUS_DOWNLOAD_ANSWER, new Class[0], Integer.TYPE);
                                return proxy.isSupported ? ((Integer) proxy.result).intValue() : mo19540w().indexOf(Integer.valueOf(m9149c(new boolean[0])));
                            }

                            /* access modifiers changed from: private */
                            /* JADX WARNING: Code restructure failed: missing block: B:41:0x009f, code lost:
                                if (r8 != false) goto L_0x00ae;
                             */
                            /* JADX WARNING: Code restructure failed: missing block: B:44:0x00ac, code lost:
                                if (r8 == false) goto L_0x00b5;
                             */
                            /* JADX WARNING: Code restructure failed: missing block: B:45:0x00ae, code lost:
                                r9.f8315F.mo19729b("getMaxZoom");
                             */
                            /* JADX WARNING: Code restructure failed: missing block: B:46:0x00b5, code lost:
                                com.meizu.media.camera.util.LogUtil.m15942a(f8305s, "getMaxZoom end");
                             */
                            /* JADX WARNING: Code restructure failed: missing block: B:47:0x00bc, code lost:
                                return 1;
                             */
                            /* renamed from: c */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public int m9149c(boolean... r10) {
                                /*
                                    r9 = this;
                                    r0 = 1
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    r8 = 0
                                    r1[r8] = r10
                                    com.meizu.savior.ChangeQuickRedirect r3 = f8303o
                                    java.lang.Class[] r6 = new java.lang.Class[r0]
                                    java.lang.Class<boolean[]> r2 = boolean[].class
                                    r6[r8] = r2
                                    java.lang.Class r7 = java.lang.Integer.TYPE
                                    r4 = 0
                                    r5 = 3022(0xbce, float:4.235E-42)
                                    r2 = r9
                                    com.meizu.savior.PatchProxyResult r1 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                    boolean r2 = r1.isSupported
                                    if (r2 == 0) goto L_0x0025
                                    java.lang.Object r10 = r1.result
                                    java.lang.Integer r10 = (java.lang.Integer) r10
                                    int r10 = r10.intValue()
                                    return r10
                                L_0x0025:
                                    if (r10 == 0) goto L_0x0030
                                    if (r10 == 0) goto L_0x0031
                                    int r1 = r10.length
                                    if (r1 <= 0) goto L_0x0031
                                    boolean r10 = r10[r8]
                                    if (r10 == 0) goto L_0x0031
                                L_0x0030:
                                    r8 = 1
                                L_0x0031:
                                    if (r8 == 0) goto L_0x0044
                                    com.meizu.media.camera.camcontroller.c r10 = r9.f8315F     // Catch:{ RuntimeException -> 0x0040 }
                                    java.lang.String r1 = "getMaxZoom"
                                    r10.mo19728a(r1)     // Catch:{ RuntimeException -> 0x0040 }
                                    goto L_0x0044
                                L_0x003b:
                                    r10 = move-exception
                                    goto L_0x00bd
                                L_0x003e:
                                    r10 = move-exception
                                    goto L_0x00a2
                                L_0x0040:
                                    r10 = move-exception
                                    com.meizu.media.camera.util.DeviceUtil.m16195a((java.lang.RuntimeException) r10)     // Catch:{ InterruptedException -> 0x003e }
                                L_0x0044:
                                    android.hardware.camera2.CameraCharacteristics r10 = r9.f8314E     // Catch:{ InterruptedException -> 0x003e }
                                    if (r10 != 0) goto L_0x0060
                                    com.meizu.media.camera.util.ac$a r10 = f8305s     // Catch:{ InterruptedException -> 0x003e }
                                    java.lang.String r1 = "getMaxZoom mCameraCharacteristics == null"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r10, (java.lang.String) r1)     // Catch:{ InterruptedException -> 0x003e }
                                    if (r8 == 0) goto L_0x0058
                                    com.meizu.media.camera.camcontroller.c r10 = r9.f8315F
                                    java.lang.String r1 = "getMaxZoom"
                                    r10.mo19729b(r1)
                                L_0x0058:
                                    com.meizu.media.camera.util.ac$a r10 = f8305s
                                    java.lang.String r1 = "getMaxZoom end"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r10, (java.lang.String) r1)
                                    return r0
                                L_0x0060:
                                    int r10 = com.meizu.media.camera.util.DeviceHelper.f13930bd     // Catch:{ InterruptedException -> 0x003e }
                                    r1 = -1
                                    if (r10 == r1) goto L_0x006b
                                    int r10 = com.meizu.media.camera.util.DeviceHelper.f13930bd     // Catch:{ InterruptedException -> 0x003e }
                                    int r10 = r10 * 100
                                    float r10 = (float) r10     // Catch:{ InterruptedException -> 0x003e }
                                    goto L_0x007d
                                L_0x006b:
                                    android.hardware.camera2.CameraCharacteristics r10 = r9.f8314E     // Catch:{ InterruptedException -> 0x003e }
                                    android.hardware.camera2.CameraCharacteristics$Key r1 = android.hardware.camera2.CameraCharacteristics.SCALER_AVAILABLE_MAX_DIGITAL_ZOOM     // Catch:{ InterruptedException -> 0x003e }
                                    java.lang.Object r10 = r10.get(r1)     // Catch:{ InterruptedException -> 0x003e }
                                    java.lang.Float r10 = (java.lang.Float) r10     // Catch:{ InterruptedException -> 0x003e }
                                    float r10 = r10.floatValue()     // Catch:{ InterruptedException -> 0x003e }
                                    r1 = 1120403456(0x42c80000, float:100.0)
                                    float r10 = r10 * r1
                                L_0x007d:
                                    r1 = 1065353216(0x3f800000, float:1.0)
                                    float r1 = r10 % r1
                                    r2 = 0
                                    int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
                                    if (r1 != 0) goto L_0x0098
                                    int r10 = (int) r10
                                    if (r8 == 0) goto L_0x0090
                                    com.meizu.media.camera.camcontroller.c r0 = r9.f8315F
                                    java.lang.String r1 = "getMaxZoom"
                                    r0.mo19729b(r1)
                                L_0x0090:
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.String r1 = "getMaxZoom end"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                    return r10
                                L_0x0098:
                                    com.meizu.media.camera.util.ac$a r10 = f8305s     // Catch:{ InterruptedException -> 0x003e }
                                    java.lang.String r1 = "getMaxZoom error"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r10, (java.lang.String) r1)     // Catch:{ InterruptedException -> 0x003e }
                                    if (r8 == 0) goto L_0x00b5
                                    goto L_0x00ae
                                L_0x00a2:
                                    com.meizu.media.camera.util.ac$a r1 = f8305s     // Catch:{ all -> 0x003b }
                                    java.lang.String r2 = "getMaxZoom"
                                    com.meizu.media.camera.util.LogUtil.m15950b(r1, r2, r10)     // Catch:{ all -> 0x003b }
                                    r10.printStackTrace()     // Catch:{ all -> 0x003b }
                                    if (r8 == 0) goto L_0x00b5
                                L_0x00ae:
                                    com.meizu.media.camera.camcontroller.c r10 = r9.f8315F
                                    java.lang.String r1 = "getMaxZoom"
                                    r10.mo19729b(r1)
                                L_0x00b5:
                                    com.meizu.media.camera.util.ac$a r10 = f8305s
                                    java.lang.String r1 = "getMaxZoom end"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r10, (java.lang.String) r1)
                                    return r0
                                L_0x00bd:
                                    if (r8 == 0) goto L_0x00c6
                                    com.meizu.media.camera.camcontroller.c r0 = r9.f8315F
                                    java.lang.String r1 = "getMaxZoom"
                                    r0.mo19729b(r1)
                                L_0x00c6:
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.String r1 = "getMaxZoom end"
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                    throw r10
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9149c(boolean[]):int");
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: aq */
                            public void m9121aq() {
                                if (PatchProxy.proxy(new Object[0], this, f8303o, false, 3023, new Class[0], Void.TYPE).isSupported || this.f8314E == null) {
                                    return;
                                }
                                if (!DeviceHelper.f13851aD || !CameraModeType.m10983m(CameraModeType.ModeType.AUTO) || this.f8311B == null || this.f8311B.mo19733b() == 1 || (DeviceHelper.f14027ds && (!DeviceHelper.f14027ds || this.f8311B.mo19733b() == DeviceHelper.f14029du))) {
                                    Rect rect = (Rect) this.f8314E.get(CameraCharacteristics.SENSOR_INFO_ACTIVE_ARRAY_SIZE);
                                    this.f8332W = new Rect(0, 0, rect.width(), rect.height());
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15952c(aVar, "initMaxZoomRect: " + this.f8332W);
                                    return;
                                }
                                this.f8332W = new Rect(0, 0, DeviceHelper.f13947bu, DeviceHelper.f13948bv);
                                LogUtil.C2630a aVar2 = f8305s;
                                LogUtil.m15952c(aVar2, "initMaxZoomRect: " + this.f8332W);
                            }

                            /* renamed from: w */
                            public List<Integer> mo19540w() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3024, new Class[0], List.class);
                                if (proxy.isSupported) {
                                    return (List) proxy.result;
                                }
                                ArrayList arrayList = new ArrayList();
                                int c = m9149c(new boolean[0]);
                                for (int i = 100; i <= c; i++) {
                                    arrayList.add(Integer.valueOf(i));
                                }
                                return arrayList;
                            }

                            /* renamed from: c */
                            public void mo19499c(int i) {
                                Object[] objArr = {new Integer(i)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3026, new Class[]{Integer.TYPE}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "updateSpecialZoomValue:" + i);
                                    this.f8331V = i;
                                }
                            }

                            /* renamed from: c */
                            public void mo19501c(final int i, final boolean... zArr) {
                                Object[] objArr = {new Integer(i), zArr};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3027, new Class[]{Integer.TYPE, boolean[].class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "setZoom zoomIndex:" + i);
                                    if (this.f8323N != null && this.f8311B != null && this.f8314E != null && this.f8325P != null) {
                                        AsyncTaskEx.f13744r.mo22621a("setZoom", new Runnable() {

                                            /* renamed from: a */
                                            public static ChangeQuickRedirect f8431a;

                                            public void run() {
                                                if (!PatchProxy.proxy(new Object[0], this, f8431a, false, 3135, new Class[0], Void.TYPE).isSupported) {
                                                    try {
                                                        if (CameraControllerV2.this.f8323N != null && CameraControllerV2.this.f8311B != null) {
                                                            if (CameraControllerV2.this.f8314E != null) {
                                                                if (CameraControllerV2.this.f8332W == null) {
                                                                    CameraControllerV2.this.m9121aq();
                                                                }
                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "setZoom sensor active size:" + CameraControllerV2.this.f8332W.flattenToString());
                                                                int i = i;
                                                                if (i >= CameraControllerV2.this.mo19540w().size()) {
                                                                    i = CameraControllerV2.this.mo19540w().size() - 1;
                                                                }
                                                                int intValue = CameraControllerV2.this.mo19540w().get(i).intValue();
                                                                int a = CameraControllerV2.this.m9149c(false);
                                                                if (intValue > a) {
                                                                    intValue = a;
                                                                }
                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "setZoom zoomValue:" + intValue);
                                                                int unused = CameraControllerV2.this.f8330U = intValue;
                                                                if (DeviceHelper.f14019dk == DeviceHelper.EIS_SUPPORT_SCENE.ALL && CameraModeType.m10983m(CameraModeType.ModeType.VIDEO) && CameraControllerV2.this.f8311B.mo19733b() == DeviceHelper.f13949bw) {
                                                                    intValue -= 200;
                                                                }
                                                                if (intValue < 100) {
                                                                    intValue = 100;
                                                                }
                                                                float f = ((float) intValue) / 100.0f;
                                                                int width = (int) (((float) CameraControllerV2.this.f8332W.width()) / f);
                                                                int height = (int) (((float) CameraControllerV2.this.f8332W.height()) / f);
                                                                int width2 = (CameraControllerV2.this.f8332W.width() - width) / 2;
                                                                int height2 = (CameraControllerV2.this.f8332W.height() - height) / 2;
                                                                Rect rect = new Rect(CameraControllerV2.this.f8332W.left + width2, CameraControllerV2.this.f8332W.top + height2, CameraControllerV2.this.f8332W.left + width2 + width, CameraControllerV2.this.f8332W.top + height2 + height);
                                                                CameraControllerV2.this.f8323N.set(CaptureRequest.SCALER_CROP_REGION, rect);
                                                                LogUtil.m15942a(CameraControllerV2.f8305s, "setZoom zoom:" + rect.flattenToString());
                                                                if (f == 1.0f) {
                                                                    Rect unused2 = CameraControllerV2.this.f8391bh = rect;
                                                                }
                                                                Rect unused3 = CameraControllerV2.this.f8392bi = rect;
                                                                if (zArr != null && zArr.length > 0 && zArr[0]) {
                                                                    CameraControllerV2.this.m9125au();
                                                                    CameraControllerV2.this.mo19574g(false);
                                                                }
                                                            }
                                                        }
                                                    } catch (CameraAccessException e) {
                                                        e.printStackTrace();
                                                    }
                                                }
                                            }
                                        });
                                        AsyncTaskEx.f13744r.mo22622a("setZoom");
                                    }
                                }
                            }

                            /* renamed from: x */
                            public boolean mo19541x() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3028, new Class[0], Boolean.TYPE);
                                if (proxy.isSupported) {
                                    return ((Boolean) proxy.result).booleanValue();
                                }
                                return m9149c(true) > 1;
                            }

                            /* renamed from: y */
                            public void mo19542y() {
                                Object obj;
                                Object obj2;
                                Object obj3;
                                boolean z = false;
                                if (!PatchProxy.proxy(new Object[0], this, f8303o, false, 3029, new Class[0], Void.TYPE).isSupported) {
                                    try {
                                        this.f8315F.mo19728a("initializeCapabilities");
                                        if (this.f8311B != null) {
                                            if (this.f8314E != null) {
                                                this.f8329T = CameraCapabilitiesFactory.m561a(this.f8314E);
                                                this.f8360ab = this.f8329T.mo8619a(CameraCapabilities.Feature.FOCUS_AREA);
                                                this.f8361ac = this.f8329T.mo8619a(CameraCapabilities.Feature.METERING_AREA);
                                                this.f8362ad = true;
                                                this.f8363ae = true;
                                                this.f8364af = this.f8329T.mo8620a(CameraCapabilities.FocusMode.CONTINUOUS_PICTURE);
                                                this.f8367ai = (Float) this.f8314E.get(CameraCharacteristics.LENS_INFO_MINIMUM_FOCUS_DISTANCE);
                                                m9121aq();
                                                Range range = (Range) this.f8314E.get(CameraCharacteristics.CONTROL_AE_COMPENSATION_RANGE);
                                                this.f8376ar = range != null ? ((Integer) range.getUpper()).intValue() : 0;
                                                this.f8377as = range != null ? ((Integer) range.getLower()).intValue() : 0;
                                                Rational rational = (Rational) this.f8314E.get(CameraCharacteristics.CONTROL_AE_COMPENSATION_STEP);
                                                this.f8378at = rational != null ? rational.floatValue() : 0.0f;
                                                if (DeviceHelper.f13890aq && DeviceHelper.f13891ar == DeviceHelper.FRONT_HDR_HAL_CONFIG.CAMERA_CHARACTERISTICS && this.f8365ag == null && this.f8311B.mo19733b() == 1) {
                                                    try {
                                                        obj3 = this.f8314E.get(mo19561a(Contants.CameraCharacteristicsKey.FEATURE_FRONT_HDR));
                                                    } catch (IllegalArgumentException e) {
                                                        LogUtil.C2630a aVar = f8305s;
                                                        LogUtil.m15949b(aVar, "initializeCapabilities error:" + e.getMessage());
                                                        obj3 = null;
                                                    }
                                                    if (obj3 != null) {
                                                        this.f8365ag = Boolean.valueOf(((Integer) obj3).intValue() == 1);
                                                    } else {
                                                        this.f8365ag = false;
                                                    }
                                                    DeviceHelper.f13890aq = this.f8365ag.booleanValue();
                                                    LogUtil.C2630a aVar2 = f8305s;
                                                    LogUtil.m15952c(aVar2, "mFrontHdrSupported:" + this.f8365ag);
                                                }
                                                if (!(DeviceHelper.f13955cB == -1 && DeviceHelper.f13956cC == -1)) {
                                                    try {
                                                        obj2 = this.f8314E.get(mo19561a(Contants.CameraCharacteristicsKey.FEATURE_HFR_TABLE));
                                                    } catch (IllegalArgumentException e2) {
                                                        LogUtil.C2630a aVar3 = f8305s;
                                                        LogUtil.m15949b(aVar3, "getHfrTable error:" + e2.getMessage());
                                                        obj2 = null;
                                                    }
                                                    if (obj2 != null) {
                                                        this.f8366ah = (int[]) obj2;
                                                    }
                                                }
                                                if (DeviceHelper.f14027ds && DeviceHelper.f14034dz && this.f8311B.mo19733b() == DeviceHelper.f14029du) {
                                                    try {
                                                        obj = this.f8314E.get(mo19561a(Contants.CameraCharacteristicsKey.FEATURE_WIDE_ANGLE_UNDISTORT));
                                                    } catch (IllegalArgumentException e3) {
                                                        LogUtil.C2630a aVar4 = f8305s;
                                                        LogUtil.m15949b(aVar4, "getUndistort error:" + e3.getMessage());
                                                        obj = null;
                                                    }
                                                    if (obj != null) {
                                                        if (((Integer) obj).intValue() == 1) {
                                                            z = true;
                                                        }
                                                        this.f8368aj = z;
                                                    }
                                                    DeviceHelper.f14034dz = this.f8368aj;
                                                    LogUtil.C2630a aVar5 = f8305s;
                                                    LogUtil.m15952c(aVar5, "mWideAngleUndistortSupported:" + this.f8368aj);
                                                }
                                                this.f8315F.mo19729b("initializeCapabilities");
                                                return;
                                            }
                                        }
                                        this.f8315F.mo19729b("initializeCapabilities");
                                    } catch (InterruptedException e4) {
                                        e4.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("initializeCapabilities");
                                        throw th;
                                    }
                                }
                            }

                            /* renamed from: a */
                            public void mo19476a(boolean z, List<Rect> list) {
                                int i = 0;
                                if (!PatchProxy.proxy(new Object[]{new Byte(z ? (byte) 1 : 0), list}, this, f8303o, false, 3030, new Class[]{Boolean.TYPE, List.class}, Void.TYPE).isSupported) {
                                    if (list != null) {
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15942a(aVar, "setFocusAndMeteringAreas isMeteringASreas:" + z);
                                        this.f8359aa = z;
                                        if (this.f8359aa) {
                                            MeteringRectangle[] meteringRectangleArr = new MeteringRectangle[list.size()];
                                            while (i < list.size()) {
                                                meteringRectangleArr[i] = new MeteringRectangle(list.get(i), 1);
                                                i++;
                                            }
                                            this.f8335Z = meteringRectangleArr;
                                            if (this.f8311B != null && this.f8311B.f9122a == 1) {
                                                AsyncTaskEx.f13744r.mo22621a("setFocusAndMeteringAreas", new Runnable() {

                                                    /* renamed from: a */
                                                    public static ChangeQuickRedirect f8435a;

                                                    public void run() {
                                                        if (!PatchProxy.proxy(new Object[0], this, f8435a, false, 3136, new Class[0], Void.TYPE).isSupported) {
                                                            if (CameraControllerV2.this.f8323N == null || CameraControllerV2.this.f8314E == null || CameraControllerV2.this.f8311B == null) {
                                                                LogUtil.m15952c(CameraControllerV2.f8305s, "setFocusAndMeteringAreas  something is NULL");
                                                                return;
                                                            }
                                                            try {
                                                                CameraControllerV2.this.f8315F.mo19728a("setFocusAndMeteringAreas");
                                                                if (CameraControllerV2.this.f8311B != null && CameraControllerV2.this.f8311B.f9122a == 1) {
                                                                    if (!(CameraControllerV2.this.f8323N == null || CameraControllerV2.this.f8311B == null)) {
                                                                        if (CameraControllerV2.this.f8314E != null) {
                                                                            CameraControllerV2.this.mo19573f(CameraControllerV2.this.f8344aI);
                                                                        }
                                                                    }
                                                                    LogUtil.m15952c(CameraControllerV2.f8305s, "setFocusAndMeteringAreas  something is NULL");
                                                                    CameraControllerV2.this.f8315F.mo19729b("setFocusAndMeteringAreas");
                                                                    return;
                                                                }
                                                            } catch (InterruptedException e) {
                                                                e.printStackTrace();
                                                            } catch (Throwable th) {
                                                                CameraControllerV2.this.f8315F.mo19729b("setFocusAndMeteringAreas");
                                                                throw th;
                                                            }
                                                            CameraControllerV2.this.f8315F.mo19729b("setFocusAndMeteringAreas");
                                                        }
                                                    }
                                                });
                                                AsyncTaskEx.f13744r.mo22622a("setFocusAndMeteringAreas");
                                                return;
                                            }
                                            return;
                                        }
                                        MeteringRectangle[] meteringRectangleArr2 = new MeteringRectangle[list.size()];
                                        while (i < list.size()) {
                                            meteringRectangleArr2[i] = new MeteringRectangle(list.get(i), 1);
                                            i++;
                                        }
                                        this.f8334Y = meteringRectangleArr2;
                                        return;
                                    }
                                    if (z) {
                                        this.f8335Z = f8310z;
                                    } else {
                                        this.f8334Y = f8310z;
                                    }
                                    this.f8359aa = false;
                                }
                            }

                            /* renamed from: ai */
                            public Rect mo19567ai() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3032, new Class[0], Rect.class);
                                if (proxy.isSupported) {
                                    return (Rect) proxy.result;
                                }
                                if (this.f8391bh == null) {
                                    this.f8391bh = (Rect) this.f8323N.get(CaptureRequest.SCALER_CROP_REGION);
                                }
                                return this.f8391bh;
                            }

                            /* renamed from: aj */
                            public Rect mo19568aj() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3033, new Class[0], Rect.class);
                                if (proxy.isSupported) {
                                    return (Rect) proxy.result;
                                }
                                if (this.f8392bi == null) {
                                    this.f8392bi = (Rect) this.f8323N.get(CaptureRequest.SCALER_CROP_REGION);
                                }
                                return this.f8392bi;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: g */
                            public void m9179g(int i) {
                                Object[] objArr = {new Integer(i)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3035, new Class[]{Integer.TYPE}, Void.TYPE).isSupported) {
                                    switch (i) {
                                        case 0:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_INACTIVE clearFocus");
                                            return;
                                        case 1:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_PASSIVE_SCAN onFocusStarted");
                                            return;
                                        case 2:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_PASSIVE_FOCUSED onFocusSucceeded");
                                            return;
                                        case 3:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_ACTIVE_SCAN onFocusStarted");
                                            return;
                                        case 4:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_FOCUSED_LOCKED onFocusSucceeded");
                                            return;
                                        case 5:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_NOT_FOCUSED_LOCKED onFocusFailed");
                                            return;
                                        case 6:
                                            LogUtil.m15952c(f8305s, "FocusStatus CONTROL_AF_STATE_PASSIVE_UNFOCUSED onFocusFailed");
                                            return;
                                        default:
                                            return;
                                    }
                                }
                            }

                            /* renamed from: h */
                            public void mo19517h(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 3036, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "autoFocus start mFocusing：" + this.f8371am);
                                    final UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                    final Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    final C189017 r1 = new C1934g() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8437a;

                                        /* renamed from: b */
                                        int f8438b;

                                        /* renamed from: c */
                                        boolean f8439c;

                                        /* renamed from: a */
                                        public void mo19584a(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull CaptureResult captureResult) {
                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, captureResult}, this, f8437a, false, 3137, new Class[]{CameraCaptureSession.class, CaptureRequest.class, CaptureResult.class}, Void.TYPE).isSupported) {
                                                Integer num = (Integer) captureResult.get(CaptureResult.CONTROL_AF_STATE);
                                                Integer num2 = (Integer) captureResult.get(CaptureResult.CONTROL_AE_STATE);
                                                if (num != null) {
                                                    if (this.f8438b != num.intValue()) {
                                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                        LogUtil.m15942a(al, "STATE_WAITING_TOUCH_FOCUS  afState:" + CameraControllerV2.this.m9136b(num) + " aeState:" + CameraControllerV2.this.m9056a(num2) + ", mIsAutoFocusStarted:" + this.f8439c);
                                                        CameraControllerV2.this.m9179g(num.intValue());
                                                        if (3 == num.intValue() || 1 == num.intValue()) {
                                                            this.f8439c = true;
                                                        }
                                                        if ((4 == num.intValue() || 5 == num.intValue() || 2 == num.intValue() || 6 == num.intValue()) && this.f8439c) {
                                                            if (CameraControllerV2.this.f8371am) {
                                                                CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_AUTO_FOCUS_CALLBACK, true);
                                                                CameraControllerV2.this.f8281e.mo19061g();
                                                                CameraControllerV2.this.f8401br.mo19641a((C1934g) null);
                                                            }
                                                            boolean unused = CameraControllerV2.this.f8371am = false;
                                                            boolean unused2 = CameraControllerV2.this.f8372an = true;
                                                        }
                                                    }
                                                    this.f8438b = num.intValue();
                                                }
                                            }
                                        }

                                        public void onCaptureFailed(CameraCaptureSession cameraCaptureSession, CaptureRequest captureRequest, CaptureFailure captureFailure) {
                                            if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, captureFailure}, this, f8437a, false, 3138, new Class[]{CameraCaptureSession.class, CaptureRequest.class, CaptureFailure.class}, Void.TYPE).isSupported) {
                                                super.onCaptureFailed(cameraCaptureSession, captureRequest, captureFailure);
                                                LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                StringBuilder sb = new StringBuilder();
                                                sb.append("auto focus onCaptureFailed Reason:");
                                                sb.append(captureFailure != null ? Integer.valueOf(captureFailure.getReason()) : null);
                                                LogUtil.m15952c(al, sb.toString());
                                                boolean unused = CameraControllerV2.this.f8371am = false;
                                                boolean unused2 = CameraControllerV2.this.f8372an = false;
                                                if (CameraControllerV2.this.f8408w == 7) {
                                                    CameraControllerV2.this.mo19572e(0);
                                                }
                                            }
                                        }
                                    };
                                    AsyncTaskEx.f13744r.mo22621a("autoFocus", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8443a;

                                        public void run() {
                                            CaptureRequest.Builder builder;
                                            if (!PatchProxy.proxy(new Object[0], this, f8443a, false, 3139, new Class[0], Void.TYPE).isSupported) {
                                                try {
                                                    if (CameraControllerV2.this.f8311B == null) {
                                                        CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_NULL_CAMERA, new Object[0]);
                                                        return;
                                                    }
                                                    if (CameraModeType.m10955c()) {
                                                        if (CameraControllerV2.this.f8319J != null) {
                                                            if (CameraControllerV2.this.f8320K != null) {
                                                                builder = ((CameraDevice) CameraControllerV2.this.f8311B.f9124c).createCaptureRequest(3);
                                                                builder.addTarget(CameraControllerV2.this.f8319J);
                                                                builder.addTarget(CameraControllerV2.this.f8320K);
                                                            }
                                                        }
                                                        LogUtil.m15949b(CameraControllerV2.f8305s, "CurrentMode is VideoMode ,but preview has not been started, no to do autofocus");
                                                        CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_AUTO_FOCUS_CALLBACK, false);
                                                        return;
                                                    } else if (CameraControllerV2.this.f8383ay == null) {
                                                        LogUtil.m15949b(CameraControllerV2.f8305s, "mPreviewSurface is null ,no to do autofocus");
                                                        CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_AUTO_FOCUS_CALLBACK, false);
                                                        return;
                                                    } else {
                                                        builder = ((CameraDevice) CameraControllerV2.this.f8311B.f9124c).createCaptureRequest(1);
                                                        builder.addTarget(CameraControllerV2.this.f8383ay);
                                                    }
                                                    if (CameraControllerV2.this.f8325P instanceof CameraConstrainedHighSpeedCaptureSession) {
                                                        builder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE, new Range(Integer.valueOf(CameraControllerV2.this.f8333X), Integer.valueOf(CameraControllerV2.this.f8333X)));
                                                    }
                                                    int unused = CameraControllerV2.this.f8344aI = 1;
                                                    CameraControllerV2.this.m9171e(builder);
                                                    CameraControllerV2.this.m9064a(builder, CameraControllerV2.this.f8341aF, false);
                                                    CameraControllerV2.this.f8281e.mo19044a(uuid, requestCode);
                                                    boolean unused2 = CameraControllerV2.this.f8371am = true;
                                                    boolean unused3 = CameraControllerV2.this.f8372an = false;
                                                    CameraControllerV2.this.f8401br.mo19641a(r1);
                                                    CameraControllerV2.this.mo19572e(7);
                                                    if (CameraControllerV2.this.f8323N.get(CaptureRequest.SENSOR_EXPOSURE_TIME) == null) {
                                                        CaptureRequest.Builder unused4 = CameraControllerV2.this.m9036a(builder, 0);
                                                    } else {
                                                        CaptureRequest.Builder unused5 = CameraControllerV2.this.m9036a(builder, ((Long) CameraControllerV2.this.f8323N.get(CaptureRequest.SENSOR_EXPOSURE_TIME)).longValue());
                                                    }
                                                    if (CameraControllerV2.this.f8322M || CameraControllerV2.this.f8321L) {
                                                        builder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE, new Range(Integer.valueOf(CameraControllerV2.this.f8333X), Integer.valueOf(CameraControllerV2.this.f8333X)));
                                                    }
                                                    CameraControllerV2.this.m9208o(builder);
                                                    CameraControllerV2.this.mo19573f(CameraControllerV2.this.f8344aI);
                                                    CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_OK, new Object[0]);
                                                } catch (CameraAccessException e) {
                                                    LogUtil.m15950b(CameraControllerV2.f8305s, "Failed to auto focus. ", e);
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("autoFocus");
                                }
                            }

                            /* renamed from: i */
                            public void mo19519i(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 3037, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("cancelAutoFocus", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8448a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8448a, false, 3140, new Class[0], Void.TYPE).isSupported) {
                                                try {
                                                    if (CameraControllerV2.this.f8323N != null && CameraControllerV2.this.f8311B != null) {
                                                        if (CameraControllerV2.this.f8325P != null) {
                                                            if (CameraControllerV2.this.f8371am) {
                                                                CameraControllerV2.this.f8325P.stopRepeating();
                                                                CameraControllerV2.this.f8401br.mo19641a((C1934g) null);
                                                                CameraControllerV2.this.mo19572e(0);
                                                                if (CameraControllerV2.this.f8311B.mo19733b() == 1) {
                                                                    int unused = CameraControllerV2.this.f8344aI = 0;
                                                                } else {
                                                                    int unused2 = CameraControllerV2.this.f8344aI = CameraModeType.m10955c() ? 3 : 4;
                                                                }
                                                                CameraControllerV2.this.mo19573f(CameraControllerV2.this.f8344aI);
                                                                boolean unused3 = CameraControllerV2.this.f8371am = false;
                                                                boolean unused4 = CameraControllerV2.this.f8372an = false;
                                                            }
                                                        }
                                                    }
                                                } catch (CameraAccessException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                    AsyncTaskEx.f13744r.mo22622a("cancelAutoFocus");
                                }
                            }

                            /* renamed from: g */
                            public void mo19574g(boolean z) {
                                Object[] objArr = {new Byte(z ? (byte) 1 : 0)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3038, new Class[]{Boolean.TYPE}, Void.TYPE).isSupported) {
                                    if (z) {
                                        try {
                                            this.f8315F.mo19728a("updateCameraBoundAndZoom");
                                        } catch (InterruptedException e) {
                                            e.printStackTrace();
                                            if (!z) {
                                                return;
                                            }
                                        } catch (Throwable th) {
                                            if (z) {
                                                this.f8315F.mo19729b("updateCameraBoundAndZoom");
                                            }
                                            throw th;
                                        }
                                    }
                                    if (this.f8314E != null) {
                                        Rect rect = (Rect) this.f8314E.get(CameraCharacteristics.SENSOR_INFO_ACTIVE_ARRAY_SIZE);
                                        if (!CameraModeType.m10983m(CameraModeType.ModeType.TOF) || this.f8311B == null || this.f8311B.mo19733b() == 1) {
                                            if (this.f8337aB != null) {
                                                this.f8337aB.mo19551a(rect, (float) this.f8330U);
                                            }
                                        } else if (this.f8337aB != null) {
                                            this.f8337aB.mo19551a(rect, 128.0f);
                                        }
                                        if (!z) {
                                            return;
                                        }
                                        this.f8315F.mo19729b("updateCameraBoundAndZoom");
                                    } else if (z) {
                                        this.f8315F.mo19729b("updateCameraBoundAndZoom");
                                    }
                                }
                            }

                            /* renamed from: c */
                            private void m9153c(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3039, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_MODE, 1);
                                    builder.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(this.f8344aI));
                                    builder.set(CaptureRequest.LENS_FOCUS_DISTANCE, this.f8323N.get(CaptureRequest.LENS_FOCUS_DISTANCE));
                                    m9062a(builder);
                                    m9190i(builder);
                                    m9176f(builder);
                                    m9165d(builder);
                                }
                            }

                            /* renamed from: d */
                            private void m9165d(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3040, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AWB_MODE, this.f8323N.get(CaptureRequest.CONTROL_AWB_MODE));
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: e */
                            public void m9171e(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3041, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AF_TRIGGER, 1);
                                    m9180g(builder);
                                    m9187h(builder);
                                    m9153c(builder);
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: ar */
                            public void m9122ar() {
                                int i;
                                if (!PatchProxy.proxy(new Object[0], this, f8303o, false, 3042, new Class[0], Void.TYPE).isSupported) {
                                    if (this.f8331V != -1) {
                                        i = mo19540w().indexOf(Integer.valueOf(this.f8331V));
                                    } else {
                                        i = mo19540w().indexOf(Integer.valueOf(this.f8330U));
                                    }
                                    LogUtil.m15942a(f8305s, "applyZoom zoomIndex:" + i);
                                    if (this.f8323N != null && this.f8311B != null && this.f8314E != null) {
                                        if (this.f8332W == null) {
                                            m9121aq();
                                        }
                                        LogUtil.m15942a(f8305s, "applyZoom sensor active size:" + this.f8332W.flattenToString());
                                        if (i >= mo19540w().size()) {
                                            i = mo19540w().size() - 1;
                                        }
                                        int intValue = mo19540w().get(i).intValue();
                                        int c = m9149c(false);
                                        if (intValue <= c) {
                                            c = intValue;
                                        }
                                        LogUtil.m15942a(f8305s, "applyZoom zoomValue:" + c);
                                        this.f8330U = c;
                                        this.f8331V = -1;
                                        if (DeviceHelper.f14019dk == DeviceHelper.EIS_SUPPORT_SCENE.ALL && CameraModeType.m10983m(CameraModeType.ModeType.VIDEO) && this.f8311B != null && this.f8311B.mo19733b() == DeviceHelper.f13949bw) {
                                            c -= 200;
                                        }
                                        if (c < 100) {
                                            c = 100;
                                        }
                                        float f = ((float) c) / 100.0f;
                                        int width = (int) (((float) this.f8332W.width()) / f);
                                        int height = (int) (((float) this.f8332W.height()) / f);
                                        int width2 = (this.f8332W.width() - width) / 2;
                                        int height2 = (this.f8332W.height() - height) / 2;
                                        Rect rect = new Rect(this.f8332W.left + width2, this.f8332W.top + height2, this.f8332W.left + width2 + width, this.f8332W.top + height2 + height);
                                        this.f8323N.set(CaptureRequest.SCALER_CROP_REGION, rect);
                                        LogUtil.m15942a(f8305s, "applyZoom zoom:" + rect.flattenToString());
                                        if (f == 1.0f) {
                                            this.f8391bh = rect;
                                        }
                                        this.f8392bi = rect;
                                    }
                                }
                            }

                            /* renamed from: f */
                            private void m9176f(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3043, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported && this.f8323N != null) {
                                    builder.set(CaptureRequest.SCALER_CROP_REGION, this.f8323N.get(CaptureRequest.SCALER_CROP_REGION));
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: g */
                            public void m9180g(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3044, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    if (this.f8344aI != 1 || this.f8334Y == null) {
                                        builder.set(CaptureRequest.CONTROL_AF_REGIONS, f8310z);
                                    } else {
                                        builder.set(CaptureRequest.CONTROL_AF_REGIONS, this.f8334Y);
                                    }
                                }
                            }

                            /* renamed from: a */
                            private void m9067a(CaptureRequest.Builder builder, boolean z) {
                                if (!PatchProxy.proxy(new Object[]{builder, new Byte(z ? (byte) 1 : 0)}, this, f8303o, false, 3045, new Class[]{CaptureRequest.Builder.class, Boolean.TYPE}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "applyAsd:" + z);
                                    builder.set(m9130b(Contants.CameraV2Key.AI_ASD_ENABLE), Integer.valueOf(z ? 1 : 0));
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: h */
                            public void m9187h(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3046, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    if ((this.f8344aI == 1 || (this.f8344aI == 0 && this.f8359aa)) && this.f8335Z != null) {
                                        builder.set(CaptureRequest.CONTROL_AE_REGIONS, this.f8335Z);
                                    } else {
                                        builder.set(CaptureRequest.CONTROL_AE_REGIONS, f8310z);
                                    }
                                }
                            }

                            /* renamed from: i */
                            private void m9190i(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3047, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, this.f8323N.get(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION));
                                }
                            }

                            /* renamed from: f */
                            public void mo19573f(int i) {
                                Object[] objArr = {new Integer(i)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3048, new Class[]{Integer.TYPE}, Void.TYPE).isSupported) {
                                    this.f8323N.set(CaptureRequest.CONTROL_AF_MODE, Integer.valueOf(i));
                                    m9180g(this.f8323N);
                                    m9187h(this.f8323N);
                                    try {
                                        m9125au();
                                    } catch (CameraAccessException | IllegalStateException e) {
                                        e.printStackTrace();
                                    }
                                }
                            }

                            /* renamed from: z */
                            public boolean mo19543z() {
                                return this.f8360ab;
                            }

                            /* renamed from: A */
                            public boolean mo19437A() {
                                return this.f8361ac;
                            }

                            /* renamed from: B */
                            public boolean mo19438B() {
                                return this.f8362ad;
                            }

                            /* renamed from: C */
                            public boolean mo19439C() {
                                return this.f8363ae;
                            }

                            /* renamed from: D */
                            public boolean mo19440D() {
                                return this.f8364af;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9071a(C1923a aVar, UUID uuid, Contants.CameraService.RequestCode requestCode, long j, Location location, int i, int i2, int i3, long j2, int i4, FaceBeautyData dVar, String str, boolean z, boolean z2, boolean z3, boolean z4, boolean z5, boolean z6, boolean z7, boolean z8, boolean z9, boolean z10) {
                                if (!PatchProxy.proxy(new Object[]{aVar, uuid, requestCode, new Long(j), location, new Integer(i), new Integer(i2), new Integer(i3), new Long(j2), new Integer(i4), dVar, str, new Byte(z ? (byte) 1 : 0), new Byte(z2 ? (byte) 1 : 0), new Byte(z3 ? (byte) 1 : 0), new Byte(z4 ? (byte) 1 : 0), new Byte(z5 ? (byte) 1 : 0), new Byte(z6 ? (byte) 1 : 0), new Byte(z7 ? (byte) 1 : 0), new Byte(z8 ? (byte) 1 : 0), new Byte(z9 ? (byte) 1 : 0), new Byte(z10 ? (byte) 1 : 0)}, this, f8303o, false, 3049, new Class[]{C1923a.class, UUID.class, Contants.CameraService.RequestCode.class, Long.TYPE, Location.class, Integer.TYPE, Integer.TYPE, Integer.TYPE, Long.TYPE, Integer.TYPE, FaceBeautyData.class, String.class, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE}, Void.TYPE).isSupported) {
                                    final long j3 = j;
                                    final UUID uuid2 = uuid;
                                    final Contants.CameraService.RequestCode requestCode2 = requestCode;
                                    final Location location2 = location;
                                    final int i5 = i3;
                                    final boolean z11 = z7;
                                    final int i6 = i;
                                    final int i7 = i2;
                                    final long j4 = j2;
                                    final int i8 = i4;
                                    final FaceBeautyData dVar2 = dVar;
                                    final String str2 = str;
                                    final boolean z12 = z;
                                    final boolean z13 = z2;
                                    final boolean z14 = z3;
                                    final boolean z15 = z4;
                                    final boolean z16 = z5;
                                    final boolean z17 = z6;
                                    final boolean z18 = z8;
                                    final boolean z19 = z9;
                                    final boolean z20 = z10;
                                    final C1923a aVar2 = aVar;
                                    AsyncTaskEx.f13744r.mo22621a("capture", new Runnable(this) {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8455a;

                                        /* renamed from: x */
                                        final /* synthetic */ CameraControllerV2 f8478x;

                                        {
                                            this.f8478x = r4;
                                        }

                                        public void run() {
                                            CaptureRequest.Builder builder;
                                            boolean z;
                                            if (!PatchProxy.proxy(new Object[0], this, f8455a, false, 3141, new Class[0], Void.TYPE).isSupported) {
                                                LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                LogUtil.m15942a(al, "takePicture shutterSpeed=" + j3);
                                                if (this.f8478x.f8311B == null || this.f8478x.f8311B.mo19730a() == null || this.f8478x.f8325P == null) {
                                                    LogUtil.m15956e(CameraControllerV2.f8305s, "Device or session may be closed, cancel capture.");
                                                    CameraController.f8275g = 0;
                                                    CameraController.f8274f = 0;
                                                    boolean unused = this.f8478x.f8370al = false;
                                                    this.f8478x.f8281e.mo19041a(CameraController.f8275g);
                                                    this.f8478x.f8281e.mo19045a(uuid2, requestCode2, Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_CANCEL, new Object[0]);
                                                    return;
                                                }
                                                try {
                                                    if (CameraModeType.m10983m(CameraModeType.ModeType.VIDEO)) {
                                                        builder = ((CameraDevice) this.f8478x.f8311B.mo19730a()).createCaptureRequest(4);
                                                    } else {
                                                        builder = ((CameraDevice) this.f8478x.f8311B.mo19730a()).createCaptureRequest(2);
                                                    }
                                                    if (this.f8478x.f8322M || this.f8478x.f8321L) {
                                                        builder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE, new Range(Integer.valueOf(this.f8478x.f8333X), Integer.valueOf(this.f8478x.f8333X)));
                                                    }
                                                    builder.addTarget(this.f8478x.f8316G.getSurface());
                                                    if (this.f8478x.f8383ay != null) {
                                                        builder.addTarget(this.f8478x.f8383ay);
                                                    }
                                                    CaptureRequest.Builder a = this.f8478x.m9036a(builder, j3);
                                                    a.set(CaptureRequest.JPEG_GPS_LOCATION, location2);
                                                    a.set(CaptureRequest.JPEG_ORIENTATION, Integer.valueOf(i5));
                                                    this.f8478x.m9207n(a);
                                                    this.f8478x.m9180g(a);
                                                    this.f8478x.m9187h(a);
                                                    if (j3 <= 100000000) {
                                                        this.f8478x.m9138b(a);
                                                    }
                                                    this.f8478x.m9064a(a, this.f8478x.f8341aF, false);
                                                    this.f8478x.m9063a(a, this.f8478x.f8354aS);
                                                    this.f8478x.m9065a(a, this.f8478x.f8342aG);
                                                    if (z11) {
                                                        this.f8478x.m9062a(a);
                                                    }
                                                    ImageReader D = this.f8478x.f8316G;
                                                    CameraControllerV2 cameraControllerV2 = this.f8478x;
                                                    UUID uuid = uuid2;
                                                    Contants.CameraService.RequestCode requestCode = requestCode2;
                                                    Location location = location2;
                                                    int i = i6;
                                                    int i2 = i7;
                                                    int i3 = i5;
                                                    long j = j4;
                                                    int i4 = i8;
                                                    FaceBeautyData dVar = dVar2;
                                                    String str = str2;
                                                    CaptureRequest.Builder builder2 = a;
                                                    boolean z2 = z12;
                                                    FaceBeautyData dVar2 = dVar;
                                                    if (!z13) {
                                                        if (!this.f8478x.f8379au) {
                                                            z = false;
                                                            boolean z3 = z14;
                                                            ImageReader imageReader = D;
                                                            boolean z4 = z15;
                                                            boolean z5 = z16;
                                                            boolean z6 = z17;
                                                            boolean z7 = z11;
                                                            boolean z8 = z18;
                                                            boolean z9 = z19;
                                                            int i5 = i3;
                                                            long j2 = j;
                                                            int i6 = i4;
                                                            String str2 = str;
                                                            boolean z10 = z2;
                                                            ImageReader imageReader2 = imageReader;
                                                            imageReader2.setOnImageAvailableListener(new C1924b(cameraControllerV2, uuid, requestCode, location, i, i2, i5, j2, i6, dVar2, str2, z10, z, z3, z4, z5, z6, z7, z8, z9, z20, this.f8478x.m9123as(), j3), this.f8478x.f8279c);
                                                            this.f8478x.f8325P.capture(builder2.build(), aVar2, this.f8478x.f8279c);
                                                            this.f8478x.f8281e.mo19053b(uuid2, requestCode2, Contants.CameraService.ResultCode.REQUEST_CODE_TAKE_PICTURE_START, new Object[0]);
                                                        }
                                                    }
                                                    z = true;
                                                    boolean z32 = z14;
                                                    ImageReader imageReader3 = D;
                                                    boolean z42 = z15;
                                                    boolean z52 = z16;
                                                    boolean z62 = z17;
                                                    boolean z72 = z11;
                                                    boolean z82 = z18;
                                                    boolean z92 = z19;
                                                    int i52 = i3;
                                                    long j22 = j;
                                                    int i62 = i4;
                                                    String str22 = str;
                                                    boolean z102 = z2;
                                                    ImageReader imageReader22 = imageReader3;
                                                    imageReader22.setOnImageAvailableListener(new C1924b(cameraControllerV2, uuid, requestCode, location, i, i2, i52, j22, i62, dVar2, str22, z102, z, z32, z42, z52, z62, z72, z82, z92, z20, this.f8478x.m9123as(), j3), this.f8478x.f8279c);
                                                    this.f8478x.f8325P.capture(builder2.build(), aVar2, this.f8478x.f8279c);
                                                    this.f8478x.f8281e.mo19053b(uuid2, requestCode2, Contants.CameraService.ResultCode.REQUEST_CODE_TAKE_PICTURE_START, new Object[0]);
                                                } catch (CameraAccessException e) {
                                                    LogUtil.m15949b(CameraControllerV2.f8305s, e.getMessage());
                                                    e.printStackTrace();
                                                }
                                            }
                                        }
                                    });
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: as */
                            public XmpMetaData m9123as() {
                                boolean z;
                                boolean z2 = false;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3050, new Class[0], XmpMetaData.class);
                                if (proxy.isSupported) {
                                    return (XmpMetaData) proxy.result;
                                }
                                XmpMetaData gVar = new XmpMetaData();
                                if (this.f8342aG != CameraController.HdrMode.OFF && (this.f8342aG == CameraController.HdrMode.ON || (this.f8342aG == CameraController.HdrMode.AUTO && this.f8401br.f8674f > 0))) {
                                    z = true;
                                } else {
                                    z = false;
                                }
                                if (this.f8311B.mo19733b() == 1) {
                                    z2 = true;
                                }
                                CameraModeType.ModeType a = CameraModeType.m10946a();
                                int i = -1;
                                if (!z2 && a == CameraModeType.ModeType.AUTO && this.f8342aG == CameraController.HdrMode.OFF) {
                                    i = this.f8401br.f8675g;
                                }
                                gVar.mo18755a(z);
                                gVar.mo18754a(a.name());
                                gVar.mo18756b(z2);
                                gVar.mo18753a(i);
                                return gVar;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public CaptureRequest.Builder m9036a(CaptureRequest.Builder builder, long j) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{builder, new Long(j)}, this, f8303o, false, 3051, new Class[]{CaptureRequest.Builder.class, Long.TYPE}, CaptureRequest.Builder.class);
                                if (proxy.isSupported) {
                                    return (CaptureRequest.Builder) proxy.result;
                                }
                                CaptureRequest.Key b = m9130b(Contants.CameraV2Key.SELECT_PRIORITY);
                                CaptureRequest.Key b2 = m9130b(Contants.CameraV2Key.ISO_EXP);
                                if (j <= 0) {
                                    builder.set(CaptureRequest.SENSOR_EXPOSURE_TIME, this.f8323N.get(CaptureRequest.SENSOR_EXPOSURE_TIME));
                                    builder.set(CaptureRequest.CONTROL_AE_MODE, this.f8323N.get(CaptureRequest.CONTROL_AE_MODE));
                                    builder.set(CaptureRequest.SENSOR_SENSITIVITY, this.f8323N.get(CaptureRequest.SENSOR_SENSITIVITY));
                                    builder.set(b, this.f8323N.get(b));
                                    builder.set(b2, this.f8323N.get(b2));
                                    builder.set(m9130b(Contants.CameraV2Key.USE_ISO_VALUE), this.f8323N.get(m9130b(Contants.CameraV2Key.USE_ISO_VALUE)));
                                } else if (this.f8343aH == 1) {
                                    builder.set(CaptureRequest.SENSOR_EXPOSURE_TIME, (Object) null);
                                    builder.set(CaptureRequest.CONTROL_AE_MODE, this.f8323N.get(CaptureRequest.CONTROL_AE_MODE));
                                    builder.set(CaptureRequest.SENSOR_SENSITIVITY, (Object) null);
                                    builder.set(b, 1);
                                    builder.set(b2, Long.valueOf(j));
                                } else if (this.f8343aH == -1) {
                                    String a = m9057a(f8304p, (Long) this.f8323N.get(b2));
                                    if ("absolute".equals(a)) {
                                        builder.set(CaptureRequest.SENSOR_SENSITIVITY, Integer.valueOf(((Integer) this.f8323N.get(m9130b(Contants.CameraV2Key.USE_ISO_VALUE))).intValue()));
                                    } else {
                                        builder.set(CaptureRequest.SENSOR_SENSITIVITY, Integer.valueOf(Integer.parseInt(a)));
                                    }
                                    builder.set(CaptureRequest.CONTROL_AE_MODE, 0);
                                    builder.set(CaptureRequest.FLASH_MODE, 0);
                                    builder.set(CaptureRequest.CONTROL_MODE, 0);
                                    builder.set(CaptureRequest.SENSOR_EXPOSURE_TIME, Long.valueOf(j));
                                    builder.set(b, -1);
                                    builder.set(b2, this.f8323N.get(b2));
                                }
                                builder.set(CaptureRequest.CONTROL_AF_MODE, this.f8323N.get(CaptureRequest.CONTROL_AF_MODE));
                                builder.set(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION, this.f8323N.get(CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION));
                                builder.set(CaptureRequest.LENS_FOCUS_DISTANCE, this.f8323N.get(CaptureRequest.LENS_FOCUS_DISTANCE));
                                builder.set(CaptureRequest.CONTROL_AWB_MODE, this.f8323N.get(CaptureRequest.CONTROL_AWB_MODE));
                                builder.set(CaptureRequest.SCALER_CROP_REGION, this.f8323N.get(CaptureRequest.SCALER_CROP_REGION));
                                builder.set(CaptureRequest.CONTROL_AE_ANTIBANDING_MODE, this.f8323N.get(CaptureRequest.CONTROL_AE_ANTIBANDING_MODE));
                                builder.set(m9130b(Contants.CameraV2Key.MFNR_ENABLE), this.f8323N.get(m9130b(Contants.CameraV2Key.MFNR_ENABLE)));
                                builder.set(m9130b(Contants.CameraV2Key.AI_ASD_ENABLE), this.f8323N.get(m9130b(Contants.CameraV2Key.AI_ASD_ENABLE)));
                                builder.set(CaptureRequest.LENS_OPTICAL_STABILIZATION_MODE, this.f8323N.get(CaptureRequest.LENS_OPTICAL_STABILIZATION_MODE));
                                return builder;
                            }

                            /* renamed from: a */
                            private <T> String m9057a(HashMap<String, T> hashMap, T t) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{hashMap, t}, this, f8303o, false, 3052, new Class[]{HashMap.class, Object.class}, String.class);
                                if (proxy.isSupported) {
                                    return (String) proxy.result;
                                }
                                String str = null;
                                for (String next : hashMap.keySet()) {
                                    if (hashMap.get(next).equals(t)) {
                                        str = next;
                                    }
                                }
                                return str == null ? String.valueOf(t) : str;
                            }

                            /* renamed from: j */
                            public void mo19521j(Intent intent) {
                                Contants.CameraService.RequestCode requestCode;
                                boolean z;
                                Contants.CameraService.RequestCode requestCode2;
                                Intent intent2 = intent;
                                if (!PatchProxy.proxy(new Object[]{intent2}, this, f8303o, false, 3053, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    this.f8409x = null;
                                    UUID uuid = (UUID) intent2.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode3 = (Contants.CameraService.RequestCode) intent2.getSerializableExtra("requestCode");
                                    Location location = (Location) intent2.getParcelableExtra("location");
                                    int intExtra = intent2.getIntExtra("width", 0);
                                    int intExtra2 = intent2.getIntExtra("height", 0);
                                    int intExtra3 = intent2.getIntExtra("jpegRotation", 0);
                                    long longExtra = intent2.getLongExtra("shutterSpeed", 0);
                                    long longExtra2 = intent2.getLongExtra("captureStartTime", 0);
                                    int intExtra4 = intent2.getIntExtra("currentHeading", 0);
                                    FaceBeautyData dVar = (FaceBeautyData) intent2.getSerializableExtra("fbData");
                                    String stringExtra = intent2.getStringExtra("filterEffect");
                                    boolean booleanExtra = intent2.getBooleanExtra("mirror", false);
                                    boolean booleanExtra2 = intent2.getBooleanExtra("deviceMark", false);
                                    boolean booleanExtra3 = intent2.getBooleanExtra("isSquareMode", false);
                                    boolean booleanExtra4 = intent2.getBooleanExtra("isFBOn", false);
                                    boolean booleanExtra5 = intent2.getBooleanExtra("isFunnyOn", false);
                                    boolean booleanExtra6 = intent2.getBooleanExtra("needFastThumbnail", false);
                                    boolean booleanExtra7 = intent2.getBooleanExtra("isImageCaptureIntent", false);
                                    boolean booleanExtra8 = intent2.getBooleanExtra("isBokehOn", false);
                                    boolean booleanExtra9 = intent2.getBooleanExtra("isTofOn", false);
                                    boolean c = mo19571c(stringExtra);
                                    boolean booleanExtra10 = intent2.getBooleanExtra("frontFlash", false);
                                    boolean booleanExtra11 = intent2.getBooleanExtra("manualHighPic", false);
                                    String stringExtra2 = intent2.getStringExtra("usercomment");
                                    if (requestCode3 != Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_MFLL_PICTURE || this.f8281e.mo19062h()) {
                                        requestCode = requestCode3;
                                        z = booleanExtra6;
                                    } else {
                                        Contants.CameraService.RequestCode requestCode4 = Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_PICTURE;
                                        LogUtil.m15942a(f8305s, "requestCode change to REQUEST_CODE_TAKE_PICTURE because scene mode changed");
                                        requestCode = requestCode4;
                                        z = false;
                                    }
                                    C189521 r44 = r1;
                                    C189521 r72 = r1;
                                    Contants.CameraService.RequestCode requestCode5 = requestCode;
                                    boolean z2 = booleanExtra;
                                    UUID uuid2 = uuid;
                                    String str = stringExtra;
                                    final UUID uuid3 = uuid2;
                                    final Contants.CameraService.RequestCode requestCode6 = requestCode5;
                                    final long j = longExtra;
                                    final Location location2 = location;
                                    final int i = intExtra;
                                    final int i2 = intExtra2;
                                    final int i3 = intExtra3;
                                    final long j2 = longExtra2;
                                    final int i4 = intExtra4;
                                    final FaceBeautyData dVar2 = dVar;
                                    final String str2 = str;
                                    final boolean z3 = z2;
                                    final boolean z4 = booleanExtra2;
                                    final boolean z5 = booleanExtra3;
                                    final boolean z6 = z;
                                    final boolean z7 = booleanExtra7;
                                    final boolean z8 = booleanExtra4;
                                    final boolean z9 = booleanExtra8;
                                    final boolean z10 = booleanExtra5;
                                    final boolean z11 = booleanExtra9;
                                    final boolean z12 = booleanExtra10;
                                    C189521 r1 = new C1923a(this, uuid, requestCode, intExtra3, booleanExtra, intExtra, intExtra2, longExtra2, z, false, booleanExtra8, location, c, booleanExtra5, booleanExtra9, stringExtra2) {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8479a;

                                        /* renamed from: w */
                                        final /* synthetic */ CameraControllerV2 f8501w;

                                        {
                                            this.f8501w = r5;
                                        }

                                        /* renamed from: a */
                                        public void mo19590a() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8479a, false, 3142, new Class[0], Void.TYPE).isSupported) {
                                                if (Thread.currentThread().equals(this.f8501w.f8279c.getLooper().getThread())) {
                                                    CameraControllerV2 cameraControllerV2 = this.f8501w;
                                                    UUID uuid = uuid3;
                                                    Contants.CameraService.RequestCode requestCode = requestCode6;
                                                    long j = j;
                                                    Location location = location2;
                                                    int i = i;
                                                    int i2 = i2;
                                                    int i3 = i3;
                                                    long j2 = j2;
                                                    int i4 = i4;
                                                    FaceBeautyData dVar = dVar2;
                                                    String str = str2;
                                                    CameraControllerV2 cameraControllerV22 = cameraControllerV2;
                                                    boolean z = z3;
                                                    boolean z2 = z4;
                                                    boolean z3 = z5;
                                                    boolean z4 = z6;
                                                    boolean z5 = z7;
                                                    boolean z6 = z8;
                                                    boolean z7 = z9;
                                                    boolean z8 = z10;
                                                    boolean z9 = z11;
                                                    boolean z10 = z12;
                                                    cameraControllerV22.m9071a(this, uuid, requestCode, j, location, i, i2, i3, j2, i4, dVar, str, z, z2, z3, z4, z5, z6, z7, z8, z9, z10);
                                                    return;
                                                }
                                                AsyncTaskEx.C2618c cVar = AsyncTaskEx.f13744r;
                                                UUID uuid2 = uuid3;
                                                $$Lambda$CameraControllerV2$21$GT2n_mZ1FqW2MGqrlswh1jXAfoQ r29 = r0;
                                                AsyncTaskEx.C2618c cVar2 = cVar;
                                                $$Lambda$CameraControllerV2$21$GT2n_mZ1FqW2MGqrlswh1jXAfoQ r0 = new Runnable(this, uuid2, requestCode6, j, location2, i, i2, i3, j2, i4, dVar2, str2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12) {
                                                    private final /* synthetic */ CameraControllerV2.C189521 f$0;
                                                    private final /* synthetic */ UUID f$1;
                                                    private final /* synthetic */ FaceBeautyData f$10;
                                                    private final /* synthetic */ String f$11;
                                                    private final /* synthetic */ boolean f$12;
                                                    private final /* synthetic */ boolean f$13;
                                                    private final /* synthetic */ boolean f$14;
                                                    private final /* synthetic */ boolean f$15;
                                                    private final /* synthetic */ boolean f$16;
                                                    private final /* synthetic */ boolean f$17;
                                                    private final /* synthetic */ boolean f$18;
                                                    private final /* synthetic */ boolean f$19;
                                                    private final /* synthetic */ Contants.CameraService.RequestCode f$2;
                                                    private final /* synthetic */ boolean f$20;
                                                    private final /* synthetic */ boolean f$21;
                                                    private final /* synthetic */ long f$3;
                                                    private final /* synthetic */ Location f$4;
                                                    private final /* synthetic */ int f$5;
                                                    private final /* synthetic */ int f$6;
                                                    private final /* synthetic */ int f$7;
                                                    private final /* synthetic */ long f$8;
                                                    private final /* synthetic */ int f$9;

                                                    {
                                                        this.f$0 = r4;
                                                        this.f$1 = r5;
                                                        this.f$2 = r6;
                                                        this.f$3 = r7;
                                                        this.f$4 = r9;
                                                        this.f$5 = r10;
                                                        this.f$6 = r11;
                                                        this.f$7 = r12;
                                                        this.f$8 = r13;
                                                        this.f$9 = r15;
                                                        this.f$10 = r16;
                                                        this.f$11 = r17;
                                                        this.f$12 = r18;
                                                        this.f$13 = r19;
                                                        this.f$14 = r20;
                                                        this.f$15 = r21;
                                                        this.f$16 = r22;
                                                        this.f$17 = r23;
                                                        this.f$18 = r24;
                                                        this.f$19 = r25;
                                                        this.f$20 = r26;
                                                        this.f$21 = r27;
                                                    }

                                                    public final void run() {
                                                        CameraControllerV2.C189521 r1 = this.f$0;
                                                        CameraControllerV2.C189521 r25 = r1;
                                                        r25.m9338a(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10, this.f$11, this.f$12, this.f$13, this.f$14, this.f$15, this.f$16, this.f$17, this.f$18, this.f$19, this.f$20, this.f$21);
                                                    }
                                                };
                                                cVar2.mo22621a("takePicture", r29);
                                                AsyncTaskEx.f13744r.mo22622a("takePicture");
                                            }
                                        }

                                        /* access modifiers changed from: private */
                                        /* renamed from: a */
                                        public /* synthetic */ void m9338a(UUID uuid, Contants.CameraService.RequestCode requestCode, long j, Location location, int i, int i2, int i3, long j2, int i4, FaceBeautyData dVar, String str, boolean z, boolean z2, boolean z3, boolean z4, boolean z5, boolean z6, boolean z7, boolean z8, boolean z9, boolean z10) {
                                            if (!PatchProxy.proxy(new Object[]{uuid, requestCode, new Long(j), location, new Integer(i), new Integer(i2), new Integer(i3), new Long(j2), new Integer(i4), dVar, str, new Byte(z ? (byte) 1 : 0), new Byte(z2 ? (byte) 1 : 0), new Byte(z3 ? (byte) 1 : 0), new Byte(z4 ? (byte) 1 : 0), new Byte(z5 ? (byte) 1 : 0), new Byte(z6 ? (byte) 1 : 0), new Byte(z7 ? (byte) 1 : 0), new Byte(z8 ? (byte) 1 : 0), new Byte(z9 ? (byte) 1 : 0), new Byte(z10 ? (byte) 1 : 0)}, this, f8479a, false, 3144, new Class[]{UUID.class, Contants.CameraService.RequestCode.class, Long.TYPE, Location.class, Integer.TYPE, Integer.TYPE, Integer.TYPE, Long.TYPE, Integer.TYPE, FaceBeautyData.class, String.class, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE}, Void.TYPE).isSupported) {
                                                this.f8501w.m9071a(this, uuid, requestCode, j, location, i, i2, i3, j2, i4, dVar, str, z, z2, z3, z4, z5, z6, z7, z8, z9, z10);
                                            }
                                        }

                                        /* renamed from: b */
                                        public void mo19591b() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8479a, false, 3143, new Class[0], Void.TYPE).isSupported) {
                                                try {
                                                    this.f8501w.f8323N.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, 1);
                                                    this.f8501w.m9064a(this.f8501w.f8323N, this.f8501w.f8341aF, false);
                                                    this.f8501w.mo19572e(4);
                                                    CaptureRequest build = this.f8501w.f8323N.build();
                                                    int unused = this.f8501w.f8389bf = build.hashCode();
                                                    this.f8501w.f8401br.mo19640a((C1923a) this);
                                                    this.f8501w.f8325P.capture(build, this.f8501w.f8401br, this.f8501w.f8279c);
                                                    this.f8501w.f8323N.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, 0);
                                                } catch (CameraAccessException e) {
                                                    LogUtil.m15950b(CameraControllerV2.f8305s, "Failed to run precapture sequence.", e);
                                                }
                                            }
                                        }
                                    };
                                    AsyncTaskEx.f13744r.mo22621a("takePicture", new Runnable(this, r44, uuid2, requestCode5, longExtra, location, intExtra, intExtra2, intExtra3, longExtra2, intExtra4, dVar, str, z2, booleanExtra2, booleanExtra3, z, booleanExtra7, booleanExtra4, booleanExtra8, booleanExtra5, booleanExtra9, booleanExtra10) {
                                        private final /* synthetic */ CameraControllerV2 f$0;
                                        private final /* synthetic */ CameraControllerV2.C1923a f$1;
                                        private final /* synthetic */ int f$10;
                                        private final /* synthetic */ FaceBeautyData f$11;
                                        private final /* synthetic */ String f$12;
                                        private final /* synthetic */ boolean f$13;
                                        private final /* synthetic */ boolean f$14;
                                        private final /* synthetic */ boolean f$15;
                                        private final /* synthetic */ boolean f$16;
                                        private final /* synthetic */ boolean f$17;
                                        private final /* synthetic */ boolean f$18;
                                        private final /* synthetic */ boolean f$19;
                                        private final /* synthetic */ UUID f$2;
                                        private final /* synthetic */ boolean f$20;
                                        private final /* synthetic */ boolean f$21;
                                        private final /* synthetic */ boolean f$22;
                                        private final /* synthetic */ Contants.CameraService.RequestCode f$3;
                                        private final /* synthetic */ long f$4;
                                        private final /* synthetic */ Location f$5;
                                        private final /* synthetic */ int f$6;
                                        private final /* synthetic */ int f$7;
                                        private final /* synthetic */ int f$8;
                                        private final /* synthetic */ long f$9;

                                        {
                                            this.f$0 = r4;
                                            this.f$1 = r5;
                                            this.f$2 = r6;
                                            this.f$3 = r7;
                                            this.f$4 = r8;
                                            this.f$5 = r10;
                                            this.f$6 = r11;
                                            this.f$7 = r12;
                                            this.f$8 = r13;
                                            this.f$9 = r14;
                                            this.f$10 = r16;
                                            this.f$11 = r17;
                                            this.f$12 = r18;
                                            this.f$13 = r19;
                                            this.f$14 = r20;
                                            this.f$15 = r21;
                                            this.f$16 = r22;
                                            this.f$17 = r23;
                                            this.f$18 = r24;
                                            this.f$19 = r25;
                                            this.f$20 = r26;
                                            this.f$21 = r27;
                                            this.f$22 = r28;
                                        }

                                        public final void run() {
                                            CameraControllerV2 cameraControllerV2 = this.f$0;
                                            CameraControllerV2 cameraControllerV22 = cameraControllerV2;
                                            cameraControllerV22.m9140b(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10, this.f$11, this.f$12, this.f$13, this.f$14, this.f$15, this.f$16, this.f$17, this.f$18, this.f$19, this.f$20, this.f$21, this.f$22);
                                        }
                                    });
                                    this.f8370al = true;
                                    AsyncTaskEx.f13744r.mo22622a("takePicture");
                                    if (!z && !booleanExtra10 && !booleanExtra11) {
                                        if (DeviceHelper.f13840T) {
                                            requestCode2 = requestCode5;
                                            if (requestCode2 == Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_HDR_AND_MFLL_PICTURE || requestCode2 == Contants.CameraService.RequestCode.REQUEST_CODE_TAKE_HDR_PICTURE) {
                                                return;
                                            }
                                        } else {
                                            requestCode2 = requestCode5;
                                        }
                                        while (this.f8370al) {
                                            if (this.f8281e.mo19051a(false)) {
                                                UUID unused = r72.f8593a = null;
                                                mo19572e(0);
                                                if (this.f8325P != null) {
                                                    try {
                                                        this.f8325P.stopRepeating();
                                                        this.f8325P.abortCaptures();
                                                    } catch (CameraAccessException e) {
                                                        e.printStackTrace();
                                                    }
                                                }
                                                f8275g = 0;
                                                f8274f = 0;
                                                this.f8370al = false;
                                                this.f8281e.mo19041a(f8275g);
                                                UUID uuid4 = uuid2;
                                                this.f8281e.mo19045a(uuid4, requestCode2, Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_CANCEL, new Object[0]);
                                                m9089a(uuid4, requestCode2, false, Storage.m7750a().mo18626a(z2, CameraUtil.m15831a(longExtra2)));
                                                return;
                                            }
                                            C189521 r4 = r72;
                                            boolean z13 = z2;
                                            UUID uuid5 = uuid2;
                                            try {
                                                Thread.sleep(5);
                                            } catch (InterruptedException e2) {
                                                e2.printStackTrace();
                                            }
                                            r72 = r4;
                                            uuid2 = uuid5;
                                            z2 = z13;
                                        }
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: b */
                            public /* synthetic */ void m9140b(C1923a aVar, UUID uuid, Contants.CameraService.RequestCode requestCode, long j, Location location, int i, int i2, int i3, long j2, int i4, FaceBeautyData dVar, String str, boolean z, boolean z2, boolean z3, boolean z4, boolean z5, boolean z6, boolean z7, boolean z8, boolean z9, boolean z10) {
                                boolean z11;
                                long j3 = j;
                                boolean z12 = z;
                                if (!PatchProxy.proxy(new Object[]{aVar, uuid, requestCode, new Long(j3), location, new Integer(i), new Integer(i2), new Integer(i3), new Long(j2), new Integer(i4), dVar, str, new Byte(z12 ? (byte) 1 : 0), new Byte(z2 ? (byte) 1 : 0), new Byte(z3 ? (byte) 1 : 0), new Byte(z4 ? (byte) 1 : 0), new Byte(z5 ? (byte) 1 : 0), new Byte(z6 ? (byte) 1 : 0), new Byte(z7 ? (byte) 1 : 0), new Byte(z8 ? (byte) 1 : 0), new Byte(z9 ? (byte) 1 : 0), new Byte(z10 ? (byte) 1 : 0)}, this, f8303o, false, 3115, new Class[]{C1923a.class, UUID.class, Contants.CameraService.RequestCode.class, Long.TYPE, Location.class, Integer.TYPE, Integer.TYPE, Integer.TYPE, Long.TYPE, Integer.TYPE, FaceBeautyData.class, String.class, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE, Boolean.TYPE}, Void.TYPE).isSupported) {
                                    if (this.f8341aF == CameraController.FlashMode.FLASH_MODE_AUTO) {
                                        z11 = mo19486ad();
                                    } else {
                                        z11 = this.f8341aF == CameraController.FlashMode.FLASH_MODE_OFF || this.f8341aF == CameraController.FlashMode.FLASH_MODE_TORCH;
                                    }
                                    if ((!this.f8373ao || (!z11 && this.f8341aF != CameraController.FlashMode.FLASH_MODE_TORCH)) && !CameraModeType.m10955c()) {
                                        LogUtil.m15942a(f8305s, "takePicture lockFocus, isFlashOffInCapture:" + z11);
                                        m9070a(aVar);
                                    } else {
                                        LogUtil.m15942a(f8305s, "takePicture immediately, isFlashOffInCapture:" + z11);
                                        m9071a(aVar, uuid, requestCode, j, location, i, i2, i3, j2, i4, dVar, str, z, z2, z3, z4, z5, z6, z7, z8, z9, z10);
                                    }
                                    f8275g++;
                                    f8274f++;
                                    m9088a(uuid, requestCode, true, (int) (j3 / 1000000), Storage.m7750a().mo18626a(z12, CameraUtil.m15831a(j2)));
                                }
                            }

                            /* renamed from: a */
                            public void mo19453a(Intent intent) {
                                int i;
                                Intent intent2 = intent;
                                if (!PatchProxy.proxy(new Object[]{intent2}, this, f8303o, false, 3054, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    LogUtil.m15952c(f8305s, "takeSuperNightPicture");
                                    this.f8370al = true;
                                    UUID uuid = (UUID) intent2.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent2.getSerializableExtra("requestCode");
                                    boolean booleanExtra = intent2.getBooleanExtra("isHand", true);
                                    int intExtra = intent2.getIntExtra("width", 0);
                                    int intExtra2 = intent2.getIntExtra("height", 0);
                                    int intExtra3 = intent2.getIntExtra("jpegRotation", 0);
                                    long longExtra = intent2.getLongExtra("captureStartTime", 0);
                                    boolean booleanExtra2 = intent2.getBooleanExtra("isFBOn", false);
                                    boolean booleanExtra3 = intent2.getBooleanExtra("isday", false);
                                    Location location = (Location) intent2.getParcelableExtra("location");
                                    try {
                                        float d = mo19504d();
                                        if (!booleanExtra) {
                                            i = DeviceHelper.f14022dn[1].length;
                                        } else if (this.f8311B.f9122a == 1) {
                                            i = DeviceHelper.f14022dn[2].length;
                                        } else {
                                            i = DeviceHelper.f14022dn[0].length;
                                        }
                                        int i2 = i;
                                        long longValue = ((Long) this.f8401br.mo19639a().get(CaptureResult.SENSOR_EXPOSURE_TIME)).longValue();
                                        Object obj = this.f8401br.mo19639a().get(mo19562a(Contants.CameraV2Key.AE_ISO));
                                        int intValue = obj != null ? ((Integer) obj).intValue() : 0;
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15942a(aVar, "SN picture standardExposureTime: " + longValue + " standardExposureTime: " + intValue);
                                        $$Lambda$CameraControllerV2$2sBjjD7wFVF5jX044nYABHgzqL8 r22 = r1;
                                        AsyncTaskEx.C2618c cVar = AsyncTaskEx.f13744r;
                                        Contants.CameraService.RequestCode requestCode2 = requestCode;
                                        UUID uuid2 = uuid;
                                        $$Lambda$CameraControllerV2$2sBjjD7wFVF5jX044nYABHgzqL8 r1 = new Runnable(this, booleanExtra, uuid, requestCode, location, longExtra, intExtra3, intExtra, intExtra2, i2, d, booleanExtra2, booleanExtra3, intValue, longValue) {
                                            private final /* synthetic */ CameraControllerV2 f$0;
                                            private final /* synthetic */ boolean f$1;
                                            private final /* synthetic */ float f$10;
                                            private final /* synthetic */ boolean f$11;
                                            private final /* synthetic */ boolean f$12;
                                            private final /* synthetic */ int f$13;
                                            private final /* synthetic */ long f$14;
                                            private final /* synthetic */ UUID f$2;
                                            private final /* synthetic */ Contants.CameraService.RequestCode f$3;
                                            private final /* synthetic */ Location f$4;
                                            private final /* synthetic */ long f$5;
                                            private final /* synthetic */ int f$6;
                                            private final /* synthetic */ int f$7;
                                            private final /* synthetic */ int f$8;
                                            private final /* synthetic */ int f$9;

                                            {
                                                this.f$0 = r4;
                                                this.f$1 = r5;
                                                this.f$2 = r6;
                                                this.f$3 = r7;
                                                this.f$4 = r8;
                                                this.f$5 = r9;
                                                this.f$6 = r11;
                                                this.f$7 = r12;
                                                this.f$8 = r13;
                                                this.f$9 = r14;
                                                this.f$10 = r15;
                                                this.f$11 = r16;
                                                this.f$12 = r17;
                                                this.f$13 = r18;
                                                this.f$14 = r19;
                                            }

                                            public final void run() {
                                                CameraControllerV2 cameraControllerV2 = this.f$0;
                                                CameraControllerV2 cameraControllerV22 = cameraControllerV2;
                                                cameraControllerV22.m9092a(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10, this.f$11, this.f$12, this.f$13, this.f$14);
                                            }
                                        };
                                        cVar.mo22621a("takeSuperNightPicture", r22);
                                        this.f8370al = true;
                                        AsyncTaskEx.f13744r.mo22622a("takeSuperNightPicture");
                                        while (this.f8370al) {
                                            if (this.f8281e.mo19051a(false)) {
                                                this.f8370al = false;
                                                f8275g = 0;
                                                f8274f = 0;
                                                this.f8281e.mo19041a(f8275g);
                                                Contants.CameraService.RequestCode requestCode3 = requestCode2;
                                                UUID uuid3 = uuid2;
                                                this.f8281e.mo19045a(uuid3, requestCode3, Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_CANCEL, new Object[0]);
                                                m9089a(uuid3, requestCode3, false, Storage.m7750a().mo18626a(false, CameraUtil.m15831a(longExtra)));
                                                return;
                                            }
                                            Contants.CameraService.RequestCode requestCode4 = requestCode2;
                                            UUID uuid4 = uuid2;
                                            try {
                                                Thread.sleep(5);
                                            } catch (InterruptedException e) {
                                                e.printStackTrace();
                                            }
                                            uuid2 = uuid4;
                                            requestCode2 = requestCode4;
                                        }
                                    } catch (CameraController.C1881g e2) {
                                        CameraController.C1881g gVar = e2;
                                        LogUtil.C2630a aVar2 = f8305s;
                                        LogUtil.m15949b(aVar2, "camera is null!!! " + gVar);
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* JADX WARNING: Removed duplicated region for block: B:38:0x0209  */
                            /* JADX WARNING: Removed duplicated region for block: B:39:0x020c  */
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public /* synthetic */ void m9092a(boolean r28, java.util.UUID r29, com.meizu.media.camera.util.Contants.CameraService.RequestCode r30, android.location.Location r31, long r32, int r34, int r35, int r36, int r37, float r38, boolean r39, boolean r40, int r41, long r42) {
                                /*
                                    r27 = this;
                                    r15 = r27
                                    r14 = r28
                                    r13 = r29
                                    r12 = r30
                                    r0 = 14
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r14)
                                    r11 = 0
                                    r1[r11] = r2
                                    r10 = 1
                                    r1[r10] = r13
                                    r8 = 2
                                    r1[r8] = r12
                                    r9 = 3
                                    r1[r9] = r31
                                    java.lang.Long r2 = new java.lang.Long
                                    r6 = r32
                                    r2.<init>(r6)
                                    r3 = 4
                                    r1[r3] = r2
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r5 = r34
                                    r2.<init>(r5)
                                    r4 = 5
                                    r1[r4] = r2
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r5 = r35
                                    r2.<init>(r5)
                                    r17 = 6
                                    r1[r17] = r2
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r5 = r36
                                    r2.<init>(r5)
                                    r18 = 7
                                    r1[r18] = r2
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r5 = r37
                                    r2.<init>(r5)
                                    r19 = 8
                                    r1[r19] = r2
                                    java.lang.Float r2 = new java.lang.Float
                                    r5 = r38
                                    r2.<init>(r5)
                                    r20 = 9
                                    r1[r20] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r5 = r39
                                    r2.<init>(r5)
                                    r21 = 10
                                    r1[r21] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r5 = r40
                                    r2.<init>(r5)
                                    r22 = 11
                                    r1[r22] = r2
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r5 = r41
                                    r2.<init>(r5)
                                    r23 = 12
                                    r1[r23] = r2
                                    java.lang.Long r2 = new java.lang.Long
                                    r5 = r42
                                    r2.<init>(r5)
                                    r7 = 13
                                    r1[r7] = r2
                                    com.meizu.savior.ChangeQuickRedirect r24 = f8303o
                                    java.lang.Class[] r0 = new java.lang.Class[r0]
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r11] = r2
                                    java.lang.Class<java.util.UUID> r2 = java.util.UUID.class
                                    r0[r10] = r2
                                    java.lang.Class<com.meizu.media.camera.util.Contants$CameraService$RequestCode> r2 = com.meizu.media.camera.util.Contants.CameraService.RequestCode.class
                                    r0[r8] = r2
                                    java.lang.Class<android.location.Location> r2 = android.location.Location.class
                                    r0[r9] = r2
                                    java.lang.Class r2 = java.lang.Long.TYPE
                                    r0[r3] = r2
                                    java.lang.Class r2 = java.lang.Integer.TYPE
                                    r0[r4] = r2
                                    java.lang.Class r2 = java.lang.Integer.TYPE
                                    r0[r17] = r2
                                    java.lang.Class r2 = java.lang.Integer.TYPE
                                    r0[r18] = r2
                                    java.lang.Class r2 = java.lang.Integer.TYPE
                                    r0[r19] = r2
                                    java.lang.Class r2 = java.lang.Float.TYPE
                                    r0[r20] = r2
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r21] = r2
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r22] = r2
                                    java.lang.Class r2 = java.lang.Integer.TYPE
                                    r0[r23] = r2
                                    java.lang.Class r2 = java.lang.Long.TYPE
                                    r0[r7] = r2
                                    java.lang.Class r7 = java.lang.Void.TYPE
                                    r4 = 0
                                    r17 = 3114(0xc2a, float:4.364E-42)
                                    r2 = r27
                                    r3 = r24
                                    r5 = r17
                                    r6 = r0
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r1, r2, r3, r4, r5, r6, r7)
                                    boolean r0 = r0.isSupported
                                    if (r0 == 0) goto L_0x00da
                                    return
                                L_0x00da:
                                    com.meizu.media.camera.camcontroller.f r0 = r15.f8311B     // Catch:{ CameraAccessException -> 0x01d9 }
                                    java.lang.Object r0 = r0.mo19730a()     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.hardware.camera2.CameraDevice r0 = (android.hardware.camera2.CameraDevice) r0     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.hardware.camera2.CaptureRequest$Builder r0 = r0.createCaptureRequest(r8)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.media.ImageReader r1 = r15.f8316G     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.view.Surface r1 = r1.getSurface()     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r0.addTarget(r1)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    com.meizu.media.camera.camcontroller.f r1 = r15.f8311B     // Catch:{ CameraAccessException -> 0x01d9 }
                                    int r1 = r1.f9122a     // Catch:{ CameraAccessException -> 0x01d9 }
                                    if (r1 == r10) goto L_0x010a
                                    if (r14 == 0) goto L_0x00fc
                                    float[][] r1 = com.meizu.media.camera.util.DeviceHelper.f14022dn     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r1 = r1[r11]     // Catch:{ CameraAccessException -> 0x01d9 }
                                    goto L_0x0100
                                L_0x00fc:
                                    float[][] r1 = com.meizu.media.camera.util.DeviceHelper.f14022dn     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r1 = r1[r10]     // Catch:{ CameraAccessException -> 0x01d9 }
                                L_0x0100:
                                    android.view.Surface r2 = r15.f8383ay     // Catch:{ CameraAccessException -> 0x01d9 }
                                    if (r2 == 0) goto L_0x010e
                                    android.view.Surface r2 = r15.f8383ay     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r0.addTarget(r2)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    goto L_0x010e
                                L_0x010a:
                                    float[][] r1 = com.meizu.media.camera.util.DeviceHelper.f14022dn     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r1 = r1[r8]     // Catch:{ CameraAccessException -> 0x01d9 }
                                L_0x010e:
                                    r19 = r1
                                    r1 = 0
                                    android.hardware.camera2.CaptureRequest$Builder r0 = r15.m9036a((android.hardware.camera2.CaptureRequest.Builder) r0, (long) r1)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r15.m9207n((android.hardware.camera2.CaptureRequest.Builder) r0)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r15.m9138b((android.hardware.camera2.CaptureRequest.Builder) r0)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r15.m9062a((android.hardware.camera2.CaptureRequest.Builder) r0)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r15.m9063a((android.hardware.camera2.CaptureRequest.Builder) r0, (int) r11)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_AWB_LOCK     // Catch:{ CameraAccessException -> 0x01d9 }
                                    java.lang.Boolean r2 = java.lang.Boolean.valueOf(r10)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r0.set(r1, r2)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_AF_MODE     // Catch:{ CameraAccessException -> 0x01d9 }
                                    java.lang.Integer r2 = java.lang.Integer.valueOf(r10)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r0.set(r1, r2)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_AE_MODE     // Catch:{ CameraAccessException -> 0x01d9 }
                                    java.lang.Integer r2 = java.lang.Integer.valueOf(r11)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r0.set(r1, r2)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.CONTROL_MODE     // Catch:{ CameraAccessException -> 0x01d9 }
                                    java.lang.Integer r2 = java.lang.Integer.valueOf(r9)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r0.set(r1, r2)     // Catch:{ CameraAccessException -> 0x01d9 }
                                    android.media.ImageReader r9 = r15.f8316G     // Catch:{ CameraAccessException -> 0x01d9 }
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$b r8 = new com.meizu.media.camera.camcontroller.CameraControllerV2$b     // Catch:{ CameraAccessException -> 0x01d9 }
                                    boolean r17 = r27.m9124at()     // Catch:{ CameraAccessException -> 0x01d9 }
                                    r1 = r8
                                    r2 = r27
                                    r3 = r29
                                    r4 = r30
                                    r5 = r31
                                    r6 = r32
                                    r25 = r0
                                    r0 = r8
                                    r8 = r34
                                    r26 = r0
                                    r0 = r9
                                    r9 = r35
                                    r20 = 1
                                    r10 = r36
                                    r11 = r37
                                    r12 = r38
                                    r13 = r19
                                    r21 = r14
                                    r14 = r28
                                    r15 = r39
                                    r16 = r17
                                    r17 = r40
                                    r18 = r41
                                    r1.<init>(r2, r3, r4, r5, r6, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18)     // Catch:{ CameraAccessException -> 0x01d0 }
                                    r11 = r27
                                    com.meizu.media.camera.camcontroller.CameraController$e r1 = r11.f8279c     // Catch:{ CameraAccessException -> 0x01c9 }
                                    r2 = r26
                                    r0.setOnImageAvailableListener(r2, r1)     // Catch:{ CameraAccessException -> 0x01c9 }
                                    android.hardware.camera2.CameraCaptureSession r0 = r11.f8325P     // Catch:{ CameraAccessException -> 0x01c9 }
                                    r1 = r27
                                    r2 = r25
                                    r3 = r41
                                    r4 = r42
                                    r6 = r37
                                    r7 = r38
                                    r8 = r19
                                    r9 = r28
                                    java.util.List r12 = r1.m9059a((android.hardware.camera2.CaptureRequest.Builder) r2, (int) r3, (long) r4, (int) r6, (float) r7, (float[]) r8, (boolean) r9)     // Catch:{ CameraAccessException -> 0x01c9 }
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$22 r13 = new com.meizu.media.camera.camcontroller.CameraControllerV2$22     // Catch:{ CameraAccessException -> 0x01c9 }
                                    r1 = r13
                                    r2 = r27
                                    r3 = r29
                                    r4 = r30
                                    r5 = r35
                                    r6 = r36
                                    r7 = r34
                                    r8 = r32
                                    r10 = r37
                                    r1.<init>(r3, r4, r5, r6, r7, r8, r10)     // Catch:{ CameraAccessException -> 0x01c9 }
                                    com.meizu.media.camera.camcontroller.CameraController$e r1 = r11.f8279c     // Catch:{ CameraAccessException -> 0x01c9 }
                                    r0.captureBurst(r12, r13, r1)     // Catch:{ CameraAccessException -> 0x01c9 }
                                    com.meizu.media.camera.b$a r0 = r11.f8281e     // Catch:{ CameraAccessException -> 0x01c9 }
                                    com.meizu.media.camera.util.Contants$CameraService$ResultCode r1 = com.meizu.media.camera.util.Contants.CameraService.ResultCode.REQUEST_CODE_TAKE_PICTURE_START     // Catch:{ CameraAccessException -> 0x01c9 }
                                    r2 = 0
                                    java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ CameraAccessException -> 0x01c7 }
                                    r4 = r29
                                    r5 = r30
                                    r0.mo19053b(r4, r5, r1, r3)     // Catch:{ CameraAccessException -> 0x01c5 }
                                    goto L_0x01ee
                                L_0x01c5:
                                    r0 = move-exception
                                    goto L_0x01e2
                                L_0x01c7:
                                    r0 = move-exception
                                    goto L_0x01cb
                                L_0x01c9:
                                    r0 = move-exception
                                    r2 = 0
                                L_0x01cb:
                                    r4 = r29
                                    r5 = r30
                                    goto L_0x01e2
                                L_0x01d0:
                                    r0 = move-exception
                                    r2 = 0
                                    r4 = r29
                                    r5 = r30
                                    r11 = r27
                                    goto L_0x01e2
                                L_0x01d9:
                                    r0 = move-exception
                                    r5 = r12
                                    r4 = r13
                                    r21 = r14
                                    r11 = r15
                                    r2 = 0
                                    r20 = 1
                                L_0x01e2:
                                    com.meizu.media.camera.util.ac$a r1 = f8305s
                                    java.lang.String r3 = r0.getMessage()
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r1, (java.lang.String) r3)
                                    r0.printStackTrace()
                                L_0x01ee:
                                    int r0 = f8275g
                                    int r0 = r0 + 1
                                    f8275g = r0
                                    int r0 = f8274f
                                    int r0 = r0 + 1
                                    f8274f = r0
                                    com.meizu.media.camera.Storage r0 = com.meizu.media.camera.Storage.m7750a()
                                    java.lang.String r1 = com.meizu.media.camera.util.CameraUtil.m15831a((long) r32)
                                    java.lang.String r0 = r0.mo18626a((boolean) r2, (java.lang.String) r1)
                                    r1 = 1
                                    if (r21 == 0) goto L_0x020c
                                    r2 = 5000(0x1388, float:7.006E-42)
                                    goto L_0x020f
                                L_0x020c:
                                    r2 = 40000(0x9c40, float:5.6052E-41)
                                L_0x020f:
                                    r31 = r27
                                    r32 = r29
                                    r33 = r30
                                    r34 = r1
                                    r35 = r2
                                    r36 = r0
                                    r31.m9088a((java.util.UUID) r32, (com.meizu.media.camera.util.Contants.CameraService.RequestCode) r33, (boolean) r34, (int) r35, (java.lang.String) r36)
                                    return
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9092a(boolean, java.util.UUID, com.meizu.media.camera.util.Contants$CameraService$RequestCode, android.location.Location, long, int, int, int, int, float, boolean, boolean, int, long):void");
                            }

                            /* JADX WARNING: Removed duplicated region for block: B:129:0x02ad  */
                            @androidx.annotation.NonNull
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            private java.util.List<android.hardware.camera2.CaptureRequest> m9059a(android.hardware.camera2.CaptureRequest.Builder r26, int r27, long r28, int r30, float r31, float[] r32, boolean r33) {
                                /*
                                    r25 = this;
                                    r7 = r25
                                    r8 = r26
                                    r9 = r27
                                    r10 = r28
                                    r12 = r30
                                    r13 = r32
                                    r14 = r33
                                    r0 = 7
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    r15 = 0
                                    r1[r15] = r8
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r2.<init>(r9)
                                    r6 = 1
                                    r1[r6] = r2
                                    java.lang.Long r2 = new java.lang.Long
                                    r2.<init>(r10)
                                    r16 = 2
                                    r1[r16] = r2
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r2.<init>(r12)
                                    r17 = 3
                                    r1[r17] = r2
                                    java.lang.Float r2 = new java.lang.Float
                                    r3 = r31
                                    r2.<init>(r3)
                                    r3 = 4
                                    r1[r3] = r2
                                    r2 = 5
                                    r1[r2] = r13
                                    java.lang.Byte r4 = new java.lang.Byte
                                    r4.<init>(r14)
                                    r5 = 6
                                    r1[r5] = r4
                                    com.meizu.savior.ChangeQuickRedirect r4 = f8303o
                                    java.lang.Class[] r0 = new java.lang.Class[r0]
                                    java.lang.Class<android.hardware.camera2.CaptureRequest$Builder> r18 = android.hardware.camera2.CaptureRequest.Builder.class
                                    r0[r15] = r18
                                    java.lang.Class r18 = java.lang.Integer.TYPE
                                    r0[r6] = r18
                                    java.lang.Class r18 = java.lang.Long.TYPE
                                    r0[r16] = r18
                                    java.lang.Class r18 = java.lang.Integer.TYPE
                                    r0[r17] = r18
                                    java.lang.Class r18 = java.lang.Float.TYPE
                                    r0[r3] = r18
                                    java.lang.Class<float[]> r3 = float[].class
                                    r0[r2] = r3
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r5] = r2
                                    java.lang.Class<java.util.List> r18 = java.util.List.class
                                    r3 = 0
                                    r5 = 3055(0xbef, float:4.281E-42)
                                    r19 = r0
                                    r0 = r1
                                    r1 = r25
                                    r2 = r4
                                    r4 = r5
                                    r5 = r19
                                    r15 = 1
                                    r6 = r18
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r0, r1, r2, r3, r4, r5, r6)
                                    boolean r1 = r0.isSupported
                                    if (r1 == 0) goto L_0x0081
                                    java.lang.Object r0 = r0.result
                                    java.util.List r0 = (java.util.List) r0
                                    return r0
                                L_0x0081:
                                    java.util.ArrayList r0 = new java.util.ArrayList
                                    r0.<init>()
                                    com.meizu.media.camera.camcontroller.f r1 = r7.f8311B
                                    int r1 = r1.f9122a
                                    if (r1 != r15) goto L_0x008e
                                    r1 = 1
                                    goto L_0x008f
                                L_0x008e:
                                    r1 = 0
                                L_0x008f:
                                    if (r1 == 0) goto L_0x0094
                                    r2 = 100
                                    goto L_0x0096
                                L_0x0094:
                                    r2 = 50
                                L_0x0096:
                                    r3 = 500000000(0x1dcd6500, double:2.47032823E-315)
                                    java.lang.Long r3 = java.lang.Long.valueOf(r3)
                                    boolean r4 = com.meizu.media.camera.util.DeviceHelper.f14021dm
                                    if (r4 == 0) goto L_0x00af
                                    if (r14 != 0) goto L_0x00af
                                    if (r1 != 0) goto L_0x00af
                                    android.hardware.camera2.CaptureRequest$Key r1 = android.hardware.camera2.CaptureRequest.LENS_OPTICAL_STABILIZATION_MODE
                                    r4 = 0
                                    java.lang.Integer r5 = java.lang.Integer.valueOf(r4)
                                    r8.set(r1, r5)
                                L_0x00af:
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r1 = r7.f8401br
                                    if (r1 == 0) goto L_0x00fc
                                    if (r14 != 0) goto L_0x00fc
                                    com.meizu.media.camera.camcontroller.CameraControllerV2$d r1 = r7.f8401br     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    android.hardware.camera2.TotalCaptureResult r1 = r1.mo19639a()     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    com.meizu.media.camera.util.Contants$CameraV2Key r4 = com.meizu.media.camera.util.Contants.CameraV2Key.SUPER_NIGHT_TRIPOD_LONG_EXPOSURE     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    android.hardware.camera2.CaptureResult$Key r4 = r7.mo19562a((com.meizu.media.camera.util.Contants.CameraV2Key) r4)     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    java.lang.Object r1 = r1.get(r4)     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    com.meizu.media.camera.util.ac$a r4 = f8305s     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    r5.<init>()     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    java.lang.String r6 = "com.meizu.night.tripod is "
                                    r5.append(r6)     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    r5.append(r1)     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    java.lang.String r5 = r5.toString()     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r4, (java.lang.String) r5)     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    if (r1 == 0) goto L_0x00fc
                                    java.lang.Integer r1 = (java.lang.Integer) r1     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    int r1 = r1.intValue()     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    if (r1 != r15) goto L_0x00eb
                                    r4 = 4000000000(0xee6b2800, double:1.9762625834E-314)
                                    goto L_0x00ef
                                L_0x00eb:
                                    long r4 = r3.longValue()     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                L_0x00ef:
                                    java.lang.Long r1 = java.lang.Long.valueOf(r4)     // Catch:{ IllegalArgumentException -> 0x00f5 }
                                    r3 = r1
                                    goto L_0x00fc
                                L_0x00f5:
                                    com.meizu.media.camera.util.ac$a r1 = f8305s
                                    java.lang.String r4 = "not support long exposure! use default"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r1, (java.lang.String) r4)
                                L_0x00fc:
                                    if (r14 != 0) goto L_0x0112
                                    long r4 = r3.longValue()
                                    float r1 = (float) r10
                                    float r6 = (float) r4
                                    float r1 = r1 / r6
                                    float r6 = (float) r9
                                    float r1 = r1 * r6
                                    int r1 = (int) r1
                                    if (r1 >= r2) goto L_0x014f
                                    int r1 = r9 / r2
                                    long r4 = (long) r1
                                    long r4 = r4 * r10
                                    r1 = r2
                                    goto L_0x014f
                                L_0x0112:
                                    boolean r1 = com.meizu.media.camera.util.DeviceHelper.f14021dm
                                    if (r1 == 0) goto L_0x014d
                                    com.meizu.media.camera.camcontroller.f r1 = r7.f8311B
                                    int r1 = r1.f9122a
                                    if (r1 == r15) goto L_0x014d
                                    r1 = 3900(0xf3c, float:5.465E-42)
                                    if (r9 <= r1) goto L_0x0124
                                    r4 = 250000000(0xee6b280, double:1.235164115E-315)
                                    goto L_0x0145
                                L_0x0124:
                                    r1 = 2800(0xaf0, float:3.924E-42)
                                    if (r9 <= r1) goto L_0x012c
                                    r4 = 200000000(0xbebc200, double:9.8813129E-316)
                                    goto L_0x0145
                                L_0x012c:
                                    r1 = 2400(0x960, float:3.363E-42)
                                    if (r9 <= r1) goto L_0x0134
                                    r4 = 170000000(0xa21fe80, double:8.399116E-316)
                                    goto L_0x0145
                                L_0x0134:
                                    r1 = 2000(0x7d0, float:2.803E-42)
                                    if (r9 <= r1) goto L_0x013c
                                    r4 = 140000000(0x8583b00, double:6.91691904E-316)
                                    goto L_0x0145
                                L_0x013c:
                                    r1 = 1400(0x578, float:1.962E-42)
                                    if (r9 <= r1) goto L_0x0144
                                    r4 = 100000000(0x5f5e100, double:4.94065646E-316)
                                    goto L_0x0145
                                L_0x0144:
                                    r4 = r10
                                L_0x0145:
                                    float r1 = (float) r10
                                    float r6 = (float) r4
                                    float r1 = r1 / r6
                                    float r6 = (float) r9
                                    float r1 = r1 * r6
                                    int r1 = (int) r1
                                    goto L_0x014f
                                L_0x014d:
                                    r1 = r9
                                    r4 = r10
                                L_0x014f:
                                    r6 = 0
                                L_0x0150:
                                    int r9 = r12 + -1
                                    if (r6 > r9) goto L_0x02c7
                                    int r9 = r13.length
                                    int r9 = r9 - r15
                                    if (r9 >= r6) goto L_0x0164
                                    android.hardware.camera2.CaptureRequest$Key r9 = android.hardware.camera2.CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION
                                    java.lang.Integer r10 = java.lang.Integer.valueOf(r17)
                                    r8.set(r9, r10)
                                L_0x0161:
                                    r10 = 0
                                    goto L_0x02b7
                                L_0x0164:
                                    r9 = r13[r6]
                                    r10 = 0
                                    int r9 = (r9 > r10 ? 1 : (r9 == r10 ? 0 : -1))
                                    r11 = 24
                                    r18 = 1000000(0xf4240, double:4.940656E-318)
                                    if (r9 != 0) goto L_0x01b5
                                    android.hardware.camera2.CaptureRequest$Key r9 = android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME
                                    java.lang.Long r10 = java.lang.Long.valueOf(r4)
                                    r8.set(r9, r10)
                                    int r9 = r7.f8404bu
                                    long r9 = (long) r9
                                    long r18 = r4 / r18
                                    long r9 = r9 + r18
                                    int r9 = (int) r9
                                    r7.f8404bu = r9
                                    android.hardware.camera2.CaptureRequest$Key r9 = android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY
                                    java.lang.Integer r10 = java.lang.Integer.valueOf(r1)
                                    r8.set(r9, r10)
                                    int r9 = android.os.Build.VERSION.SDK_INT
                                    if (r9 < r11) goto L_0x019a
                                    android.hardware.camera2.CaptureRequest$Key r9 = android.hardware.camera2.CaptureRequest.CONTROL_POST_RAW_SENSITIVITY_BOOST
                                    r10 = 0
                                    java.lang.Integer r11 = java.lang.Integer.valueOf(r10)
                                    r8.set(r9, r11)
                                L_0x019a:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r9 = com.meizu.media.camera.util.Contants.CameraV2Key.SUPER_NIGHT_MODE     // Catch:{ IllegalArgumentException -> 0x01ad }
                                    android.hardware.camera2.CaptureRequest$Key r9 = r7.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r9)     // Catch:{ IllegalArgumentException -> 0x01ad }
                                    if (r14 == 0) goto L_0x01a4
                                    r10 = 1
                                    goto L_0x01a5
                                L_0x01a4:
                                    r10 = 2
                                L_0x01a5:
                                    java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ IllegalArgumentException -> 0x01ad }
                                    r8.set(r9, r10)     // Catch:{ IllegalArgumentException -> 0x01ad }
                                    goto L_0x0161
                                L_0x01ad:
                                    com.meizu.media.camera.util.ac$a r9 = f8305s
                                    java.lang.String r10 = "firmware not support super night separate parameter!"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r9, (java.lang.String) r10)
                                    goto L_0x0161
                                L_0x01b5:
                                    r9 = r13[r6]
                                    int r9 = (r9 > r10 ? 1 : (r9 == r10 ? 0 : -1))
                                    if (r9 >= 0) goto L_0x01f1
                                    r9 = r13[r6]
                                    double r9 = r7.m9023a((float) r9, (int) r1)
                                    double r11 = (double) r2
                                    int r20 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
                                    if (r20 >= 0) goto L_0x01d0
                                    r21 = r11
                                    double r11 = (double) r4
                                    double r11 = r11 * r9
                                    float r9 = (float) r2
                                    double r9 = (double) r9
                                    double r11 = r11 / r9
                                    long r9 = (long) r11
                                    goto L_0x01d3
                                L_0x01d0:
                                    r21 = r9
                                    r9 = r4
                                L_0x01d3:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r11 = com.meizu.media.camera.util.Contants.CameraV2Key.SUPER_NIGHT_MODE     // Catch:{ IllegalArgumentException -> 0x01e6 }
                                    android.hardware.camera2.CaptureRequest$Key r11 = r7.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r11)     // Catch:{ IllegalArgumentException -> 0x01e6 }
                                    if (r14 == 0) goto L_0x01dd
                                    r12 = 3
                                    goto L_0x01de
                                L_0x01dd:
                                    r12 = 2
                                L_0x01de:
                                    java.lang.Integer r12 = java.lang.Integer.valueOf(r12)     // Catch:{ IllegalArgumentException -> 0x01e6 }
                                    r8.set(r11, r12)     // Catch:{ IllegalArgumentException -> 0x01e6 }
                                    goto L_0x01ed
                                L_0x01e6:
                                    com.meizu.media.camera.util.ac$a r11 = f8305s
                                    java.lang.String r12 = "firmware not support super night separate parameter!"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r11, (java.lang.String) r12)
                                L_0x01ed:
                                    r11 = r21
                                    goto L_0x028b
                                L_0x01f1:
                                    com.meizu.media.camera.util.Contants$CameraV2Key r9 = com.meizu.media.camera.util.Contants.CameraV2Key.SUPER_NIGHT_MODE     // Catch:{ IllegalArgumentException -> 0x0204 }
                                    android.hardware.camera2.CaptureRequest$Key r9 = r7.m9130b((com.meizu.media.camera.util.Contants.CameraV2Key) r9)     // Catch:{ IllegalArgumentException -> 0x0204 }
                                    if (r14 == 0) goto L_0x01fb
                                    r10 = 1
                                    goto L_0x01fc
                                L_0x01fb:
                                    r10 = 2
                                L_0x01fc:
                                    java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ IllegalArgumentException -> 0x0204 }
                                    r8.set(r9, r10)     // Catch:{ IllegalArgumentException -> 0x0204 }
                                    goto L_0x020b
                                L_0x0204:
                                    com.meizu.media.camera.util.ac$a r9 = f8305s
                                    java.lang.String r10 = "firmware not support super night separate parameter!"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r9, (java.lang.String) r10)
                                L_0x020b:
                                    if (r14 != 0) goto L_0x024b
                                    r9 = r13[r6]
                                    double r21 = r7.m9023a((float) r9, (int) r1)
                                    double r9 = (double) r2
                                    int r11 = (r21 > r9 ? 1 : (r21 == r9 ? 0 : -1))
                                    if (r11 < 0) goto L_0x0223
                                    long r11 = r3.longValue()
                                    int r11 = (r4 > r11 ? 1 : (r4 == r11 ? 0 : -1))
                                    if (r11 >= 0) goto L_0x0221
                                    goto L_0x0223
                                L_0x0221:
                                    r9 = r4
                                    goto L_0x01ed
                                L_0x0223:
                                    double r11 = (double) r4
                                    double r11 = r11 * r21
                                    float r15 = (float) r2
                                    double r14 = (double) r15
                                    double r11 = r11 / r14
                                    long r11 = (long) r11
                                    long r14 = r3.longValue()
                                    int r14 = (r11 > r14 ? 1 : (r11 == r14 ? 0 : -1))
                                    if (r14 <= 0) goto L_0x0244
                                    double r11 = (double) r11
                                    double r9 = r9 * r11
                                    long r11 = r3.longValue()
                                    double r11 = (double) r11
                                    double r21 = r9 / r11
                                    long r9 = r3.longValue()
                                    r11 = r21
                                    r15 = 1
                                    goto L_0x028b
                                L_0x0244:
                                    r15 = 1
                                L_0x0245:
                                    r23 = r9
                                    r9 = r11
                                    r11 = r23
                                    goto L_0x028b
                                L_0x024b:
                                    r9 = r13[r6]
                                    long r9 = r7.m9030a((float) r9, (long) r4)
                                    boolean r11 = com.meizu.media.camera.util.DeviceHelper.f14021dm
                                    if (r11 == 0) goto L_0x0264
                                    com.meizu.media.camera.camcontroller.f r11 = r7.f8311B
                                    int r11 = r11.f9122a
                                    r12 = 1
                                    if (r11 == r12) goto L_0x0264
                                    r11 = 250000000(0xee6b280, double:1.235164115E-315)
                                    int r14 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
                                    if (r14 <= 0) goto L_0x0289
                                    goto L_0x026e
                                L_0x0264:
                                    r11 = 250000000(0xee6b280, double:1.235164115E-315)
                                    r14 = 70000000(0x42c1d80, double:3.4584595E-316)
                                    int r14 = (r9 > r14 ? 1 : (r9 == r14 ? 0 : -1))
                                    if (r14 <= 0) goto L_0x0289
                                L_0x026e:
                                    boolean r14 = com.meizu.media.camera.util.DeviceHelper.f14021dm
                                    if (r14 == 0) goto L_0x027d
                                    com.meizu.media.camera.camcontroller.f r14 = r7.f8311B
                                    int r14 = r14.f9122a
                                    r15 = 1
                                    if (r14 == r15) goto L_0x027e
                                    r14 = 1299082024(0x4d6e6b28, float:2.5E8)
                                    goto L_0x0281
                                L_0x027d:
                                    r15 = 1
                                L_0x027e:
                                    r14 = 1283818416(0x4c8583b0, float:7.0E7)
                                L_0x0281:
                                    long r11 = (long) r1
                                    long r11 = r11 * r9
                                    float r9 = (float) r11
                                    float r9 = r9 / r14
                                    double r9 = (double) r9
                                    long r11 = (long) r14
                                    goto L_0x0245
                                L_0x0289:
                                    r15 = 1
                                    double r11 = (double) r1
                                L_0x028b:
                                    android.hardware.camera2.CaptureRequest$Key r14 = android.hardware.camera2.CaptureRequest.SENSOR_EXPOSURE_TIME
                                    java.lang.Long r15 = java.lang.Long.valueOf(r9)
                                    r8.set(r14, r15)
                                    int r14 = r7.f8404bu
                                    long r14 = (long) r14
                                    long r9 = r9 / r18
                                    long r14 = r14 + r9
                                    int r9 = (int) r14
                                    r7.f8404bu = r9
                                    android.hardware.camera2.CaptureRequest$Key r9 = android.hardware.camera2.CaptureRequest.SENSOR_SENSITIVITY
                                    int r10 = (int) r11
                                    java.lang.Integer r10 = java.lang.Integer.valueOf(r10)
                                    r8.set(r9, r10)
                                    int r9 = android.os.Build.VERSION.SDK_INT
                                    r10 = 24
                                    if (r9 < r10) goto L_0x0161
                                    android.hardware.camera2.CaptureRequest$Key r9 = android.hardware.camera2.CaptureRequest.CONTROL_POST_RAW_SENSITIVITY_BOOST
                                    r10 = 0
                                    java.lang.Integer r11 = java.lang.Integer.valueOf(r10)
                                    r8.set(r9, r11)
                                L_0x02b7:
                                    android.hardware.camera2.CaptureRequest r9 = r26.build()
                                    r0.add(r9)
                                    int r6 = r6 + 1
                                    r12 = r30
                                    r14 = r33
                                    r15 = 1
                                    goto L_0x0150
                                L_0x02c7:
                                    return r0
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9059a(android.hardware.camera2.CaptureRequest$Builder, int, long, int, float, float[], boolean):java.util.List");
                            }

                            /* renamed from: h */
                            public int mo19575h(boolean z) {
                                int i;
                                boolean z2 = true;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Byte(z ? (byte) 1 : 0)}, this, f8303o, false, 3056, new Class[]{Boolean.TYPE}, Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                if (this.f8404bu == -1) {
                                    if (this.f8311B.f9122a != 1) {
                                        z2 = false;
                                    }
                                    i = m9029a(z, z2);
                                } else {
                                    i = this.f8404bu;
                                }
                                this.f8404bu = -1;
                                return i;
                            }

                            /* renamed from: a */
                            private int m9029a(boolean z, boolean z2) {
                                long j;
                                int i;
                                long j2;
                                long j3;
                                long j4;
                                float f;
                                boolean z3 = z;
                                boolean z4 = z2;
                                char c = 2;
                                int i2 = 0;
                                int i3 = 1;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Byte(z3 ? (byte) 1 : 0), new Byte(z4 ? (byte) 1 : 0)}, this, f8303o, false, 3057, new Class[]{Boolean.TYPE, Boolean.TYPE}, Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                int i4 = z4 ? 100 : 50;
                                if (z3) {
                                    c = 0;
                                } else if (!z4) {
                                    c = 1;
                                }
                                long longValue = ((Long) this.f8401br.mo19639a().get(CaptureResult.SENSOR_EXPOSURE_TIME)).longValue();
                                Object obj = this.f8401br.mo19639a().get(mo19562a(Contants.CameraV2Key.AE_ISO));
                                int intValue = obj != null ? ((Integer) obj).intValue() : 0;
                                Long l = 500000000L;
                                if (this.f8401br != null && !z3) {
                                    try {
                                        Object obj2 = this.f8401br.mo19639a().get(mo19562a(Contants.CameraV2Key.SUPER_NIGHT_TRIPOD_LONG_EXPOSURE));
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15942a(aVar, "com.meizu.night.tripod is " + obj2);
                                        if (obj2 != null) {
                                            l = Long.valueOf(((Integer) obj2).intValue() == 1 ? 4000000000L : l.longValue());
                                        }
                                    } catch (IllegalArgumentException unused) {
                                        LogUtil.m15949b(f8305s, "not support long exposure! use default");
                                    }
                                }
                                if (!z3) {
                                    j = l.longValue();
                                    int i5 = (int) ((((float) longValue) / ((float) j)) * ((float) intValue));
                                    if (i5 < i4) {
                                        j = longValue * ((long) (intValue / i4));
                                        i = i4;
                                    } else {
                                        i = i5;
                                    }
                                } else if (!DeviceHelper.f14021dm || this.f8311B.f9122a == 1) {
                                    j = longValue;
                                    i = intValue;
                                } else {
                                    j = intValue > 3900 ? 250000000 : intValue > 2800 ? 200000000 : intValue > 2400 ? 170000000 : intValue > 2000 ? 140000000 : intValue > 1400 ? 100000000 : longValue;
                                    i = (int) ((((float) longValue) / ((float) j)) * ((float) intValue));
                                }
                                int i6 = 0;
                                while (i2 <= DeviceHelper.f14022dn[c].length - i3) {
                                    if (DeviceHelper.f14022dn[c][i2] == 0.0f) {
                                        i6 = (int) (((long) i6) + (j / 1000000));
                                    } else {
                                        if (DeviceHelper.f14022dn[c][i2] < 0.0f) {
                                            double a = m9023a(DeviceHelper.f14022dn[c][i2], i);
                                            if (a < ((double) i4)) {
                                                j2 = (long) ((((double) j) * a) / ((double) ((float) i4)));
                                                j4 = j;
                                            } else {
                                                j3 = j;
                                                j2 = j3;
                                                j4 = j2;
                                            }
                                        } else {
                                            j3 = j;
                                            if (!z3) {
                                                double a2 = m9023a(DeviceHelper.f14022dn[c][i2], i);
                                                if (a2 < ((double) i4) || j3 < l.longValue()) {
                                                    j4 = j3;
                                                    j2 = (long) ((((double) j4) * a2) / ((double) ((float) i4)));
                                                    if (j2 > l.longValue()) {
                                                        l.longValue();
                                                        j2 = l.longValue();
                                                    }
                                                }
                                                j2 = j3;
                                                j4 = j2;
                                            } else {
                                                j4 = j3;
                                                j2 = m9030a(DeviceHelper.f14022dn[c][i2], j4);
                                                if (!DeviceHelper.f14021dm || this.f8311B.f9122a == 1 ? j2 > 70000000 : j2 > 250000000) {
                                                    if (DeviceHelper.f14021dm) {
                                                        i3 = 1;
                                                        if (this.f8311B.f9122a != 1) {
                                                            f = 2.5E8f;
                                                            j2 = (long) f;
                                                            i6 = (int) (((long) i6) + (j2 / 1000000));
                                                        }
                                                    } else {
                                                        i3 = 1;
                                                    }
                                                    f = 7.0E7f;
                                                    j2 = (long) f;
                                                    i6 = (int) (((long) i6) + (j2 / 1000000));
                                                }
                                                i3 = 1;
                                                i6 = (int) (((long) i6) + (j2 / 1000000));
                                            }
                                        }
                                        i3 = 1;
                                        i6 = (int) (((long) i6) + (j2 / 1000000));
                                    }
                                    i2++;
                                    z3 = z;
                                }
                                return i6;
                            }

                            /* renamed from: a */
                            private long m9030a(float f, long j) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Float(f), new Long(j)}, this, f8303o, false, 3058, new Class[]{Float.TYPE, Long.TYPE}, Long.TYPE);
                                if (proxy.isSupported) {
                                    return ((Long) proxy.result).longValue();
                                }
                                int i = (f > 0.0f ? 1 : (f == 0.0f ? 0 : -1));
                                if (i == 0) {
                                    return j;
                                }
                                return (long) (i > 0 ? Math.pow(2.0d, (double) f) * ((double) j) : ((double) j) / Math.pow(2.0d, (double) Math.abs(f)));
                            }

                            /* renamed from: a */
                            private double m9023a(float f, int i) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Float(f), new Integer(i)}, this, f8303o, false, 3059, new Class[]{Float.TYPE, Integer.TYPE}, Double.TYPE);
                                if (proxy.isSupported) {
                                    return ((Double) proxy.result).doubleValue();
                                }
                                int i2 = (f > 0.0f ? 1 : (f == 0.0f ? 0 : -1));
                                if (i2 == 0) {
                                    return (double) i;
                                }
                                return i2 > 0 ? Math.pow(2.0d, (double) f) * ((double) i) : ((double) i) / Math.pow(2.0d, (double) Math.abs(f));
                            }

                            /* renamed from: k */
                            public void mo19523k(Intent intent) {
                                Intent intent2 = intent;
                                if (!PatchProxy.proxy(new Object[]{intent2}, this, f8303o, false, 3060, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    Storage.m7750a().mo18646c();
                                    this.f8356aU = null;
                                    this.f8357aV = null;
                                    this.f8385bb = null;
                                    this.f8409x = null;
                                    UUID uuid = (UUID) intent2.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent2.getSerializableExtra("requestCode");
                                    int intExtra = intent2.getIntExtra("width", 0);
                                    int intExtra2 = intent2.getIntExtra("height", 0);
                                    int intExtra3 = intent2.getIntExtra("jpegRotation", 0);
                                    boolean booleanExtra = intent2.getBooleanExtra("mirror", false);
                                    Location location = (Location) intent2.getParcelableExtra("location");
                                    long longExtra = intent2.getLongExtra("captureStartTime", System.currentTimeMillis());
                                    intent2.getBooleanExtra("deviceMark", false);
                                    intent2.getBooleanExtra("timeMark", false);
                                    if (DeviceHelper.f13858aK == DeviceHelper.STEREO_TYPE.TYPE_PROCESS_IN_HAL) {
                                        LogUtil.m15942a(f8305s, "takeStereoPicture");
                                        LogUtil.m15942a(LogUtil.f14072b, "send takeStereoPicture to HAL success!");
                                        f8275g++;
                                        f8274f++;
                                        m9089a(uuid, requestCode, true, Storage.m7750a().mo18626a(false, CameraUtil.m15831a(longExtra)));
                                    } else if (DeviceHelper.f13858aK == DeviceHelper.STEREO_TYPE.TYPE_PROCESS_IN_GALLERY && DeviceHelper.f14043m) {
                                        try {
                                            CaptureRequest.Builder createCaptureRequest = ((CameraDevice) this.f8311B.mo19730a()).createCaptureRequest(2);
                                            createCaptureRequest.addTarget(this.f8316G.getSurface());
                                            C1924b bVar = r1;
                                            int i = intExtra;
                                            C1924b bVar2 = new C1924b(uuid, requestCode, longExtra, intExtra3, intExtra, intExtra2, false);
                                            this.f8316G.setOnImageAvailableListener(bVar, this.f8279c);
                                            if (this.f8383ay != null) {
                                                createCaptureRequest.addTarget(this.f8383ay);
                                            }
                                            createCaptureRequest.addTarget(this.f8317H.getSurface());
                                            this.f8317H.setOnImageAvailableListener(new C1924b(uuid, requestCode, longExtra, intExtra3, i, intExtra2, true), this.f8279c);
                                            createCaptureRequest.set(m9130b(Contants.CameraV2Key.CONTROL_ENABLE_ZSL), true);
                                            m9153c(createCaptureRequest);
                                            m9180g(createCaptureRequest);
                                            m9187h(createCaptureRequest);
                                            final CaptureRequest.Builder builder = createCaptureRequest;
                                            C189924 r1 = new C1923a(this, uuid, requestCode, intExtra3, booleanExtra, i, intExtra2, longExtra, false, false, false, location, this.f8317H.getWidth(), this.f8317H.getHeight()) {

                                                /* renamed from: a */
                                                public static ChangeQuickRedirect f8513a;

                                                /* renamed from: c */
                                                final /* synthetic */ CameraControllerV2 f8515c;

                                                {
                                                    this.f8515c = r4;
                                                }

                                                /* renamed from: a */
                                                public void mo19590a() {
                                                    if (!PatchProxy.proxy(new Object[0], this, f8513a, false, 3150, new Class[0], Void.TYPE).isSupported) {
                                                        try {
                                                            this.f8515c.f8325P.capture(builder.build(), this, this.f8515c.f8279c);
                                                        } catch (CameraAccessException e) {
                                                            e.printStackTrace();
                                                        }
                                                    }
                                                }

                                                /* renamed from: b */
                                                public void mo19591b() {
                                                    if (!PatchProxy.proxy(new Object[0], this, f8513a, false, 3151, new Class[0], Void.TYPE).isSupported) {
                                                        this.f8515c.f8323N.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, 1);
                                                        this.f8515c.m9064a(this.f8515c.f8323N, this.f8515c.f8341aF, false);
                                                        this.f8515c.mo19572e(4);
                                                        try {
                                                            this.f8515c.f8401br.mo19640a((C1923a) this);
                                                            this.f8515c.f8325P.capture(this.f8515c.f8323N.build(), this.f8515c.f8401br, this.f8515c.f8279c);
                                                            this.f8515c.f8323N.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, 0);
                                                        } catch (CameraAccessException e) {
                                                            LogUtil.m15950b(CameraControllerV2.f8305s, "Failed to run precapture sequence.", e);
                                                        }
                                                    }
                                                }
                                            };
                                            AsyncTaskEx.f13744r.mo22621a("takeStereoPicture", new Runnable(createCaptureRequest.build(), r1, longExtra, uuid, requestCode) {
                                                private final /* synthetic */ CaptureRequest f$1;
                                                private final /* synthetic */ CameraControllerV2.C1923a f$2;
                                                private final /* synthetic */ long f$3;
                                                private final /* synthetic */ UUID f$4;
                                                private final /* synthetic */ Contants.CameraService.RequestCode f$5;

                                                {
                                                    this.f$1 = r2;
                                                    this.f$2 = r3;
                                                    this.f$3 = r4;
                                                    this.f$4 = r6;
                                                    this.f$5 = r7;
                                                }

                                                public final void run() {
                                                    CameraControllerV2.this.m9068a(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
                                                }
                                            });
                                        } catch (CameraAccessException e) {
                                            e.printStackTrace();
                                        }
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public /* synthetic */ void m9068a(CaptureRequest captureRequest, C1923a aVar, long j, UUID uuid, Contants.CameraService.RequestCode requestCode) {
                                CaptureRequest captureRequest2 = captureRequest;
                                C1923a aVar2 = aVar;
                                UUID uuid2 = uuid;
                                Contants.CameraService.RequestCode requestCode2 = requestCode;
                                if (!PatchProxy.proxy(new Object[]{captureRequest2, aVar2, new Long(j), uuid2, requestCode2}, this, f8303o, false, 3113, new Class[]{CaptureRequest.class, C1923a.class, Long.TYPE, UUID.class, Contants.CameraService.RequestCode.class}, Void.TYPE).isSupported) {
                                    if (!this.f8373ao || this.f8341aF != CameraController.FlashMode.FLASH_MODE_OFF) {
                                        LogUtil.m15942a(f8305s, "takeStereoPicture lockFocus");
                                        m9070a(aVar2);
                                    } else {
                                        LogUtil.m15942a(f8305s, "takeStereoPicture immediately");
                                        try {
                                            this.f8325P.capture(captureRequest2, aVar2, this.f8279c);
                                        } catch (CameraAccessException e) {
                                            e.printStackTrace();
                                        }
                                    }
                                    f8275g++;
                                    f8274f++;
                                    m9089a(uuid2, requestCode2, true, Storage.m7750a().mo18626a(false, CameraUtil.m15831a(j)));
                                }
                            }

                            /* renamed from: l */
                            public void mo19525l(Intent intent) {
                                Intent intent2 = intent;
                                if (!PatchProxy.proxy(new Object[]{intent2}, this, f8303o, false, 3061, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    Storage.m7750a().mo18646c();
                                    this.f8356aU = null;
                                    this.f8385bb = null;
                                    this.f8409x = null;
                                    UUID uuid = (UUID) intent2.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent2.getSerializableExtra("requestCode");
                                    int intExtra = intent2.getIntExtra("width", 0);
                                    int intExtra2 = intent2.getIntExtra("height", 0);
                                    int intExtra3 = intent2.getIntExtra("jpegRotation", 0);
                                    boolean booleanExtra = intent2.getBooleanExtra("mirror", false);
                                    Location location = (Location) intent2.getParcelableExtra("location");
                                    long longExtra = intent2.getLongExtra("captureStartTime", System.currentTimeMillis());
                                    intent2.getBooleanExtra("deviceMark", false);
                                    intent2.getBooleanExtra("timeMark", false);
                                    boolean booleanExtra2 = intent2.getBooleanExtra("portraitRecord", false);
                                    try {
                                        CaptureRequest.Builder createCaptureRequest = ((CameraDevice) this.f8311B.mo19730a()).createCaptureRequest(2);
                                        createCaptureRequest.addTarget(this.f8316G.getSurface());
                                        boolean z = booleanExtra2;
                                        C1924b bVar = r1;
                                        Location location2 = location;
                                        ImageReader imageReader = this.f8316G;
                                        int i = intExtra;
                                        int i2 = intExtra;
                                        CaptureRequest.Builder builder = createCaptureRequest;
                                        C1924b bVar2 = new C1924b(uuid, requestCode, longExtra, intExtra3, i, intExtra2);
                                        imageReader.setOnImageAvailableListener(bVar, this.f8279c);
                                        if (this.f8383ay != null) {
                                            builder.addTarget(this.f8383ay);
                                        }
                                        m9153c(builder);
                                        m9180g(builder);
                                        m9187h(builder);
                                        CaptureRequest.Builder builder2 = builder;
                                        final CaptureRequest.Builder builder3 = builder2;
                                        C190025 r1 = new C1923a(this, uuid, requestCode, intExtra3, booleanExtra, i2, intExtra2, longExtra, false, false, false, location2, DeviceHelper.f14009da, DeviceHelper.f14010db) {

                                            /* renamed from: a */
                                            public static ChangeQuickRedirect f8516a;

                                            /* renamed from: c */
                                            final /* synthetic */ CameraControllerV2 f8518c;

                                            {
                                                this.f8518c = r4;
                                            }

                                            /* renamed from: a */
                                            public void mo19590a() {
                                                if (!PatchProxy.proxy(new Object[0], this, f8516a, false, 3152, new Class[0], Void.TYPE).isSupported) {
                                                    try {
                                                        this.f8518c.f8325P.capture(builder3.build(), this, this.f8518c.f8279c);
                                                    } catch (CameraAccessException e) {
                                                        e.printStackTrace();
                                                    }
                                                }
                                            }

                                            /* renamed from: b */
                                            public void mo19591b() {
                                                if (!PatchProxy.proxy(new Object[0], this, f8516a, false, 3153, new Class[0], Void.TYPE).isSupported) {
                                                    this.f8518c.f8323N.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, 1);
                                                    this.f8518c.m9064a(this.f8518c.f8323N, this.f8518c.f8341aF, false);
                                                    this.f8518c.mo19572e(4);
                                                    try {
                                                        this.f8518c.f8401br.mo19640a((C1923a) this);
                                                        this.f8518c.f8325P.capture(this.f8518c.f8323N.build(), this.f8518c.f8401br, this.f8518c.f8279c);
                                                        this.f8518c.f8323N.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, 0);
                                                    } catch (CameraAccessException e) {
                                                        LogUtil.m15950b(CameraControllerV2.f8305s, "Failed to run precapture sequence.", e);
                                                    }
                                                }
                                            }
                                        };
                                        AsyncTaskEx.f13744r.mo22621a("takeTofPicture", new Runnable(z, builder2.build(), r1, longExtra, uuid, requestCode) {
                                            private final /* synthetic */ boolean f$1;
                                            private final /* synthetic */ CaptureRequest f$2;
                                            private final /* synthetic */ CameraControllerV2.C1923a f$3;
                                            private final /* synthetic */ long f$4;
                                            private final /* synthetic */ UUID f$5;
                                            private final /* synthetic */ Contants.CameraService.RequestCode f$6;

                                            {
                                                this.f$1 = r2;
                                                this.f$2 = r3;
                                                this.f$3 = r4;
                                                this.f$4 = r5;
                                                this.f$5 = r7;
                                                this.f$6 = r8;
                                            }

                                            public final void run() {
                                                CameraControllerV2.this.m9090a(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                                            }
                                        });
                                    } catch (CameraAccessException e) {
                                        e.printStackTrace();
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public /* synthetic */ void m9090a(boolean z, CaptureRequest captureRequest, C1923a aVar, long j, UUID uuid, Contants.CameraService.RequestCode requestCode) {
                                boolean z2 = z;
                                CaptureRequest captureRequest2 = captureRequest;
                                C1923a aVar2 = aVar;
                                UUID uuid2 = uuid;
                                Contants.CameraService.RequestCode requestCode2 = requestCode;
                                if (!PatchProxy.proxy(new Object[]{new Byte(z2 ? (byte) 1 : 0), captureRequest2, aVar2, new Long(j), uuid2, requestCode2}, this, f8303o, false, 3112, new Class[]{Boolean.TYPE, CaptureRequest.class, C1923a.class, Long.TYPE, UUID.class, Contants.CameraService.RequestCode.class}, Void.TYPE).isSupported) {
                                    if (!this.f8373ao || (this.f8341aF != CameraController.FlashMode.FLASH_MODE_OFF && !z2)) {
                                        LogUtil.m15942a(f8305s, "takeTofPicture lockFocus");
                                        m9070a(aVar2);
                                    } else {
                                        LogUtil.m15942a(f8305s, "takeTofPicture immediately");
                                        try {
                                            this.f8325P.capture(captureRequest2, aVar2, this.f8279c);
                                        } catch (CameraAccessException e) {
                                            e.printStackTrace();
                                        }
                                    }
                                    f8275g++;
                                    f8274f++;
                                    m9089a(uuid2, requestCode2, true, Storage.m7750a().mo18626a(false, CameraUtil.m15831a(j)));
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9087a(UUID uuid, Contants.CameraService.RequestCode requestCode, String str, String str2, boolean z) {
                                UUID uuid2 = uuid;
                                Contants.CameraService.RequestCode requestCode2 = requestCode;
                                String str3 = str;
                                String str4 = str2;
                                boolean z2 = z;
                                if (!PatchProxy.proxy(new Object[]{uuid2, requestCode2, str3, str4, new Byte(z2 ? (byte) 1 : 0)}, this, f8303o, false, 3062, new Class[]{UUID.class, Contants.CameraService.RequestCode.class, String.class, String.class, Boolean.TYPE}, Void.TYPE).isSupported && f8275g != 0) {
                                    File file = new File(Storage.m7750a().mo18626a(z2, str4));
                                    long currentTimeMillis = System.currentTimeMillis();
                                    while (true) {
                                        if (this.f8385bb == null || !file.exists() || !file.canWrite()) {
                                            if (System.currentTimeMillis() - currentTimeMillis > 2000) {
                                                LogUtil.m15942a(f8305s, "timeOut waitting for mDualCamMetaData");
                                                LogUtil.C2630a aVar = f8305s;
                                                LogUtil.m15942a(aVar, "thumbFile.exists? : " + file.exists() + " canWrite? : " + file.canWrite());
                                                break;
                                            }
                                        } else {
                                            break;
                                        }
                                    }
                                    LogUtil.C2630a aVar2 = f8305s;
                                    StringBuilder sb = new StringBuilder();
                                    sb.append("sDualCamData ： ");
                                    Uri uri = null;
                                    sb.append(f8299aX != null ? Integer.valueOf(f8299aX.length) : null);
                                    sb.append(" mDualCamMetaData ");
                                    sb.append(this.f8385bb);
                                    sb.append(" mYuvData ");
                                    sb.append(this.f8356aU);
                                    LogUtil.m15942a(aVar2, sb.toString());
                                    if (!(f8299aX == null || this.f8385bb == null || this.f8356aU == null)) {
                                        LogUtil.m15942a(f8305s, "start save dual date");
                                        Storage.m7750a().mo18627a(1, f8299aX, str3);
                                        Storage.m7750a().mo18627a(2, this.f8385bb, str3);
                                        if (this.f8357aV != null) {
                                            Storage.m7750a().mo18627a(3, this.f8356aU, str3);
                                            Storage.m7750a().mo18627a(4, this.f8357aV, str3);
                                        } else {
                                            Storage.m7750a().mo18633a(this.f8356aU, str3);
                                        }
                                    }
                                    this.f8356aU = null;
                                    this.f8385bb = null;
                                    long currentTimeMillis2 = System.currentTimeMillis();
                                    while (true) {
                                        if (uri != null) {
                                            break;
                                        } else if (System.currentTimeMillis() - currentTimeMillis2 > 5000) {
                                            LogUtil.m15942a(f8305s, "spending too much time for getting thumbBitmapUri");
                                            break;
                                        } else {
                                            uri = Storage.m7750a().mo18636b();
                                        }
                                    }
                                    LogUtil.C2630a aVar3 = f8305s;
                                    LogUtil.m15942a(aVar3, "saveDualData: " + uri + "---" + str3);
                                    Intent intent = new Intent("com.meizu.media.imageservice.ARC_REFOCUS_REQUEST", uri);
                                    intent.setPackage("com.meizu.media.imageservice");
                                    intent.putExtra("dataFileUri", str3);
                                    if (DeviceHelper.f13881ah) {
                                        intent.putExtra("customDeviceMark", this.f8382ax);
                                    }
                                    intent.setFlags(32);
                                    if (Build.VERSION.SDK_INT >= 29) {
                                        this.f8286l.startForegroundService(intent);
                                    } else {
                                        this.f8286l.startService(intent);
                                    }
                                    this.f8281e.mo19059e().poll();
                                    String a = Storage.m7750a().mo18626a(z2, str4);
                                    if (uri != null) {
                                        this.f8281e.mo19045a(uuid2, requestCode2, Contants.CameraService.ResultCode.RESULT_ON_MEDIA_SAVED, uri);
                                        this.f8281e.mo19045a(uuid2, requestCode2, Contants.CameraService.ResultCode.RESULT_ON_FILE_SAVED, a);
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9086a(UUID uuid, Contants.CameraService.RequestCode requestCode, String str, String str2, String str3, boolean z, int i) {
                                UUID uuid2 = uuid;
                                Contants.CameraService.RequestCode requestCode2 = requestCode;
                                String str4 = str;
                                String str5 = str2;
                                String str6 = str3;
                                boolean z2 = z;
                                if (!PatchProxy.proxy(new Object[]{uuid2, requestCode2, str4, str5, str6, new Byte(z2 ? (byte) 1 : 0), new Integer(i)}, this, f8303o, false, 3063, new Class[]{UUID.class, Contants.CameraService.RequestCode.class, String.class, String.class, String.class, Boolean.TYPE, Integer.TYPE}, Void.TYPE).isSupported && f8275g != 0) {
                                    File file = new File(Storage.m7750a().mo18626a(z2, str6));
                                    long currentTimeMillis = System.currentTimeMillis();
                                    while (true) {
                                        if (this.f8386bc == null || !file.exists() || !file.canWrite()) {
                                            if (System.currentTimeMillis() - currentTimeMillis > 2000) {
                                                LogUtil.m15942a(f8305s, "timeOut waitting for mTofCamMetaData");
                                                LogUtil.C2630a aVar = f8305s;
                                                LogUtil.m15942a(aVar, "thumbFile.exists? : " + file.exists() + " canWrite? : " + file.canWrite());
                                                break;
                                            }
                                        } else {
                                            break;
                                        }
                                    }
                                    LogUtil.C2630a aVar2 = f8305s;
                                    StringBuilder sb = new StringBuilder();
                                    sb.append("sTofCaliData ： ");
                                    Uri uri = null;
                                    sb.append(f8300aY != null ? Integer.valueOf(f8300aY.length) : null);
                                    sb.append(" mTofCamMetaData ");
                                    sb.append(this.f8386bc);
                                    sb.append(" mYuvData ");
                                    sb.append(this.f8356aU);
                                    sb.append(" mTofYuvData ");
                                    sb.append(this.f8358aW);
                                    LogUtil.m15942a(aVar2, sb.toString());
                                    if (!(f8300aY == null || this.f8386bc == null || this.f8356aU == null)) {
                                        LogUtil.C2630a aVar3 = f8305s;
                                        LogUtil.m15942a(aVar3, "start save dual date: " + str4);
                                        Storage.m7750a().mo18627a(1, f8300aY, str4);
                                        Storage.m7750a().mo18627a(2, this.f8386bc, str4);
                                        if (this.f8358aW != null) {
                                            LogUtil.C2630a aVar4 = f8305s;
                                            LogUtil.m15942a(aVar4, "start save mSubYuvData: length" + this.f8358aW.length);
                                            Storage.m7750a().mo18627a(3, this.f8356aU, str4);
                                            Storage.m7750a().mo18627a(4, this.f8358aW, str4);
                                            for (int i2 = 0; i2 < f8302ba.length; i2++) {
                                                LogUtil.C2630a aVar5 = f8305s;
                                                LogUtil.m15942a(aVar5, "sTofCaliData_jcx_int: " + f8302ba[i2]);
                                            }
                                            LogUtil.C2630a aVar6 = f8305s;
                                            LogUtil.m15942a(aVar6, "start save supertofdata: " + str5);
                                            C2644av.m16098a(str5, C2644av.m16106a(TofBokehUtil.f12194a.doRegistration(this.f8358aW, f8302ba, 5000, 307200, false)));
                                        }
                                    }
                                    this.f8356aU = null;
                                    this.f8386bc = null;
                                    long currentTimeMillis2 = System.currentTimeMillis();
                                    while (true) {
                                        if (uri != null) {
                                            break;
                                        } else if (System.currentTimeMillis() - currentTimeMillis2 > 5000) {
                                            LogUtil.m15942a(f8305s, "spending too much time for getting thumbBitmapUri");
                                            break;
                                        } else {
                                            uri = Storage.m7750a().mo18636b();
                                        }
                                    }
                                    LogUtil.C2630a aVar7 = f8305s;
                                    LogUtil.m15942a(aVar7, "saveTofData: " + uri + "---" + str4);
                                    Intent intent = new Intent("com.meizu.media.imageservice.TOF_PROCESS_REQUEST", uri);
                                    intent.setPackage("com.meizu.media.imageservice");
                                    intent.putExtra("dataFileUri", str4);
                                    intent.putExtra("tofdataFileUri", str5);
                                    if (DeviceHelper.f13881ah) {
                                        intent.putExtra("customDeviceMark", this.f8382ax);
                                    }
                                    intent.setFlags(32);
                                    if (Build.VERSION.SDK_INT >= 26) {
                                        this.f8286l.startForegroundService(intent);
                                    } else {
                                        this.f8286l.startService(intent);
                                    }
                                    this.f8281e.mo19059e().poll();
                                    String a = Storage.m7750a().mo18626a(z2, str6);
                                    if (uri != null) {
                                        this.f8281e.mo19045a(uuid2, requestCode2, Contants.CameraService.ResultCode.RESULT_ON_MEDIA_SAVED, uri);
                                        this.f8281e.mo19045a(uuid2, requestCode2, Contants.CameraService.ResultCode.RESULT_ON_FILE_SAVED, a);
                                    }
                                }
                            }

                            /* renamed from: m */
                            public void mo19527m(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 3065, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    LogUtil.m15952c(f8305s, "takeBurstPicture");
                                    this.f8370al = true;
                                    UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                    Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                    try {
                                        CaptureRequest.Builder createCaptureRequest = ((CameraDevice) this.f8311B.mo19730a()).createCaptureRequest(2);
                                        createCaptureRequest.addTarget(this.f8316G.getSurface());
                                        if (this.f8383ay != null) {
                                            createCaptureRequest.addTarget(this.f8383ay);
                                        }
                                        this.f8316G.setOnImageAvailableListener(new C1924b(uuid, requestCode), this.f8279c);
                                        AsyncTaskEx.f13744r.mo22621a("takeBurstPicture", new Runnable(createCaptureRequest, uuid, requestCode) {
                                            private final /* synthetic */ CaptureRequest.Builder f$1;
                                            private final /* synthetic */ UUID f$2;
                                            private final /* synthetic */ Contants.CameraService.RequestCode f$3;

                                            {
                                                this.f$1 = r2;
                                                this.f$2 = r3;
                                                this.f$3 = r4;
                                            }

                                            public final void run() {
                                                CameraControllerV2.this.m9066a(this.f$1, this.f$2, this.f$3);
                                            }
                                        });
                                    } catch (Exception e) {
                                        LogUtil.m15949b(f8305s, e.getMessage());
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public /* synthetic */ void m9066a(CaptureRequest.Builder builder, UUID uuid, Contants.CameraService.RequestCode requestCode) {
                                if (!PatchProxy.proxy(new Object[]{builder, uuid, requestCode}, this, f8303o, false, 3111, new Class[]{CaptureRequest.Builder.class, UUID.class, Contants.CameraService.RequestCode.class}, Void.TYPE).isSupported) {
                                    m9063a(builder, 0);
                                    m9067a(builder, this.f8345aJ);
                                    m9065a(builder, this.f8342aG);
                                    m9180g(builder);
                                    m9187h(builder);
                                    m9036a(builder, -1);
                                    m9064a(builder, this.f8341aF, true);
                                    m9062a(builder);
                                    try {
                                        builder.set(m9130b(Contants.CameraV2Key.BURST_FPS), (byte) 1);
                                    } catch (Exception unused) {
                                        LogUtil.m15942a(f8305s, "not support BURST_FPS setting");
                                    }
                                    ArrayList arrayList = new ArrayList();
                                    for (int i = 0; i < DeviceHelper.f13940bn + 5; i++) {
                                        arrayList.add(builder.build());
                                    }
                                    this.f8394bk = 0;
                                    try {
                                        this.f8325P.captureBurst(arrayList, new CameraCaptureSession.CaptureCallback() {

                                            /* renamed from: a */
                                            public static ChangeQuickRedirect f8519a;

                                            public void onCaptureCompleted(@NonNull CameraCaptureSession cameraCaptureSession, @NonNull CaptureRequest captureRequest, @NonNull TotalCaptureResult totalCaptureResult) {
                                                if (!PatchProxy.proxy(new Object[]{cameraCaptureSession, captureRequest, totalCaptureResult}, this, f8519a, false, 3154, new Class[]{CameraCaptureSession.class, CaptureRequest.class, TotalCaptureResult.class}, Void.TYPE).isSupported) {
                                                    LogUtil.m15952c(CameraControllerV2.f8305s, "Burst onCaptureCompleted");
                                                    if (!(!CameraControllerV2.this.f8370al || CameraControllerV2.this.f8405bv == null || CameraControllerV2.this.f8281e.mo19058d() == null)) {
                                                        CameraControllerV2.this.f8281e.mo19058d().removeCallbacks(CameraControllerV2.this.f8405bv);
                                                        CameraControllerV2.this.f8281e.mo19043a((Object) CameraControllerV2.this.f8405bv);
                                                    }
                                                    CameraControllerV2.m9114ai(CameraControllerV2.this);
                                                    if (CameraControllerV2.this.f8394bk == DeviceHelper.f13940bn + 5) {
                                                        int unused = CameraControllerV2.this.f8394bk = -1;
                                                        EventBus.m21789a().mo27980d(16);
                                                    }
                                                }
                                            }
                                        }, this.f8279c);
                                        m9089a(uuid, requestCode, true, (String) null);
                                    } catch (CameraAccessException e) {
                                        e.printStackTrace();
                                    }
                                }
                            }

                            /* renamed from: n */
                            public void mo19529n(Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 3066, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15942a(aVar, "stop burst mIsNormalCapturing : " + this.f8370al);
                                    if (this.f8370al) {
                                        this.f8370al = false;
                                    }
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public byte[] m9095a(int i, long j, Location location, int i2, int i3, int i4, int i5) {
                                char[] cArr;
                                char[] cArr2;
                                long j2 = j;
                                int i6 = i2;
                                int i7 = i3;
                                int i8 = i4;
                                int i9 = i5;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Integer(i), new Long(j2), location, new Integer(i6), new Integer(i7), new Integer(i8), new Integer(i9)}, this, f8303o, false, 3067, new Class[]{Integer.TYPE, Long.TYPE, Location.class, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE}, byte[].class);
                                if (proxy.isSupported) {
                                    return (byte[]) proxy.result;
                                }
                                try {
                                    if (this.f8409x == null) {
                                        return null;
                                    }
                                    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
                                    byte[] a = ByteUtil.m16164a((short) 0);
                                    byteArrayOutputStream.write(a, 0, a.length);
                                    ASVLOffScreen aSVLOffScreen = new ASVLOffScreen();
                                    aSVLOffScreen.u32PixelArrayFormat = 2050;
                                    aSVLOffScreen.i32Width = i6;
                                    aSVLOffScreen.i32Height = i7;
                                    aSVLOffScreen.u32ScanLine = new int[]{i7, i7 / 2, 0, 0};
                                    aSVLOffScreen.pi32Pitch = new int[]{i6, i6 / 2, 0, 0};
                                    aSVLOffScreen.toByteArray(byteArrayOutputStream);
                                    ASVLOffScreen aSVLOffScreen2 = new ASVLOffScreen();
                                    aSVLOffScreen2.u32PixelArrayFormat = 2050;
                                    aSVLOffScreen2.i32Width = i8;
                                    aSVLOffScreen2.i32Height = i9;
                                    aSVLOffScreen2.u32ScanLine = new int[]{i9, i9 / 2, 0, 0};
                                    aSVLOffScreen2.pi32Pitch = new int[]{i8, i8 / 2, 0, 0};
                                    aSVLOffScreen2.toByteArray(byteArrayOutputStream);
                                    CameraImageParam cameraImageParam = new CameraImageParam();
                                    cameraImageParam.i32LeftFullWidth = DeviceHelper.f14013de;
                                    cameraImageParam.i32LeftFullHeight = DeviceHelper.f14014df;
                                    cameraImageParam.i32RightFullWidth = DeviceHelper.f14015dg;
                                    cameraImageParam.i32RightFullHeight = DeviceHelper.f14016dh;
                                    cameraImageParam.toByteArray(byteArrayOutputStream);
                                    BokehFace bokehFace = new BokehFace();
                                    Face[] faceArr = (Face[]) this.f8409x.get(CaptureResult.STATISTICS_FACES);
                                    bokehFace.i32FacesNum = faceArr != null ? faceArr.length : 0;
                                    bokehFace.i32ImgDegree = DeviceHelper.f14017di;
                                    for (int i10 = 0; i10 < 16; i10++) {
                                        if (faceArr == null || i10 >= faceArr.length) {
                                            bokehFace.faceArray[i10] = new Rect();
                                        } else {
                                            bokehFace.faceArray[i10] = faceArr[i10].getBounds();
                                        }
                                    }
                                    for (int i11 = 0; i11 < 16; i11++) {
                                        bokehFace.faceAnglesArray[i11] = 0;
                                    }
                                    bokehFace.toByteArray(byteArrayOutputStream);
                                    MeteringRectangle[] meteringRectangleArr = (MeteringRectangle[]) this.f8409x.get(CaptureResult.CONTROL_AF_REGIONS);
                                    Point point = new Point(0, 0);
                                    if (meteringRectangleArr != null && meteringRectangleArr.length >= 1) {
                                        point = m9032a(this.f8332W, i6, i7, meteringRectangleArr[0]);
                                    }
                                    byte[] a2 = ByteUtil.m16163a(point.x);
                                    byte[] a3 = ByteUtil.m16163a(point.y);
                                    byteArrayOutputStream.write(a2, 0, a2.length);
                                    byteArrayOutputStream.write(a3, 0, a3.length);
                                    byteArrayOutputStream.write(((Integer) this.f8409x.get(CaptureResult.CONTROL_AF_STATE)).intValue());
                                    byteArrayOutputStream.write(0);
                                    DualExif dualExif = new DualExif();
                                    Float f = (Float) this.f8409x.get(CaptureResult.LENS_APERTURE);
                                    Long l = (Long) this.f8409x.get(CaptureResult.SENSOR_EXPOSURE_TIME);
                                    Float f2 = (Float) this.f8409x.get(CaptureResult.LENS_FOCAL_LENGTH);
                                    Integer num = (Integer) this.f8409x.get(CaptureResult.SENSOR_SENSITIVITY);
                                    Integer num2 = Build.VERSION.SDK_INT >= 24 ? (Integer) this.f8409x.get(CaptureResult.CONTROL_POST_RAW_SENSITIVITY_BOOST) : null;
                                    DualExif dualExif2 = dualExif;
                                    dualExif2.apertureValue = new FractionNum((long) (f.floatValue() * 100.0f), 100);
                                    dualExif2.exposureTime = new FractionNum(l.longValue() / 100000, 10000);
                                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy:MM:dd HH:mm:ss", Locale.ENGLISH);
                                    simpleDateFormat.setTimeZone(Calendar.getInstance().getTimeZone());
                                    dualExif2.dateTime = simpleDateFormat.format(Long.valueOf(j));
                                    dualExif2.subSecTime = String.valueOf(j2 % 1000);
                                    dualExif2.manufacturer = Build.MANUFACTURER;
                                    if (dualExif2.manufacturer.equals(EnvironmentCompat.MEDIA_UNKNOWN)) {
                                        dualExif2.manufacturer = "Meizu";
                                    }
                                    if (Build.MODEL.length() > 10) {
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15956e(aVar, "Device model name over size: " + Build.MODEL);
                                        String replaceAll = Build.MODEL.replaceAll("(?i)meizu\\s+", "");
                                        LogUtil.C2630a aVar2 = f8305s;
                                        LogUtil.m15952c(aVar2, "convert device model name to: " + replaceAll);
                                        dualExif2.model = replaceAll;
                                    } else {
                                        dualExif2.model = Build.MODEL;
                                    }
                                    dualExif2.flashFired = ((Integer) this.f8409x.get(CaptureResult.FLASH_STATE)).shortValue();
                                    dualExif2.focalLength = new FractionNum((long) (f2.floatValue() * 100.0f), 100);
                                    dualExif2.isoSpeed = (short) ((num.intValue() * num2.intValue()) / 100);
                                    dualExif2.orientation = com.meizu.media.camera.p067d.ExifInterface.m9828k(i);
                                    GPSInfo gPSInfo = new GPSInfo();
                                    if (location != null) {
                                        gPSInfo.count = 1;
                                        double latitude = location.getLatitude();
                                        double longitude = location.getLongitude();
                                        double altitude = location.getAltitude();
                                        gPSInfo.longitude = com.meizu.media.camera.p067d.ExifInterface.m9823a(longitude);
                                        gPSInfo.latitude = com.meizu.media.camera.p067d.ExifInterface.m9823a(latitude);
                                        SimpleDateFormat simpleDateFormat2 = new SimpleDateFormat("yyyy:MM:dd");
                                        simpleDateFormat2.setTimeZone(TimeZone.getTimeZone("UTC"));
                                        gPSInfo.gpsDateStamp = simpleDateFormat2.format(Long.valueOf(location.getTime())).toCharArray();
                                        Calendar instance = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
                                        instance.setTimeInMillis(j2);
                                        double d = altitude;
                                        gPSInfo.gpsTimeStamp[0] = new com.meizu.media.camera.p067d.Rational((long) instance.get(11), 1);
                                        gPSInfo.gpsTimeStamp[1] = new com.meizu.media.camera.p067d.Rational((long) instance.get(12), 1);
                                        gPSInfo.gpsTimeStamp[2] = new com.meizu.media.camera.p067d.Rational((long) instance.get(13), 1);
                                        if (longitude >= 0.0d) {
                                            cArr = ExifInterface.LONGITUDE_EAST.toCharArray();
                                        } else {
                                            cArr = ExifInterface.LONGITUDE_WEST.toCharArray();
                                        }
                                        gPSInfo.lonRef = cArr;
                                        if (latitude >= 0.0d) {
                                            cArr2 = "N".toCharArray();
                                        } else {
                                            cArr2 = ExifInterface.LATITUDE_SOUTH.toCharArray();
                                        }
                                        gPSInfo.latRef = cArr2;
                                        gPSInfo.altitude = new com.meizu.media.camera.p067d.Rational((long) (d * 100.0d), 100);
                                        gPSInfo.altRef = d >= 0.0d ? 0 : 1;
                                    } else {
                                        gPSInfo.count = 0;
                                    }
                                    dualExif2.gpsInfo = gPSInfo;
                                    dualExif2.toByteArray(byteArrayOutputStream);
                                    byte[] byteArray = byteArrayOutputStream.toByteArray();
                                    byteArrayOutputStream.close();
                                    return byteArray;
                                } catch (IOException e) {
                                    e.printStackTrace();
                                    return new byte[0];
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: b */
                            public byte[] m9144b(int i, long j, Location location, int i2, int i3, int i4, int i5) {
                                ByteArrayOutputStream byteArrayOutputStream;
                                boolean z;
                                char[] cArr;
                                char[] cArr2;
                                int i6 = i;
                                int i7 = i2;
                                int i8 = i3;
                                int i9 = i4;
                                int i10 = i5;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{new Integer(i6), new Long(j), location, new Integer(i7), new Integer(i8), new Integer(i9), new Integer(i10)}, this, f8303o, false, 3068, new Class[]{Integer.TYPE, Long.TYPE, Location.class, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE}, byte[].class);
                                if (proxy.isSupported) {
                                    return (byte[]) proxy.result;
                                }
                                if (Build.VERSION.SDK_INT >= 24) {
                                    try {
                                        if (this.f8409x == null) {
                                            return null;
                                        }
                                        DualcamMeta dualcamMeta = new DualcamMeta();
                                        ByteArrayOutputStream byteArrayOutputStream2 = new ByteArrayOutputStream();
                                        byte[] a = ByteUtil.m16164a((short) 0);
                                        byteArrayOutputStream2.write(a, 0, a.length);
                                        ASVLOffScreen aSVLOffScreen = new ASVLOffScreen();
                                        aSVLOffScreen.u32PixelArrayFormat = 2050;
                                        aSVLOffScreen.i32Width = i7;
                                        aSVLOffScreen.i32Height = i8;
                                        aSVLOffScreen.u32ScanLine = new int[]{i8, i8 / 2, 0, 0};
                                        aSVLOffScreen.pi32Pitch = new int[]{i7, i7 / 2, 0, 0};
                                        aSVLOffScreen.toByteArray(byteArrayOutputStream2);
                                        ASVLOffScreen aSVLOffScreen2 = new ASVLOffScreen();
                                        aSVLOffScreen2.u32PixelArrayFormat = 3074;
                                        aSVLOffScreen2.i32Width = i9;
                                        aSVLOffScreen2.i32Height = i10;
                                        aSVLOffScreen2.u32ScanLine = new int[]{i10, 0, 0, 0};
                                        aSVLOffScreen2.pi32Pitch = new int[]{i9 * 2, 0, 0, 0};
                                        aSVLOffScreen2.toByteArray(byteArrayOutputStream2);
                                        CameraImageParam cameraImageParam = new CameraImageParam();
                                        cameraImageParam.i32LeftFullWidth = DeviceHelper.f14013de;
                                        cameraImageParam.i32LeftFullHeight = DeviceHelper.f14014df;
                                        cameraImageParam.i32RightFullWidth = DeviceHelper.f14009da;
                                        cameraImageParam.i32RightFullHeight = DeviceHelper.f14010db;
                                        cameraImageParam.toByteArray(byteArrayOutputStream2);
                                        dualcamMeta.setCamParam(cameraImageParam);
                                        Matrix matrix = new Matrix();
                                        Matrix matrix2 = new Matrix();
                                        ByteArrayOutputStream byteArrayOutputStream3 = byteArrayOutputStream2;
                                        Matrix matrix3 = matrix2;
                                        Matrix matrix4 = matrix;
                                        m9061a(matrix, matrix2, this.f8332W, false, false, 0, i7 < i8 ? i8 : i7, i3);
                                        Face[] faceArr = (Face[]) this.f8409x.get(CaptureResult.STATISTICS_FACES);
                                        BokehFace bokehFace = new BokehFace();
                                        bokehFace.i32FacesNum = faceArr != null ? faceArr.length : 0;
                                        bokehFace.i32ImgDegree = DeviceHelper.f14017di;
                                        for (int i11 = 0; i11 < 16; i11++) {
                                            if (faceArr == null || i11 >= faceArr.length) {
                                                bokehFace.faceArray[i11] = new Rect();
                                            } else {
                                                this.f8398bo.set(new Rect(faceArr[i11].getBounds().left, faceArr[i11].getBounds().top, faceArr[i11].getBounds().right, faceArr[i11].getBounds().bottom));
                                                matrix3.mapRect(this.f8398bo);
                                                matrix4.mapRect(this.f8398bo);
                                                bokehFace.faceArray[i11] = new Rect((int) this.f8398bo.left, (int) this.f8398bo.top, (int) this.f8398bo.right, (int) this.f8398bo.bottom);
                                            }
                                        }
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15952c(aVar, "tof jpegRotation: " + i6);
                                        for (int i12 = 0; i12 < 16; i12++) {
                                            bokehFace.faceAnglesArray[i12] = m9025a(i6, true);
                                        }
                                        ByteArrayOutputStream byteArrayOutputStream4 = byteArrayOutputStream3;
                                        bokehFace.toByteArray(byteArrayOutputStream4);
                                        Point point = new Point(0, 0);
                                        if (((Integer) this.f8409x.get(CaptureResult.CONTROL_AF_MODE)).intValue() != 1) {
                                            LogUtil.m15952c(f8305s, "not touch focus ");
                                            if (bokehFace.i32FacesNum > 0) {
                                                int i13 = 0;
                                                int i14 = 0;
                                                for (int i15 = 0; i15 < bokehFace.i32FacesNum; i15++) {
                                                    int width = bokehFace.faceArray[i15].width() * bokehFace.faceArray[i15].height();
                                                    if (width > i14) {
                                                        i13 = i15;
                                                        i14 = width;
                                                    }
                                                }
                                                point.x = (bokehFace.faceArray[i13].left + bokehFace.faceArray[i13].right) / 2;
                                                point.y = (bokehFace.faceArray[i13].top + bokehFace.faceArray[i13].bottom) / 2;
                                            } else {
                                                MeteringRectangle[] meteringRectangleArr = (MeteringRectangle[]) this.f8409x.get(CaptureResult.CONTROL_AF_REGIONS);
                                                if (meteringRectangleArr != null && meteringRectangleArr.length >= 1) {
                                                    point = m9032a(this.f8332W, i7, i8, meteringRectangleArr[0]);
                                                }
                                            }
                                        } else {
                                            MeteringRectangle[] meteringRectangleArr2 = (MeteringRectangle[]) this.f8409x.get(CaptureResult.CONTROL_AF_REGIONS);
                                            if (meteringRectangleArr2 != null && meteringRectangleArr2.length >= 1) {
                                                point = m9032a(this.f8332W, i7, i8, meteringRectangleArr2[0]);
                                            }
                                        }
                                        LogUtil.C2630a aVar2 = f8305s;
                                        LogUtil.m15952c(aVar2, "focusPoint: " + point);
                                        byte[] a2 = ByteUtil.m16163a(point.x);
                                        byte[] a3 = ByteUtil.m16163a(point.y);
                                        byteArrayOutputStream4.write(a2, 0, a2.length);
                                        byteArrayOutputStream4.write(a3, 0, a3.length);
                                        byteArrayOutputStream4.write(((Integer) this.f8409x.get(CaptureResult.CONTROL_AF_STATE)).intValue());
                                        byteArrayOutputStream4.write(0);
                                        DualExif dualExif = new DualExif();
                                        Float f = (Float) this.f8409x.get(CaptureResult.LENS_APERTURE);
                                        Long l = (Long) this.f8409x.get(CaptureResult.SENSOR_EXPOSURE_TIME);
                                        Float f2 = (Float) this.f8409x.get(CaptureResult.LENS_FOCAL_LENGTH);
                                        Integer num = (Integer) this.f8409x.get(CaptureResult.SENSOR_SENSITIVITY);
                                        Integer num2 = (Integer) this.f8409x.get(CaptureResult.CONTROL_POST_RAW_SENSITIVITY_BOOST);
                                        if (f != null) {
                                            dualExif.apertureValue = new FractionNum((long) (f.floatValue() * 100.0f), 100);
                                        }
                                        if (l != null) {
                                            dualExif.exposureTime = new FractionNum(l.longValue() / 100000, 10000);
                                        }
                                        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy:MM:dd HH:mm:ss", Locale.ENGLISH);
                                        simpleDateFormat.setTimeZone(Calendar.getInstance().getTimeZone());
                                        dualExif.dateTime = simpleDateFormat.format(Long.valueOf(j));
                                        long j2 = j;
                                        dualExif.subSecTime = String.valueOf(j2 % 1000);
                                        dualExif.manufacturer = Build.MANUFACTURER;
                                        if (dualExif.manufacturer.equals(EnvironmentCompat.MEDIA_UNKNOWN)) {
                                            dualExif.manufacturer = "Meizu";
                                        }
                                        if (Build.MODEL.length() > 10) {
                                            LogUtil.C2630a aVar3 = f8305s;
                                            LogUtil.m15956e(aVar3, "Device model name over size: " + Build.MODEL);
                                            String replaceAll = Build.MODEL.replaceAll("(?i)meizu\\s+", "");
                                            LogUtil.C2630a aVar4 = f8305s;
                                            LogUtil.m15952c(aVar4, "convert device model name to: " + replaceAll);
                                            dualExif.model = replaceAll;
                                        } else {
                                            dualExif.model = Build.MODEL;
                                        }
                                        Integer num3 = (Integer) this.f8409x.get(CaptureResult.FLASH_STATE);
                                        if (num3 != null) {
                                            dualExif.flashFired = num3.shortValue();
                                        }
                                        if (f2 != null) {
                                            dualExif.focalLength = new FractionNum((long) (f2.floatValue() * 100.0f), 100);
                                        }
                                        if (!(num == null || num2 == null)) {
                                            dualExif.isoSpeed = (short) ((num.intValue() * num2.intValue()) / 100);
                                        }
                                        dualExif.orientation = com.meizu.media.camera.p067d.ExifInterface.m9828k(i);
                                        GPSInfo gPSInfo = new GPSInfo();
                                        if (location != null) {
                                            gPSInfo.count = 1;
                                            double latitude = location.getLatitude();
                                            double longitude = location.getLongitude();
                                            double altitude = location.getAltitude();
                                            gPSInfo.longitude = com.meizu.media.camera.p067d.ExifInterface.m9823a(longitude);
                                            gPSInfo.latitude = com.meizu.media.camera.p067d.ExifInterface.m9823a(latitude);
                                            SimpleDateFormat simpleDateFormat2 = new SimpleDateFormat("yyyy:MM:dd");
                                            simpleDateFormat2.setTimeZone(TimeZone.getTimeZone("UTC"));
                                            gPSInfo.gpsDateStamp = simpleDateFormat2.format(Long.valueOf(location.getTime())).toCharArray();
                                            Calendar instance = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
                                            instance.setTimeInMillis(j2);
                                            byteArrayOutputStream = byteArrayOutputStream4;
                                            gPSInfo.gpsTimeStamp[0] = new com.meizu.media.camera.p067d.Rational((long) instance.get(11), 1);
                                            gPSInfo.gpsTimeStamp[1] = new com.meizu.media.camera.p067d.Rational((long) instance.get(12), 1);
                                            gPSInfo.gpsTimeStamp[2] = new com.meizu.media.camera.p067d.Rational((long) instance.get(13), 1);
                                            if (longitude >= 0.0d) {
                                                cArr = ExifInterface.LONGITUDE_EAST.toCharArray();
                                            } else {
                                                cArr = ExifInterface.LONGITUDE_WEST.toCharArray();
                                            }
                                            gPSInfo.lonRef = cArr;
                                            if (latitude >= 0.0d) {
                                                cArr2 = "N".toCharArray();
                                            } else {
                                                cArr2 = ExifInterface.LATITUDE_SOUTH.toCharArray();
                                            }
                                            gPSInfo.latRef = cArr2;
                                            gPSInfo.altitude = new com.meizu.media.camera.p067d.Rational((long) (100.0d * altitude), 100);
                                            gPSInfo.altRef = altitude >= 0.0d ? 0 : 1;
                                            z = false;
                                        } else {
                                            byteArrayOutputStream = byteArrayOutputStream4;
                                            z = false;
                                            gPSInfo.count = 0;
                                        }
                                        dualExif.gpsInfo = gPSInfo;
                                        ByteArrayOutputStream byteArrayOutputStream5 = byteArrayOutputStream;
                                        dualExif.toByteArray(byteArrayOutputStream5);
                                        int a4 = m9025a((360 - i) % 360, z);
                                        LogUtil.C2630a aVar5 = f8305s;
                                        LogUtil.m15952c(aVar5, "i32DeviceRoll: " + a4);
                                        byte[] a5 = ByteUtil.m16163a(a4);
                                        byteArrayOutputStream5.write(a5, 0, a5.length);
                                        byte[] byteArray = byteArrayOutputStream5.toByteArray();
                                        byteArrayOutputStream5.close();
                                        return byteArray;
                                    } catch (IOException e) {
                                        e.printStackTrace();
                                    }
                                }
                                return new byte[0];
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9069a(CaptureResult captureResult, int i, int i2, int i3, int i4) {
                                CaptureResult captureResult2 = captureResult;
                                int i5 = i;
                                int i6 = i2;
                                Object[] objArr = {captureResult2, new Integer(i5), new Integer(i6), new Integer(i3), new Integer(i4)};
                                if (!PatchProxy.proxy(objArr, this, f8303o, false, 3069, new Class[]{CaptureResult.class, Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE}, Void.TYPE).isSupported && captureResult2 != null) {
                                    if (this.f8395bl == null) {
                                        this.f8395bl = new DualcamMeta();
                                    }
                                    CameraImageParam cameraImageParam = new CameraImageParam();
                                    cameraImageParam.i32LeftFullWidth = DeviceHelper.f14013de;
                                    cameraImageParam.i32LeftFullHeight = DeviceHelper.f14014df;
                                    cameraImageParam.i32RightFullWidth = DeviceHelper.f14015dg;
                                    cameraImageParam.i32RightFullHeight = DeviceHelper.f14016dh;
                                    this.f8395bl.setCamParam(cameraImageParam);
                                    m9093a((Face[]) captureResult2.get(CaptureResult.STATISTICS_FACES), this.f8332W, EffectRenderContext.m4369h().mo14239w(), EffectRenderContext.m4369h().mo14240x());
                                    MeteringRectangle[] meteringRectangleArr = (MeteringRectangle[]) captureResult2.get(CaptureResult.CONTROL_AF_REGIONS);
                                    Point point = new Point(0, 0);
                                    if (meteringRectangleArr != null && meteringRectangleArr.length >= 1) {
                                        point = m9032a(this.f8332W, i5, i6, meteringRectangleArr[0]);
                                    }
                                    this.f8395bl.setFocusPoint(point);
                                    Integer num = (Integer) captureResult2.get(CaptureResult.CONTROL_AF_STATE);
                                    if (num != null) {
                                        if (num.intValue() != 2 && num.intValue() != 4) {
                                            this.f8395bl.setAf(false);
                                        } else if (this.f8397bn) {
                                            this.f8397bn = false;
                                            this.f8395bl.setAf(false);
                                        } else {
                                            this.f8395bl.setAf(true);
                                        }
                                    }
                                }
                            }

                            /* renamed from: a */
                            private void m9093a(Face[] faceArr, Rect rect, int i, int i2) {
                                Face[] faceArr2 = faceArr;
                                int i3 = i;
                                int i4 = i2;
                                if (!PatchProxy.proxy(new Object[]{faceArr2, rect, new Integer(i3), new Integer(i4)}, this, f8303o, false, 3070, new Class[]{Face[].class, Rect.class, Integer.TYPE, Integer.TYPE}, Void.TYPE).isSupported) {
                                    int length = faceArr2.length;
                                    if (i3 < i4) {
                                        i3 = i4;
                                    }
                                    Matrix matrix = new Matrix();
                                    Matrix matrix2 = new Matrix();
                                    m9061a(matrix, matrix2, rect, false, false, 0, i3, i2);
                                    BokehFace bokehFace = new BokehFace();
                                    bokehFace.i32FacesNum = faceArr2 != null ? faceArr2.length : 0;
                                    bokehFace.i32ImgDegree = DeviceHelper.f14017di;
                                    for (int i5 = 0; i5 < 16; i5++) {
                                        if (faceArr2 == null || i5 >= faceArr2.length) {
                                            bokehFace.faceArray[i5] = new Rect();
                                        } else {
                                            this.f8398bo.set(new Rect(faceArr2[i5].getBounds().left, faceArr2[i5].getBounds().top, faceArr2[i5].getBounds().right, faceArr2[i5].getBounds().bottom));
                                            matrix2.mapRect(this.f8398bo);
                                            matrix.mapRect(this.f8398bo);
                                            bokehFace.faceArray[i5] = new Rect((int) this.f8398bo.left, (int) this.f8398bo.top, (int) this.f8398bo.right, (int) this.f8398bo.bottom);
                                        }
                                    }
                                    int a = this.f8396bm != null ? this.f8396bm.mo19546a() : 0;
                                    for (int i6 = 0; i6 < 16; i6++) {
                                        bokehFace.faceAnglesArray[i6] = m9025a(a, true);
                                    }
                                    this.f8395bl.setFace(bokehFace);
                                    this.f8395bl.setI32DeviceRoll(m9025a((360 - a) % 360, false));
                                }
                            }

                            /* renamed from: a */
                            private void m9061a(Matrix matrix, Matrix matrix2, Rect rect, boolean z, boolean z2, int i, int i2, int i3) {
                                Matrix matrix3 = matrix;
                                Matrix matrix4 = matrix2;
                                boolean z3 = z;
                                boolean z4 = z2;
                                int i4 = i2;
                                int i5 = i3;
                                if (!PatchProxy.proxy(new Object[]{matrix3, matrix4, rect, new Byte(z3 ? (byte) 1 : 0), new Byte(z4 ? (byte) 1 : 0), new Integer(i), new Integer(i4), new Integer(i5)}, this, f8303o, false, 3071, new Class[]{Matrix.class, Matrix.class, Rect.class, Boolean.TYPE, Boolean.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE}, Void.TYPE).isSupported) {
                                    float f = -1.0f;
                                    float f2 = z3 ? -1.0f : 1.0f;
                                    if (!z4) {
                                        f = 1.0f;
                                    }
                                    matrix3.setScale(f2, f);
                                    float f3 = (float) i4;
                                    float f4 = (float) i5;
                                    matrix3.postScale(f3 / 2000.0f, f4 / 2000.0f);
                                    matrix3.postTranslate(f3 / 2.0f, f4 / 2.0f);
                                    matrix4.preTranslate(((float) (-rect.width())) / 2.0f, ((float) (-rect.height())) / 2.0f);
                                    matrix4.postScale((2000.0f / ((float) rect.width())) * 1.28f, (2000.0f / ((float) rect.height())) * 1.28f);
                                }
                            }

                            /* renamed from: a */
                            private Point m9032a(Rect rect, int i, int i2, MeteringRectangle meteringRectangle) {
                                Object[] objArr = {rect, new Integer(i), new Integer(i2), meteringRectangle};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                ChangeQuickRedirect changeQuickRedirect2 = changeQuickRedirect;
                                PatchProxyResult proxy = PatchProxy.proxy(objArr, this, changeQuickRedirect2, false, 3072, new Class[]{Rect.class, Integer.TYPE, Integer.TYPE, MeteringRectangle.class}, Point.class);
                                if (proxy.isSupported) {
                                    return (Point) proxy.result;
                                }
                                Rect rect2 = meteringRectangle.getRect();
                                rect2.left = Math.round(((float) (rect2.left * i)) / ((float) rect.right));
                                rect2.top = Math.round(((float) (rect2.top * i2)) / ((float) rect.bottom));
                                rect2.right = Math.round(((float) (rect2.right * i)) / ((float) rect.right));
                                rect2.bottom = Math.round(((float) (rect2.bottom * i2)) / ((float) rect.bottom));
                                Point point = new Point();
                                point.x = (rect2.left + rect2.right) / 2;
                                point.y = (rect2.top + rect2.bottom) / 2;
                                return point;
                            }

                            /* renamed from: a */
                            private void m9070a(C1923a aVar) {
                                CaptureRequest.Builder builder;
                                if (!PatchProxy.proxy(new Object[]{aVar}, this, f8303o, false, ASVLOffScreen.FORMAT_DEPTH16, new Class[]{C1923a.class}, Void.TYPE).isSupported) {
                                    try {
                                        this.f8315F.mo19728a("lockFocus");
                                        if (!(this.f8323N == null || this.f8325P == null)) {
                                            if (this.f8401br != null) {
                                                if (this.f8408w == 7) {
                                                    mo19572e(1);
                                                    this.f8401br.mo19640a(aVar);
                                                    this.f8390bg = 0;
                                                    this.f8315F.mo19729b("lockFocus");
                                                    return;
                                                }
                                                if (CameraModeType.m10955c()) {
                                                    builder = ((CameraDevice) this.f8311B.f9124c).createCaptureRequest(3);
                                                    builder.addTarget(this.f8319J);
                                                    builder.addTarget(this.f8320K);
                                                    if (CameraModeType.m10983m(CameraModeType.ModeType.SLOWMOTION)) {
                                                        builder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE, new Range(Integer.valueOf(this.f8333X), Integer.valueOf(this.f8333X)));
                                                    }
                                                } else {
                                                    builder = ((CameraDevice) this.f8311B.f9124c).createCaptureRequest(1);
                                                    builder.addTarget(this.f8383ay);
                                                }
                                                m9195j(builder);
                                                if (this.f8323N.get(CaptureRequest.SENSOR_EXPOSURE_TIME) == null) {
                                                    m9036a(builder, 0);
                                                } else {
                                                    m9036a(builder, ((Long) this.f8323N.get(CaptureRequest.SENSOR_EXPOSURE_TIME)).longValue() / 1000);
                                                }
                                                CaptureRequest build = builder.build();
                                                this.f8390bg = build.hashCode();
                                                mo19572e(1);
                                                this.f8401br.mo19640a(aVar);
                                                this.f8325P.capture(build, this.f8401br, this.f8279c);
                                                this.f8315F.mo19729b("lockFocus");
                                                return;
                                            }
                                        }
                                        this.f8315F.mo19729b("lockFocus");
                                    } catch (CameraAccessException e) {
                                        LogUtil.m15950b(f8305s, "Failed to lock focus.", e);
                                    } catch (InterruptedException e2) {
                                        e2.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("lockFocus");
                                        throw th;
                                    }
                                }
                            }

                            /* renamed from: j */
                            private void m9195j(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3075, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AF_TRIGGER, 1);
                                    m9180g(builder);
                                    m9187h(builder);
                                    m9064a(builder, this.f8341aF, false);
                                    m9153c(builder);
                                }
                            }

                            /* renamed from: k */
                            private void m9199k(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3076, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AF_TRIGGER, 2);
                                    m9064a(builder, this.f8341aF, false);
                                    m9153c(builder);
                                }
                            }

                            /* renamed from: b */
                            private void m9139b(C1923a aVar) {
                                if (!PatchProxy.proxy(new Object[]{aVar}, this, f8303o, false, 3077, new Class[]{C1923a.class}, Void.TYPE).isSupported && this.f8325P != null && this.f8323N != null && aVar != null) {
                                    try {
                                        m9202l(this.f8323N);
                                        mo19572e(2);
                                        this.f8401br.mo19640a(aVar);
                                        this.f8325P.setRepeatingRequest(this.f8323N.build(), this.f8401br, this.f8279c);
                                    } catch (CameraAccessException | IllegalStateException e) {
                                        e.printStackTrace();
                                    }
                                }
                            }

                            /* renamed from: l */
                            private void m9202l(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3078, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AE_LOCK, Boolean.TRUE);
                                }
                            }

                            /* renamed from: m */
                            private void m9205m(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3079, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(CaptureRequest.CONTROL_AE_LOCK, Boolean.FALSE);
                                }
                            }

                            /* renamed from: a */
                            public void mo19474a(String str, boolean... zArr) {
                                this.f8375aq = str;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: n */
                            public void m9207n(CaptureRequest.Builder builder) {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3080, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported) {
                                    builder.set(m9130b(Contants.CameraV2Key.EXPOSURE_METERING_MODE), Integer.valueOf(this.f8375aq));
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: c */
                            public void m9154c(C1923a aVar) {
                                if (!PatchProxy.proxy(new Object[]{aVar}, this, f8303o, false, 3081, new Class[]{C1923a.class}, Void.TYPE).isSupported) {
                                    try {
                                        this.f8315F.mo19728a("unlockFocus");
                                        if (!(this.f8311B == null || this.f8323N == null)) {
                                            if (this.f8325P != null) {
                                                m9064a(this.f8323N, this.f8341aF, false);
                                                m9205m(this.f8323N);
                                                this.f8401br.mo19640a((C1923a) null);
                                                if (this.f8344aI != 1 || !this.f8372an) {
                                                    if (!CameraModeType.m10955c()) {
                                                        CaptureRequest.Builder createCaptureRequest = ((CameraDevice) this.f8311B.f9124c).createCaptureRequest(1);
                                                        createCaptureRequest.addTarget(this.f8383ay);
                                                        m9199k(createCaptureRequest);
                                                        this.f8325P.capture(createCaptureRequest.build(), this.f8401br, this.f8279c);
                                                    }
                                                    mo19572e(0);
                                                } else {
                                                    mo19572e(7);
                                                }
                                                try {
                                                    this.f8325P.setRepeatingRequest(this.f8323N.build(), this.f8401br, this.f8279c);
                                                } catch (NullPointerException e) {
                                                    LogUtil.m15950b(f8305s, "unlockFocus setRepeatingRequest error.", e);
                                                }
                                                this.f8315F.mo19729b("unlockFocus");
                                                return;
                                            }
                                        }
                                        this.f8315F.mo19729b("unlockFocus");
                                    } catch (CameraAccessException e2) {
                                        LogUtil.m15950b(f8305s, "Failed to restart camera preview.", e2);
                                    } catch (InterruptedException e3) {
                                        e3.printStackTrace();
                                    } catch (Throwable th) {
                                        this.f8315F.mo19729b("unlockFocus");
                                        throw th;
                                    }
                                }
                            }

                            /* renamed from: H */
                            public boolean mo19444H() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3082, new Class[0], Boolean.TYPE);
                                if (proxy.isSupported) {
                                    return ((Boolean) proxy.result).booleanValue();
                                }
                                Log.d("while", "hasBackgroundTask sCapturingTaskNum:" + f8275g + "  mFocusing:" + this.f8371am);
                                if (f8275g > 0 || this.f8371am) {
                                    return true;
                                }
                                return false;
                            }

                            /* renamed from: X */
                            public void mo19446X() {
                                this.f8336aA = false;
                            }

                            /* renamed from: o */
                            public void mo19531o(final Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 3083, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("startFaceDetection", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8521a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8521a, false, 3155, new Class[0], Void.TYPE).isSupported) {
                                                if (CameraControllerV2.this.f8336aA) {
                                                    LogUtil.m15952c(CameraControllerV2.f8305s, "Face detection is already running");
                                                    return;
                                                }
                                                UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                                Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                                if (CameraControllerV2.this.f8311B != null && CameraControllerV2.this.f8325P != null) {
                                                    boolean unused = CameraControllerV2.this.f8336aA = true;
                                                    CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                    try {
                                                        CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8323N.build(), CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                    } catch (CameraAccessException e) {
                                                        e.printStackTrace();
                                                    }
                                                    CameraControllerV2.this.mo19574g(true);
                                                    if (CameraControllerV2.this.f8281e != null) {
                                                        CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_OK, new Object[0]);
                                                    }
                                                } else if (CameraControllerV2.this.f8281e != null) {
                                                    CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_NULL_CAMERA, new Object[0]);
                                                }
                                            }
                                        }
                                    });
                                }
                            }

                            /* renamed from: p */
                            public void mo19533p(final Intent intent) {
                                if (!PatchProxy.proxy(new Object[]{intent}, this, f8303o, false, 3084, new Class[]{Intent.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("stopFaceDetection", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8524a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8524a, false, 3156, new Class[0], Void.TYPE).isSupported) {
                                                if (!CameraControllerV2.this.f8336aA) {
                                                    LogUtil.m15952c(CameraControllerV2.f8305s, "Face detection is already stopped");
                                                    return;
                                                }
                                                UUID uuid = (UUID) intent.getSerializableExtra("uuid");
                                                Contants.CameraService.RequestCode requestCode = (Contants.CameraService.RequestCode) intent.getSerializableExtra("requestCode");
                                                if (CameraControllerV2.this.f8311B == null || CameraControllerV2.this.f8325P == null) {
                                                    boolean unused = CameraControllerV2.this.f8336aA = false;
                                                    if (CameraControllerV2.this.f8281e != null) {
                                                        CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_NULL_CAMERA, new Object[0]);
                                                        return;
                                                    }
                                                    return;
                                                }
                                                boolean unused2 = CameraControllerV2.this.f8336aA = false;
                                                CameraControllerV2.this.m9062a(CameraControllerV2.this.f8323N);
                                                try {
                                                    CameraControllerV2.this.f8325P.setRepeatingRequest(CameraControllerV2.this.f8323N.build(), CameraControllerV2.this.f8401br, CameraControllerV2.this.f8279c);
                                                } catch (CameraAccessException e) {
                                                    e.printStackTrace();
                                                }
                                                if (CameraControllerV2.this.f8281e != null) {
                                                    CameraControllerV2.this.f8281e.mo19045a(uuid, requestCode, Contants.CameraService.ResultCode.RESULT_OK, new Object[0]);
                                                }
                                                CameraControllerV2.this.mo19457a((Handler) null, (CameraController.C1877d) null);
                                            }
                                        }
                                    });
                                }
                            }

                            /* access modifiers changed from: private */
                            /* JADX WARNING: Removed duplicated region for block: B:30:0x020c  */
                            /* JADX WARNING: Removed duplicated region for block: B:31:0x0210  */
                            /* JADX WARNING: Removed duplicated region for block: B:34:0x0239  */
                            /* JADX WARNING: Removed duplicated region for block: B:58:0x032f  */
                            /* JADX WARNING: Removed duplicated region for block: B:61:0x0338  */
                            /* JADX WARNING: Removed duplicated region for block: B:63:0x033d  */
                            /* JADX WARNING: Removed duplicated region for block: B:64:0x0349  */
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public byte[] m9097a(android.media.Image r35, int r36, android.location.Location r37, long r38, boolean r40, android.hardware.camera2.TotalCaptureResult r41, boolean r42, boolean r43, boolean r44) {
                                /*
                                    r34 = this;
                                    r7 = r34
                                    r15 = r36
                                    r8 = r42
                                    r14 = r43
                                    r13 = r44
                                    r0 = 9
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    r12 = 0
                                    r1[r12] = r35
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r2.<init>(r15)
                                    r16 = 1
                                    r1[r16] = r2
                                    r11 = 2
                                    r1[r11] = r37
                                    java.lang.Long r2 = new java.lang.Long
                                    r3 = r38
                                    r2.<init>(r3)
                                    r10 = 3
                                    r1[r10] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r6 = r40
                                    r2.<init>(r6)
                                    r3 = 4
                                    r1[r3] = r2
                                    r2 = 5
                                    r1[r2] = r41
                                    java.lang.Byte r4 = new java.lang.Byte
                                    r4.<init>(r8)
                                    r5 = 6
                                    r1[r5] = r4
                                    java.lang.Byte r4 = new java.lang.Byte
                                    r4.<init>(r14)
                                    r17 = 7
                                    r1[r17] = r4
                                    java.lang.Byte r4 = new java.lang.Byte
                                    r4.<init>(r13)
                                    r18 = 8
                                    r1[r18] = r4
                                    com.meizu.savior.ChangeQuickRedirect r4 = f8303o
                                    java.lang.Class[] r0 = new java.lang.Class[r0]
                                    java.lang.Class<android.media.Image> r19 = android.media.Image.class
                                    r0[r12] = r19
                                    java.lang.Class r19 = java.lang.Integer.TYPE
                                    r0[r16] = r19
                                    java.lang.Class<android.location.Location> r19 = android.location.Location.class
                                    r0[r11] = r19
                                    java.lang.Class r19 = java.lang.Long.TYPE
                                    r0[r10] = r19
                                    java.lang.Class r19 = java.lang.Boolean.TYPE
                                    r0[r3] = r19
                                    java.lang.Class<android.hardware.camera2.TotalCaptureResult> r3 = android.hardware.camera2.TotalCaptureResult.class
                                    r0[r2] = r3
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r5] = r2
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r17] = r2
                                    java.lang.Class r2 = java.lang.Boolean.TYPE
                                    r0[r18] = r2
                                    java.lang.Class<byte[]> r17 = byte[].class
                                    r3 = 0
                                    r5 = 3085(0xc0d, float:4.323E-42)
                                    r18 = r0
                                    r0 = r1
                                    r1 = r34
                                    r2 = r4
                                    r4 = r5
                                    r5 = r18
                                    r6 = r17
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r0, r1, r2, r3, r4, r5, r6)
                                    boolean r1 = r0.isSupported
                                    if (r1 == 0) goto L_0x0093
                                    java.lang.Object r0 = r0.result
                                    byte[] r0 = (byte[]) r0
                                    return r0
                                L_0x0093:
                                    int r0 = r35.getWidth()
                                    int r1 = r35.getHeight()
                                    android.media.Image$Plane[] r2 = r35.getPlanes()
                                    r2 = r2[r12]
                                    int r2 = r2.getRowStride()
                                    r3 = 0
                                    if (r8 == 0) goto L_0x012c
                                    android.media.Image$Plane[] r4 = r35.getPlanes()
                                    r4 = r4[r12]
                                    java.nio.ByteBuffer r4 = r4.getBuffer()
                                    int r5 = r4.remaining()
                                    byte[] r5 = new byte[r5]
                                    r4.get(r5)
                                    if (r14 != 0) goto L_0x00c5
                                    boolean r4 = r7.f8380av
                                    if (r4 != 0) goto L_0x00c5
                                    r35.close()
                                    return r5
                                L_0x00c5:
                                    int[] r4 = new int[r11]
                                    r4 = {0, 0} // fill-array
                                    int r6 = r5.length
                                    byte[] r5 = com.meizu.media.cameraAlgorithm.yuv.YuvUtil.nativeDecodeNv21(r5, r6, r0, r1, r4)
                                    if (r5 != 0) goto L_0x00d9
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.String r1 = "decode nv21 fail"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                    return r3
                                L_0x00d9:
                                    com.meizu.media.camera.util.ac$a r6 = f8305s
                                    java.lang.StringBuilder r8 = new java.lang.StringBuilder
                                    r8.<init>()
                                    java.lang.String r3 = "nativeDecodeNv21:"
                                    r8.append(r3)
                                    r3 = r4[r12]
                                    r8.append(r3)
                                    java.lang.String r3 = "x"
                                    r8.append(r3)
                                    r3 = r4[r16]
                                    r8.append(r3)
                                    java.lang.String r3 = r8.toString()
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r6, (java.lang.String) r3)
                                    if (r5 == 0) goto L_0x0124
                                    int r3 = r0 * r1
                                    java.nio.ByteBuffer r4 = java.nio.ByteBuffer.allocateDirect(r3)
                                    r4.clear()
                                    r4.position(r12)
                                    java.nio.ByteBuffer r6 = r4.put(r5, r12, r3)
                                    r6.position(r12)
                                    int r6 = r3 / 2
                                    java.nio.ByteBuffer r8 = java.nio.ByteBuffer.allocateDirect(r6)
                                    r8.clear()
                                    r8.position(r12)
                                    java.nio.ByteBuffer r3 = r8.put(r5, r3, r6)
                                    r3.position(r12)
                                    goto L_0x0126
                                L_0x0124:
                                    r4 = 0
                                    r8 = 0
                                L_0x0126:
                                    r35.close()
                                    r3 = r0
                                    r5 = r8
                                    goto L_0x0192
                                L_0x012c:
                                    android.media.Image$Plane[] r3 = r35.getPlanes()
                                    r3 = r3[r12]
                                    int r3 = r3.getRowStride()
                                    android.media.Image$Plane[] r4 = r35.getPlanes()
                                    r4 = r4[r11]
                                    int r4 = r4.getRowStride()
                                    com.meizu.media.camera.util.ac$a r5 = f8305s
                                    java.lang.StringBuilder r6 = new java.lang.StringBuilder
                                    r6.<init>()
                                    java.lang.String r8 = "originStride: "
                                    r6.append(r8)
                                    r6.append(r3)
                                    java.lang.String r8 = "originWidth: "
                                    r6.append(r8)
                                    r6.append(r0)
                                    java.lang.String r8 = "originHeight: "
                                    r6.append(r8)
                                    r6.append(r1)
                                    java.lang.String r8 = "vustride: "
                                    r6.append(r8)
                                    r6.append(r4)
                                    java.lang.String r4 = r6.toString()
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r5, (java.lang.String) r4)
                                    if (r3 != r0) goto L_0x0194
                                    android.media.Image$Plane[] r4 = r35.getPlanes()
                                    r4 = r4[r12]
                                    java.nio.ByteBuffer r4 = r4.getBuffer()
                                    java.nio.ByteBuffer r4 = m9058a((java.nio.ByteBuffer) r4)
                                    r4.position(r12)
                                    android.media.Image$Plane[] r5 = r35.getPlanes()
                                    r5 = r5[r11]
                                    java.nio.ByteBuffer r5 = r5.getBuffer()
                                    java.nio.ByteBuffer r5 = m9058a((java.nio.ByteBuffer) r5)
                                    r5.position(r12)
                                L_0x0192:
                                    r6 = 0
                                    goto L_0x01ec
                                L_0x0194:
                                    int r4 = r2 * r1
                                    int r4 = r4 * 3
                                    int r4 = r4 / r11
                                    java.nio.ByteBuffer r4 = java.nio.ByteBuffer.allocate(r4)
                                    android.media.Image$Plane[] r5 = r35.getPlanes()
                                    r5 = r5[r12]
                                    java.nio.ByteBuffer r5 = r5.getBuffer()
                                    java.nio.ByteBuffer r5 = r4.put(r5)
                                    android.media.Image$Plane[] r6 = r35.getPlanes()
                                    r6 = r6[r11]
                                    java.nio.ByteBuffer r6 = r6.getBuffer()
                                    r5.put(r6)
                                    byte[] r5 = r4.array()
                                    com.meizu.media.cameraAlgorithm.yuv.YuvUtil.convertNv21torealyuv(r5, r0, r1, r3, r12)
                                    int r3 = r0 * r1
                                    java.nio.ByteBuffer r6 = java.nio.ByteBuffer.allocateDirect(r3)
                                    r6.clear()
                                    r6.position(r12)
                                    java.nio.ByteBuffer r8 = r6.put(r5, r12, r3)
                                    r8.position(r12)
                                    int r8 = r3 / 2
                                    java.nio.ByteBuffer r9 = java.nio.ByteBuffer.allocateDirect(r8)
                                    r9.clear()
                                    r9.position(r12)
                                    java.nio.ByteBuffer r3 = r9.put(r5, r3, r8)
                                    r3.position(r12)
                                    r3 = r0
                                    r5 = r9
                                    r33 = r6
                                    r6 = r4
                                    r4 = r33
                                L_0x01ec:
                                    r8 = r0
                                    r9 = r1
                                    r31 = r3
                                    r3 = 3
                                    r10 = r4
                                    r11 = r0
                                    r3 = 0
                                    r12 = r5
                                    r17 = r13
                                    r13 = r0
                                    r3 = r14
                                    r14 = r40
                                    r32 = r0
                                    r0 = r15
                                    r15 = r36
                                    com.meizu.media.cameraAlgorithm.yuv.YuvUtil.rotateNV21Buffer(r8, r9, r10, r11, r12, r13, r14, r15)
                                    r8 = 90
                                    if (r0 == r8) goto L_0x0210
                                    r8 = 270(0x10e, float:3.78E-43)
                                    if (r0 != r8) goto L_0x020c
                                    goto L_0x0210
                                L_0x020c:
                                    r8 = r1
                                    r0 = r32
                                    goto L_0x0215
                                L_0x0210:
                                    r0 = r1
                                    r31 = r0
                                    r8 = r32
                                L_0x0215:
                                    com.meizu.media.camera.util.ac$a r9 = f8305s
                                    java.lang.StringBuilder r10 = new java.lang.StringBuilder
                                    r10.<init>()
                                    java.lang.String r11 = "getJpegdata: deviceMarkOn = "
                                    r10.append(r11)
                                    r10.append(r3)
                                    java.lang.String r11 = ", mCustomDeviceMark = "
                                    r10.append(r11)
                                    java.lang.String r11 = r7.f8382ax
                                    r10.append(r11)
                                    java.lang.String r10 = r10.toString()
                                    com.meizu.media.camera.util.LogUtil.m15952c(r9, r10)
                                    r9 = 360(0x168, float:5.04E-43)
                                    if (r3 == 0) goto L_0x02c9
                                    boolean r3 = com.meizu.media.camera.util.DeviceHelper.f13881ah
                                    if (r3 == 0) goto L_0x0247
                                    java.lang.String r3 = r7.f8382ax
                                    if (r3 == 0) goto L_0x0247
                                    java.lang.String r3 = r7.f8382ax
                                    com.meizu.media.photoalgorithm.WaterMark.setCustomSign(r3)
                                    goto L_0x024b
                                L_0x0247:
                                    r3 = 0
                                    com.meizu.media.photoalgorithm.WaterMark.setCustomSign(r3)
                                L_0x024b:
                                    android.content.Context r3 = r7.f8286l
                                    java.lang.String r10 = com.meizu.media.camera.util.DeviceHelper.f14008dB
                                    boolean r11 = com.meizu.media.camera.util.DeviceUtil.m16196a()
                                    android.graphics.Bitmap r3 = com.meizu.media.photoalgorithm.WaterMark.getDevicemarkBitmap(r3, r10, r11)
                                    if (r3 == 0) goto L_0x02c9
                                    com.meizu.media.camera.util.DeviceHelper$CUSTOM_DEVICE_MARK r10 = com.meizu.media.camera.util.DeviceHelper.f14036f
                                    com.meizu.media.camera.util.DeviceHelper$CUSTOM_DEVICE_MARK r11 = com.meizu.media.camera.util.DeviceHelper.CUSTOM_DEVICE_MARK.PROCESS_AFTER_DEVICE_NAME
                                    if (r10 != r11) goto L_0x0261
                                    r10 = 1
                                    goto L_0x0262
                                L_0x0261:
                                    r10 = 0
                                L_0x0262:
                                    com.meizu.media.photoalgorithm.WaterMark.updateScaleRatioUsedStatus(r10)
                                    r10 = 0
                                    float r11 = com.meizu.media.photoalgorithm.WaterMark.getDevicemarkScaledRaio(r0, r8, r3, r10)
                                    android.graphics.Matrix r10 = new android.graphics.Matrix
                                    r10.<init>()
                                    r10.postScale(r11, r11)
                                    float r11 = (float) r9
                                    r10.postRotate(r11)
                                    r11 = 0
                                    r12 = 0
                                    int r13 = r3.getWidth()
                                    int r14 = r3.getHeight()
                                    r15 = 1
                                    r35 = r3
                                    r36 = r11
                                    r37 = r12
                                    r38 = r13
                                    r39 = r14
                                    r40 = r10
                                    r41 = r15
                                    android.graphics.Bitmap r10 = android.graphics.Bitmap.createBitmap(r35, r36, r37, r38, r39, r40, r41)
                                    int r11 = r10.getWidth()
                                    int r12 = r10.getHeight()
                                    r13 = 0
                                    android.graphics.Rect r30 = com.meizu.media.photoalgorithm.WaterMark.getDevicemarkRect(r0, r8, r11, r12, r13)
                                    r29 = 0
                                    r20 = r4
                                    r21 = r5
                                    r22 = r5
                                    r23 = r31
                                    r24 = r31
                                    r25 = r31
                                    r26 = r0
                                    r27 = r8
                                    r28 = r10
                                    com.meizu.media.photoalgorithm.WaterMark.nativePhotoWaterMarkYUV(r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30)
                                    boolean r11 = r10.isRecycled()
                                    if (r11 != 0) goto L_0x02c0
                                    r10.recycle()
                                L_0x02c0:
                                    boolean r10 = r3.isRecycled()
                                    if (r10 != 0) goto L_0x02c9
                                    r3.recycle()
                                L_0x02c9:
                                    boolean r3 = r7.f8380av
                                    if (r3 == 0) goto L_0x033b
                                    android.content.Context r3 = r7.f8286l
                                    java.lang.String r10 = r7.f8381aw
                                    android.graphics.Bitmap r3 = com.meizu.media.photoalgorithm.WaterMark.getTimemarkBitmap(r3, r10)
                                    if (r3 == 0) goto L_0x033b
                                    r10 = 0
                                    float r11 = com.meizu.media.photoalgorithm.WaterMark.getTimemarkScaledRaio(r0, r8, r3, r10)
                                    android.graphics.Matrix r10 = new android.graphics.Matrix
                                    r10.<init>()
                                    r10.postScale(r11, r11)
                                    float r9 = (float) r9
                                    r10.postRotate(r9)
                                    r9 = 0
                                    r11 = 0
                                    int r12 = r3.getWidth()
                                    int r13 = r3.getHeight()
                                    r14 = 1
                                    r35 = r3
                                    r36 = r9
                                    r37 = r11
                                    r38 = r12
                                    r39 = r13
                                    r40 = r10
                                    r41 = r14
                                    android.graphics.Bitmap r9 = android.graphics.Bitmap.createBitmap(r35, r36, r37, r38, r39, r40, r41)
                                    int r10 = r9.getWidth()
                                    int r11 = r9.getHeight()
                                    r12 = 0
                                    android.graphics.Rect r30 = com.meizu.media.photoalgorithm.WaterMark.getTimemarkRect(r0, r8, r10, r11, r12)
                                    r29 = 0
                                    r20 = r4
                                    r21 = r5
                                    r22 = r5
                                    r23 = r31
                                    r24 = r31
                                    r25 = r31
                                    r26 = r0
                                    r27 = r8
                                    r28 = r9
                                    com.meizu.media.photoalgorithm.WaterMark.nativePhotoWaterMarkYUV(r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30)
                                    boolean r10 = r9.isRecycled()
                                    if (r10 != 0) goto L_0x0332
                                    r9.recycle()
                                L_0x0332:
                                    boolean r9 = r3.isRecycled()
                                    if (r9 != 0) goto L_0x033b
                                    r3.recycle()
                                L_0x033b:
                                    if (r6 != 0) goto L_0x0349
                                    int r2 = r2 * r1
                                    r1 = 3
                                    int r2 = r2 * 3
                                    r1 = 2
                                    int r2 = r2 / r1
                                    java.nio.ByteBuffer r6 = java.nio.ByteBuffer.allocate(r2)
                                    goto L_0x034a
                                L_0x0349:
                                    r1 = 2
                                L_0x034a:
                                    r2 = 0
                                    r6.position(r2)
                                    java.nio.ByteBuffer r2 = r6.put(r4)
                                    r2.put(r5)
                                    byte[] r2 = r6.array()
                                    r4.clear()
                                    r5.clear()
                                    if (r17 == 0) goto L_0x03b2
                                    boolean r3 = com.meizu.media.camera.util.DeviceHelper.f13909bI
                                    if (r3 == 0) goto L_0x03b2
                                    long r3 = java.lang.System.currentTimeMillis()
                                    com.meizu.media.camera.util.ac$a r5 = f8305s
                                    java.lang.StringBuilder r9 = new java.lang.StringBuilder
                                    r9.<init>()
                                    java.lang.String r10 = "processFB start ： length: "
                                    r9.append(r10)
                                    int r10 = r2.length
                                    r9.append(r10)
                                    java.lang.String r9 = r9.toString()
                                    com.meizu.media.camera.util.LogUtil.m15952c(r5, r9)
                                    int[] r5 = new int[r1]
                                    r9 = 0
                                    r5[r9] = r31
                                    r5[r16] = r8
                                    int r31 = r31 * r8
                                    r10 = 3
                                    int r31 = r31 * 3
                                    int r10 = r31 / 2
                                    r11 = r5[r9]
                                    r5 = r5[r16]
                                    boolean r9 = com.meizu.media.camera.util.DeviceHelper.f13905bE
                                    com.meizu.media.camera.p068e.AlorgrithmManager.m10023a(r2, r10, r11, r5, r9)
                                    com.meizu.media.camera.util.ac$a r5 = f8305s
                                    java.lang.StringBuilder r9 = new java.lang.StringBuilder
                                    r9.<init>()
                                    java.lang.String r10 = "processFB end: "
                                    r9.append(r10)
                                    long r10 = java.lang.System.currentTimeMillis()
                                    long r10 = r10 - r3
                                    r9.append(r10)
                                    java.lang.String r3 = r9.toString()
                                    com.meizu.media.camera.util.LogUtil.m15952c(r5, r3)
                                L_0x03b2:
                                    java.io.ByteArrayOutputStream r3 = new java.io.ByteArrayOutputStream
                                    r4 = 1024(0x400, float:1.435E-42)
                                    r3.<init>(r4)
                                    android.graphics.YuvImage r4 = new android.graphics.YuvImage
                                    r5 = 17
                                    r9 = 3
                                    int[] r9 = new int[r9]
                                    r10 = 0
                                    r9[r10] = r0
                                    r9[r16] = r0
                                    r9[r1] = r0
                                    r35 = r4
                                    r36 = r2
                                    r37 = r5
                                    r38 = r0
                                    r39 = r8
                                    r40 = r9
                                    r35.<init>(r36, r37, r38, r39, r40)
                                    android.graphics.Rect r1 = new android.graphics.Rect
                                    r1.<init>(r10, r10, r0, r8)
                                    r0 = 97
                                    r4.compressToJpeg(r1, r0, r3)
                                    byte[] r0 = r3.toByteArray()
                                    r6.rewind()
                                    return r0
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9097a(android.media.Image, int, android.location.Location, long, boolean, android.hardware.camera2.TotalCaptureResult, boolean, boolean, boolean):byte[]");
                            }

                            /* renamed from: a */
                            public static ByteBuffer m9058a(ByteBuffer byteBuffer) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{byteBuffer}, (Object) null, f8303o, true, 3086, new Class[]{ByteBuffer.class}, ByteBuffer.class);
                                if (proxy.isSupported) {
                                    return (ByteBuffer) proxy.result;
                                }
                                ByteBuffer allocateDirect = ByteBuffer.allocateDirect(byteBuffer.capacity());
                                byteBuffer.rewind();
                                allocateDirect.put(byteBuffer);
                                byteBuffer.rewind();
                                allocateDirect.flip();
                                return allocateDirect;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: at */
                            public boolean m9124at() {
                                return this.f8355aT == 1 && this.f8311B != null && this.f8311B.f9122a == 1;
                            }

                            /* access modifiers changed from: private */
                            /* JADX WARNING: Removed duplicated region for block: B:21:0x0171  */
                            /* renamed from: a */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public byte[] m9098a(android.media.Image r18, int r19, boolean r20, boolean r21, boolean r22, boolean r23) {
                                /*
                                    r17 = this;
                                    r7 = r17
                                    r8 = r19
                                    r9 = r20
                                    r10 = r21
                                    r11 = r22
                                    r12 = r23
                                    r0 = 6
                                    java.lang.Object[] r1 = new java.lang.Object[r0]
                                    r13 = 0
                                    r1[r13] = r18
                                    java.lang.Integer r2 = new java.lang.Integer
                                    r2.<init>(r8)
                                    r14 = 1
                                    r1[r14] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r9)
                                    r6 = 2
                                    r1[r6] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r10)
                                    r15 = 3
                                    r1[r15] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r11)
                                    r3 = 4
                                    r1[r3] = r2
                                    java.lang.Byte r2 = new java.lang.Byte
                                    r2.<init>(r12)
                                    r4 = 5
                                    r1[r4] = r2
                                    com.meizu.savior.ChangeQuickRedirect r2 = f8303o
                                    java.lang.Class[] r5 = new java.lang.Class[r0]
                                    java.lang.Class<android.media.Image> r0 = android.media.Image.class
                                    r5[r13] = r0
                                    java.lang.Class r0 = java.lang.Integer.TYPE
                                    r5[r14] = r0
                                    java.lang.Class r0 = java.lang.Boolean.TYPE
                                    r5[r6] = r0
                                    java.lang.Class r0 = java.lang.Boolean.TYPE
                                    r5[r15] = r0
                                    java.lang.Class r0 = java.lang.Boolean.TYPE
                                    r5[r3] = r0
                                    java.lang.Class r0 = java.lang.Boolean.TYPE
                                    r5[r4] = r0
                                    java.lang.Class<byte[]> r16 = byte[].class
                                    r3 = 0
                                    r4 = 3087(0xc0f, float:4.326E-42)
                                    r0 = r1
                                    r1 = r17
                                    r14 = 2
                                    r6 = r16
                                    com.meizu.savior.PatchProxyResult r0 = com.meizu.savior.PatchProxy.proxy(r0, r1, r2, r3, r4, r5, r6)
                                    boolean r1 = r0.isSupported
                                    if (r1 == 0) goto L_0x006e
                                    java.lang.Object r0 = r0.result
                                    byte[] r0 = (byte[]) r0
                                    return r0
                                L_0x006e:
                                    int r0 = r18.getWidth()
                                    int r1 = r18.getHeight()
                                    android.media.Image$Plane[] r2 = r18.getPlanes()
                                    r2 = r2[r13]
                                    int r2 = r2.getRowStride()
                                    int r2 = r2 * r1
                                    int r2 = r2 * 3
                                    int r2 = r2 / r14
                                    java.nio.ByteBuffer r2 = java.nio.ByteBuffer.allocate(r2)
                                    if (r10 == 0) goto L_0x0117
                                    android.media.Image$Plane[] r3 = r18.getPlanes()
                                    r3 = r3[r13]
                                    java.nio.ByteBuffer r3 = r3.getBuffer()
                                    int r4 = r3.remaining()
                                    byte[] r4 = new byte[r4]
                                    r3.get(r4)
                                    int[] r3 = new int[r14]
                                    r3 = {0, 0} // fill-array
                                    int r5 = r4.length
                                    byte[] r4 = com.meizu.media.cameraAlgorithm.fbmodecomponent.AlorgrithmUtil.nativeDecodeNv21(r4, r5, r0, r1, r3)
                                    r5 = 0
                                    if (r4 != 0) goto L_0x00b3
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.String r1 = "decode nv21 fail"
                                    com.meizu.media.camera.util.LogUtil.m15949b((com.meizu.media.camera.util.LogUtil.C2630a) r0, (java.lang.String) r1)
                                    return r5
                                L_0x00b3:
                                    com.meizu.media.camera.util.ac$a r6 = f8305s
                                    java.lang.StringBuilder r10 = new java.lang.StringBuilder
                                    r10.<init>()
                                    java.lang.String r5 = "nativeDecodeNv21:"
                                    r10.append(r5)
                                    r5 = r3[r13]
                                    r10.append(r5)
                                    java.lang.String r5 = "x"
                                    r10.append(r5)
                                    r5 = 1
                                    r3 = r3[r5]
                                    r10.append(r3)
                                    java.lang.String r3 = r10.toString()
                                    com.meizu.media.camera.util.LogUtil.m15942a((com.meizu.media.camera.util.LogUtil.C2630a) r6, (java.lang.String) r3)
                                    if (r4 == 0) goto L_0x00ff
                                    int r3 = r0 * r1
                                    java.nio.ByteBuffer r5 = java.nio.ByteBuffer.allocateDirect(r3)
                                    r5.clear()
                                    r5.position(r13)
                                    java.nio.ByteBuffer r6 = r5.put(r4, r13, r3)
                                    r6.position(r13)
                                    int r6 = r3 / 2
                                    java.nio.ByteBuffer r10 = java.nio.ByteBuffer.allocateDirect(r6)
                                    r10.clear()
                                    r10.position(r13)
                                    java.nio.ByteBuffer r3 = r10.put(r4, r3, r6)
                                    r3.position(r13)
                                    goto L_0x0101
                                L_0x00ff:
                                    r5 = 0
                                    r10 = 0
                                L_0x0101:
                                    r18.close()
                                    r2.position(r13)
                                    java.nio.ByteBuffer r3 = r2.put(r5)
                                    r3.put(r10)
                                    byte[] r3 = r2.array()
                                    r2.rewind()
                                    r4 = r3
                                    goto L_0x016e
                                L_0x0117:
                                    android.media.Image$Plane[] r3 = r18.getPlanes()
                                    r3 = r3[r13]
                                    int r3 = r3.getRowStride()
                                    if (r3 != r0) goto L_0x0149
                                    r2.position(r13)
                                    android.media.Image$Plane[] r4 = r18.getPlanes()
                                    r4 = r4[r13]
                                    java.nio.ByteBuffer r4 = r4.getBuffer()
                                    java.nio.ByteBuffer r4 = r2.put(r4)
                                    android.media.Image$Plane[] r5 = r18.getPlanes()
                                    r5 = r5[r14]
                                    java.nio.ByteBuffer r5 = r5.getBuffer()
                                    r4.put(r5)
                                    byte[] r4 = r2.array()
                                    r2.rewind()
                                    goto L_0x016f
                                L_0x0149:
                                    android.media.Image$Plane[] r4 = r18.getPlanes()
                                    r4 = r4[r13]
                                    java.nio.ByteBuffer r4 = r4.getBuffer()
                                    java.nio.ByteBuffer r4 = r2.put(r4)
                                    android.media.Image$Plane[] r5 = r18.getPlanes()
                                    r5 = r5[r14]
                                    java.nio.ByteBuffer r5 = r5.getBuffer()
                                    r4.put(r5)
                                    byte[] r4 = r2.array()
                                    r2.rewind()
                                    com.meizu.media.cameraAlgorithm.yuv.YuvUtil.convertNv21torealyuv(r4, r0, r1, r3, r13)
                                L_0x016e:
                                    r3 = r0
                                L_0x016f:
                                    if (r11 == 0) goto L_0x017f
                                    byte[] r4 = com.meizu.media.cameraAlgorithm.yuv.YuvUtil.rotateNV21Data(r4, r3, r1, r8, r9)
                                    r2 = 90
                                    if (r8 == r2) goto L_0x017d
                                    r2 = 270(0x10e, float:3.78E-43)
                                    if (r8 != r2) goto L_0x017f
                                L_0x017d:
                                    r3 = r1
                                    r1 = r0
                                L_0x017f:
                                    if (r12 == 0) goto L_0x01d0
                                    boolean r0 = com.meizu.media.camera.util.DeviceHelper.f13909bI
                                    if (r0 == 0) goto L_0x01d0
                                    long r5 = java.lang.System.currentTimeMillis()
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.StringBuilder r2 = new java.lang.StringBuilder
                                    r2.<init>()
                                    java.lang.String r8 = "processFB start ： length: "
                                    r2.append(r8)
                                    int r8 = r4.length
                                    r2.append(r8)
                                    java.lang.String r2 = r2.toString()
                                    com.meizu.media.camera.util.LogUtil.m15952c(r0, r2)
                                    int[] r0 = new int[r14]
                                    r0[r13] = r3
                                    r2 = 1
                                    r0[r2] = r1
                                    int r3 = r3 * r1
                                    int r3 = r3 * 3
                                    int r3 = r3 / r14
                                    r1 = r0[r13]
                                    r0 = r0[r2]
                                    boolean r2 = com.meizu.media.camera.util.DeviceHelper.f13905bE
                                    com.meizu.media.camera.p068e.AlorgrithmManager.m10023a(r4, r3, r1, r0, r2)
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                    r1.<init>()
                                    java.lang.String r2 = "processFB end: "
                                    r1.append(r2)
                                    long r2 = java.lang.System.currentTimeMillis()
                                    long r2 = r2 - r5
                                    r1.append(r2)
                                    java.lang.String r1 = r1.toString()
                                    com.meizu.media.camera.util.LogUtil.m15952c(r0, r1)
                                L_0x01d0:
                                    com.meizu.media.camera.util.ac$a r0 = f8305s
                                    java.lang.StringBuilder r1 = new java.lang.StringBuilder
                                    r1.<init>()
                                    java.lang.String r2 = "getNv21data: mNeedDeviceMark = "
                                    r1.append(r2)
                                    boolean r2 = r7.f8379au
                                    r1.append(r2)
                                    java.lang.String r2 = ", mCustomDeviceMark = "
                                    r1.append(r2)
                                    java.lang.String r2 = r7.f8382ax
                                    r1.append(r2)
                                    java.lang.String r1 = r1.toString()
                                    com.meizu.media.camera.util.LogUtil.m15952c(r0, r1)
                                    return r4
                                */
                                throw new UnsupportedOperationException("Method not decompiled: com.meizu.media.camera.camcontroller.CameraControllerV2.m9098a(android.media.Image, int, boolean, boolean, boolean, boolean):byte[]");
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public BurstData m9053a(Image image, int i, int i2) {
                                Object[] objArr = {image, new Integer(i), new Integer(i2)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                ChangeQuickRedirect changeQuickRedirect2 = changeQuickRedirect;
                                PatchProxyResult proxy = PatchProxy.proxy(objArr, this, changeQuickRedirect2, false, 3088, new Class[]{Image.class, Integer.TYPE, Integer.TYPE}, BurstData.class);
                                if (proxy.isSupported) {
                                    return (BurstData) proxy.result;
                                }
                                ByteBuffer buffer = image.getPlanes()[0].getBuffer();
                                ByteBuffer buffer2 = image.getPlanes()[2].getBuffer();
                                int i3 = i2 * i;
                                int i4 = (i3 * 3) / 2;
                                BurstData b = C2649i.m16153a(i4).mo22732b();
                                if (b.mo22729b()) {
                                    byte[] bArr = new byte[i4];
                                    buffer.get(bArr, 0, buffer.remaining());
                                    buffer2.get(bArr, i3, buffer2.remaining());
                                    C2649i.m16156a(bArr, b);
                                } else {
                                    buffer.get(b.mo22728a(), 0, buffer.remaining());
                                    buffer2.get(b.mo22728a(), i3, buffer2.remaining());
                                }
                                image.close();
                                return b;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public byte[] m9096a(Image image, int i, int i2, int i3) {
                                byte[] bArr;
                                Object[] objArr = {image, new Integer(i), new Integer(i2), new Integer(i3)};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                ChangeQuickRedirect changeQuickRedirect2 = changeQuickRedirect;
                                PatchProxyResult proxy = PatchProxy.proxy(objArr, this, changeQuickRedirect2, false, 3089, new Class[]{Image.class, Integer.TYPE, Integer.TYPE, Integer.TYPE}, byte[].class);
                                if (proxy.isSupported) {
                                    return (byte[]) proxy.result;
                                }
                                int i4 = i3 * i2;
                                ByteBuffer allocate = ByteBuffer.allocate((i4 * 3) / 2);
                                ByteBuffer buffer = image.getPlanes()[0].getBuffer();
                                ByteBuffer buffer2 = image.getPlanes()[2].getBuffer();
                                if (i3 == i) {
                                    buffer.get(allocate.array(), 0, buffer.remaining());
                                    buffer2.get(allocate.array(), i4, buffer2.remaining());
                                    bArr = allocate.array();
                                } else {
                                    allocate.put(buffer).put(buffer2);
                                    byte[] array = allocate.array();
                                    YuvUtil.convertNv21torealyuv(array, i, i2, i3, false);
                                    bArr = array;
                                }
                                image.close();
                                return bArr;
                            }

                            /* renamed from: c */
                            public boolean mo19571c(String str) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{str}, this, f8303o, false, 3090, new Class[]{String.class}, Boolean.TYPE);
                                if (proxy.isSupported) {
                                    return ((Boolean) proxy.result).booleanValue();
                                }
                                if (str == null) {
                                    return false;
                                }
                                return !"Mznone".contains(str);
                            }

                            /* renamed from: a */
                            public void mo19463a(ParamData fVar) {
                                if (!PatchProxy.proxy(new Object[]{fVar}, this, f8303o, false, 3091, new Class[]{ParamData.class}, Void.TYPE).isSupported) {
                                    CamIntentTask.C1777c a = this.f8281e.mo19040a(fVar.f7464a);
                                    if (a == null) {
                                        LogUtil.m15956e(f8305s, "doEffect, listener is null, return!");
                                    } else {
                                        a.mo18006a(fVar);
                                    }
                                }
                            }

                            /* renamed from: Z */
                            public List<CameraController.FocusMode> mo19448Z() {
                                int[] iArr;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3092, new Class[0], List.class);
                                if (proxy.isSupported) {
                                    return (List) proxy.result;
                                }
                                if (this.f8314E == null || (iArr = (int[]) this.f8314E.get(CameraCharacteristics.CONTROL_AF_AVAILABLE_MODES)) == null) {
                                    return null;
                                }
                                ArrayList arrayList = new ArrayList();
                                for (int focusModeFromInt : iArr) {
                                    arrayList.add(CameraController.FocusMode.focusModeFromInt(focusModeFromInt));
                                }
                                return arrayList;
                            }

                            /* renamed from: e */
                            public CameraController.FocusMode mo19509e() {
                                return CameraController.FocusMode.FIXED;
                            }

                            /* renamed from: a */
                            public void mo19467a(final CameraController.FocusMode focusMode, boolean... zArr) {
                                Class[] clsArr = {CameraController.FocusMode.class, boolean[].class};
                                if (!PatchProxy.proxy(new Object[]{focusMode, zArr}, this, f8303o, false, 3093, clsArr, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setFocusMode", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8527a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8527a, false, 3157, new Class[0], Void.TYPE).isSupported && CameraControllerV2.this.f8323N != null && CameraControllerV2.this.f8311B != null && CameraControllerV2.this.f8314E != null) {
                                                try {
                                                    CameraControllerV2.this.f8315F.mo19728a("setFocusMode");
                                                    if (!(CameraControllerV2.this.f8323N == null || CameraControllerV2.this.f8311B == null)) {
                                                        if (CameraControllerV2.this.f8314E != null) {
                                                            int a = CameraControllerV2.m9126b(focusMode);
                                                            if (a != CameraControllerV2.this.f8344aI) {
                                                                boolean unused = CameraControllerV2.this.f8372an = false;
                                                                if (CameraControllerV2.this.f8408w == 7) {
                                                                    CameraControllerV2.this.mo19572e(0);
                                                                }
                                                            }
                                                            int unused2 = CameraControllerV2.this.f8344aI = a;
                                                            LogUtil.C2630a al = CameraControllerV2.f8305s;
                                                            LogUtil.m15952c(al, "setFocusMode :" + focusMode + ", " + CameraControllerV2.this.f8344aI);
                                                            CameraControllerV2.this.mo19573f(CameraControllerV2.this.f8344aI);
                                                            CameraControllerV2.this.f8315F.mo19729b("setFocusMode");
                                                            return;
                                                        }
                                                    }
                                                    CameraControllerV2.this.f8315F.mo19729b("setFocusMode");
                                                } catch (InterruptedException e) {
                                                    e.printStackTrace();
                                                } catch (Throwable th) {
                                                    CameraControllerV2.this.f8315F.mo19729b("setFocusMode");
                                                    throw th;
                                                }
                                            }
                                        }
                                    });
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: b */
                            public static int m9126b(CameraController.FocusMode focusMode) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{focusMode}, (Object) null, f8303o, true, 3094, new Class[]{CameraController.FocusMode.class}, Integer.TYPE);
                                if (proxy.isSupported) {
                                    return ((Integer) proxy.result).intValue();
                                }
                                if (focusMode == CameraController.FocusMode.AUTO) {
                                    return 1;
                                }
                                if (focusMode == CameraController.FocusMode.CONTINUOUS_PICTURE || focusMode == CameraController.FocusMode.MANUAL) {
                                    return 4;
                                }
                                if (focusMode == CameraController.FocusMode.CONTINUOUS_VIDEO) {
                                    return 3;
                                }
                                if (focusMode == CameraController.FocusMode.EDOF) {
                                    return 5;
                                }
                                if (focusMode == CameraController.FocusMode.MACRO) {
                                    return 2;
                                }
                                if (focusMode == CameraController.FocusMode.FIXED || focusMode == CameraController.FocusMode.INFINITY) {
                                    return 0;
                                }
                                LogUtil.C2630a aVar = f8305s;
                                LogUtil.m15949b(aVar, "convertAfMode - unknown mode " + focusMode + " , ignoring");
                                return 1;
                            }

                            /* renamed from: aa */
                            public CameraController.FocusMode mo19483aa() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3095, new Class[0], CameraController.FocusMode.class);
                                return proxy.isSupported ? (CameraController.FocusMode) proxy.result : CameraController.FocusMode.focusModeFromInt(this.f8344aI);
                            }

                            /* renamed from: ab */
                            public boolean mo19484ab() {
                                return this.f8345aJ;
                            }

                            /* renamed from: ac */
                            public Contants.AsdSceneType mo19485ac() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3096, new Class[0], Contants.AsdSceneType.class);
                                if (proxy.isSupported) {
                                    return (Contants.AsdSceneType) proxy.result;
                                }
                                if (this.f8401br != null) {
                                    return Contants.AsdSceneType.convertAsdSceneType(this.f8401br.f8675g);
                                }
                                return Contants.AsdSceneType.AUTO;
                            }

                            /* renamed from: ad */
                            public boolean mo19486ad() {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8303o, false, 3097, new Class[0], Boolean.TYPE);
                                if (proxy.isSupported) {
                                    return ((Boolean) proxy.result).booleanValue();
                                }
                                if (this.f8401br == null || this.f8401br.mo19639a() == null || ((Integer) this.f8401br.mo19639a().get(CaptureResult.CONTROL_AE_STATE)).intValue() == 4) {
                                    return false;
                                }
                                return true;
                            }

                            /* renamed from: Y */
                            public CameraController.HdrMode mo19447Y() {
                                return this.f8342aG;
                            }

                            /* renamed from: a */
                            public void mo19473a(String str, Object... objArr) {
                                if (!PatchProxy.proxy(new Object[]{str, objArr}, this, f8303o, false, 3098, new Class[]{String.class, Object[].class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15952c(aVar, "setCaptureMode :" + str);
                                    if (!MzCamParamsManager.f10479d.equals(str)) {
                                        this.f8342aG = CameraController.HdrMode.OFF;
                                    } else if (objArr.length > 0) {
                                        this.f8342aG = objArr[0];
                                    } else {
                                        this.f8342aG = CameraController.HdrMode.ON;
                                    }
                                    mo19471a(Contants.CameraV2Key.HDR_ENABLE.getKeyName(), String.valueOf(CameraController.HdrMode.convertInt(this.f8342aG)), new boolean[0]);
                                }
                            }

                            /* renamed from: a */
                            public void mo19469a(final CameraController.C1876c cVar) {
                                if (!PatchProxy.proxy(new Object[]{cVar}, this, f8303o, false, 3099, new Class[]{CameraController.C1876c.class}, Void.TYPE).isSupported) {
                                    AsyncTaskEx.f13744r.mo22621a("setDetectionCallback", new Runnable() {

                                        /* renamed from: a */
                                        public static ChangeQuickRedirect f8534a;

                                        public void run() {
                                            if (!PatchProxy.proxy(new Object[0], this, f8534a, false, 3158, new Class[0], Void.TYPE).isSupported) {
                                                CameraController.C1876c unused = CameraControllerV2.this.f8338aC = cVar;
                                            }
                                        }
                                    });
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9089a(UUID uuid, Contants.CameraService.RequestCode requestCode, boolean z, String str) {
                                Object[] objArr = {uuid, requestCode, new Byte(z ? (byte) 1 : 0), str};
                                ChangeQuickRedirect changeQuickRedirect = f8303o;
                                if (!PatchProxy.proxy(objArr, this, changeQuickRedirect, false, 3100, new Class[]{UUID.class, Contants.CameraService.RequestCode.class, Boolean.TYPE, String.class}, Void.TYPE).isSupported) {
                                    m9088a(uuid, requestCode, z, 0, str);
                                }
                            }

                            /* renamed from: a */
                            private void m9088a(UUID uuid, Contants.CameraService.RequestCode requestCode, boolean z, int i, String str) {
                                if (!PatchProxy.proxy(new Object[]{uuid, requestCode, new Byte(z ? (byte) 1 : 0), new Integer(i), str}, this, f8303o, false, 3101, new Class[]{UUID.class, Contants.CameraService.RequestCode.class, Boolean.TYPE, Integer.TYPE, String.class}, Void.TYPE).isSupported) {
                                    if (this.f8405bv != null) {
                                        this.f8281e.mo19058d().removeCallbacks(this.f8405bv);
                                    }
                                    if (z) {
                                        this.f8405bv = new C1932e(uuid, requestCode, str);
                                        this.f8281e.mo19058d().postDelayed(this.f8405bv, (long) (i + ViewDebugManagerImpl.INPUT_TIMEOUT));
                                    }
                                }
                            }

                            /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$e */
                            private class C1932e implements Runnable {

                                /* renamed from: a */
                                public static ChangeQuickRedirect f8685a;

                                /* renamed from: c */
                                private UUID f8687c;

                                /* renamed from: d */
                                private Contants.CameraService.RequestCode f8688d;

                                /* renamed from: e */
                                private String f8689e = null;

                                public C1932e(UUID uuid, Contants.CameraService.RequestCode requestCode, String str) {
                                    this.f8687c = uuid;
                                    this.f8688d = requestCode;
                                    if (str != null) {
                                        this.f8689e = str;
                                    }
                                }

                                public void run() {
                                    if (!PatchProxy.proxy(new Object[0], this, f8685a, false, 3217, new Class[0], Void.TYPE).isSupported) {
                                        LogUtil.C2630a al = CameraControllerV2.f8305s;
                                        LogUtil.m15942a(al, "take pic timeout, cancel all take pic task  sCapturingTaskNum:" + CameraController.f8275g);
                                        if (CameraController.f8275g > 0) {
                                            try {
                                                CameraControllerV2.this.f8315F.mo19728a("EndTakePicRunnable");
                                                CameraControllerV2.this.mo19572e(0);
                                                if (!(CameraControllerV2.this.f8311B == null || CameraControllerV2.this.f8325P == null)) {
                                                    CameraControllerV2.this.f8325P.stopRepeating();
                                                    CameraControllerV2.this.f8325P.abortCaptures();
                                                }
                                                CameraController.f8275g = 0;
                                                CameraController.f8274f = 0;
                                                if (!CamIntentTask.m7845l()) {
                                                    CamIntentTask.m7843j();
                                                }
                                                boolean unused = CameraControllerV2.this.f8370al = false;
                                                CameraControllerV2.this.f8281e.mo19041a(CameraController.f8275g);
                                                CameraControllerV2.this.f8281e.mo19045a(this.f8687c, this.f8688d, Contants.CameraService.ResultCode.RESULT_ON_CAPTURE_CANCEL, new Object[0]);
                                            } catch (CameraAccessException e) {
                                                e.printStackTrace();
                                            } catch (InterruptedException e2) {
                                                e2.printStackTrace();
                                            } catch (Throwable th) {
                                                CameraControllerV2.this.f8315F.mo19729b("EndTakePicRunnable");
                                                throw th;
                                            }
                                            CameraControllerV2.this.f8315F.mo19729b("EndTakePicRunnable");
                                            CameraControllerV2.this.m9154c((C1923a) null);
                                            if (this.f8689e != null) {
                                                try {
                                                    ExifInterface exifInterface = new ExifInterface(this.f8689e);
                                                    exifInterface.setAttribute(ExifInterface.TAG_USER_COMMENT, "timeout");
                                                    exifInterface.saveAttributes();
                                                } catch (IOException e3) {
                                                    e3.printStackTrace();
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            /* renamed from: com.meizu.media.camera.camcontroller.CameraControllerV2$f */
                            public class C1933f extends CameraController.C1880f<Face> {

                                /* renamed from: d */
                                public static ChangeQuickRedirect f8690d;

                                public C1933f(Face face) {
                                    super(face);
                                }

                                /* renamed from: a */
                                public int mo19555a() {
                                    PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8690d, false, 3218, new Class[0], Integer.TYPE);
                                    return proxy.isSupported ? ((Integer) proxy.result).intValue() : ((Face) this.f8295a).getScore();
                                }

                                /* renamed from: b */
                                public Rect mo19557b() {
                                    PatchProxyResult proxy = PatchProxy.proxy(new Object[0], this, f8690d, false, 3219, new Class[0], Rect.class);
                                    return proxy.isSupported ? (Rect) proxy.result : ((Face) this.f8295a).getBounds();
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: au */
                            public void m9125au() throws CameraAccessException {
                                if (!PatchProxy.proxy(new Object[0], this, f8303o, false, 3102, new Class[0], Void.TYPE).isSupported && this.f8311B != null && this.f8325P != null && this.f8323N != null) {
                                    if (this.f8325P instanceof CameraConstrainedHighSpeedCaptureSession) {
                                        LogUtil.m15942a(f8305s, "CameraConstrainedHighSpeedCaptureSession updateRepeatingRequest");
                                        LogUtil.C2630a aVar = f8305s;
                                        LogUtil.m15942a(aVar, "mediaRecorderSurface is valid ? " + this.f8320K.isValid());
                                        if (this.f8281e == null || (!this.f8281e.mo19051a(false) && !this.f8281e.mo19057c() && this.f8320K != null && this.f8320K.isValid())) {
                                            CameraConstrainedHighSpeedCaptureSession cameraConstrainedHighSpeedCaptureSession = (CameraConstrainedHighSpeedCaptureSession) this.f8325P;
                                            cameraConstrainedHighSpeedCaptureSession.setRepeatingBurst(cameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList(this.f8323N.build()), this.f8401br, this.f8279c);
                                            return;
                                        }
                                        LogUtil.m15942a(f8305s, "next task stop preview/ close Camera, return");
                                        return;
                                    }
                                    LogUtil.m15942a(f8305s, "CameraCaptureSession updateRepeatingRequest");
                                    this.f8325P.setRepeatingRequest(this.f8323N.build(), this.f8401br, this.f8279c);
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: o */
                            public void m9208o(CaptureRequest.Builder builder) throws CameraAccessException {
                                if (!PatchProxy.proxy(new Object[]{builder}, this, f8303o, false, 3103, new Class[]{CaptureRequest.Builder.class}, Void.TYPE).isSupported && this.f8325P != null && this.f8323N != null && builder != null) {
                                    if (this.f8325P instanceof CameraConstrainedHighSpeedCaptureSession) {
                                        LogUtil.m15942a(f8305s, "CameraConstrainedHighSpeedCaptureSession updateSessionCapture");
                                        CameraConstrainedHighSpeedCaptureSession cameraConstrainedHighSpeedCaptureSession = (CameraConstrainedHighSpeedCaptureSession) this.f8325P;
                                        cameraConstrainedHighSpeedCaptureSession.captureBurst(cameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList(builder.build()), this.f8401br, this.f8279c);
                                        return;
                                    }
                                    LogUtil.m15942a(f8305s, "CameraCaptureSession updateSessionCapture");
                                    this.f8325P.capture(builder.build(), this.f8401br, this.f8279c);
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: b */
                            public CaptureRequest.Key m9130b(Contants.CameraV2Key cameraV2Key) {
                                CaptureRequest.Key key;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{cameraV2Key}, this, f8303o, false, 3104, new Class[]{Contants.CameraV2Key.class}, CaptureRequest.Key.class);
                                if (proxy.isSupported) {
                                    return (CaptureRequest.Key) proxy.result;
                                }
                                if (this.f8347aL == null) {
                                    this.f8347aL = new HashMap<>();
                                }
                                if (this.f8347aL.get(cameraV2Key.getKeyName()) != null) {
                                    return this.f8347aL.get(cameraV2Key.getKeyName());
                                }
                                Object[] objArr = {cameraV2Key.getKeyName(), cameraV2Key.getKeyType()};
                                try {
                                    key = (CaptureRequest.Key) C2634am.m15990a((Class<?>) CaptureRequest.Key.class, objArr);
                                } catch (Exception e) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15949b(aVar, "getCustomRequestKeys failed : " + e);
                                    e.printStackTrace();
                                    key = null;
                                }
                                this.f8347aL.put((String) objArr[0], key);
                                LogUtil.C2630a aVar2 = f8305s;
                                LogUtil.m15942a(aVar2, "getCustomRequestKeys key = " + key);
                                return key;
                            }

                            /* renamed from: a */
                            public CaptureResult.Key mo19562a(Contants.CameraV2Key cameraV2Key) {
                                CaptureResult.Key key;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{cameraV2Key}, this, f8303o, false, 3105, new Class[]{Contants.CameraV2Key.class}, CaptureResult.Key.class);
                                if (proxy.isSupported) {
                                    return (CaptureResult.Key) proxy.result;
                                }
                                if (this.f8348aM == null) {
                                    this.f8348aM = new HashMap<>();
                                }
                                if (this.f8348aM.get(cameraV2Key.getKeyName()) != null) {
                                    return this.f8348aM.get(cameraV2Key.getKeyName());
                                }
                                Object[] objArr = {cameraV2Key.getKeyName(), cameraV2Key.getKeyType()};
                                try {
                                    key = (CaptureResult.Key) C2634am.m15990a((Class<?>) CaptureResult.Key.class, objArr);
                                } catch (Exception e) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15949b(aVar, "getCustomResultKeys failed : " + e);
                                    e.printStackTrace();
                                    key = null;
                                }
                                this.f8348aM.put((String) objArr[0], key);
                                LogUtil.C2630a aVar2 = f8305s;
                                LogUtil.m15942a(aVar2, "getCustomResultKeys key = " + key);
                                return key;
                            }

                            /* renamed from: a */
                            public CameraCharacteristics.Key mo19561a(Contants.CameraCharacteristicsKey cameraCharacteristicsKey) {
                                CameraCharacteristics.Key key;
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{cameraCharacteristicsKey}, this, f8303o, false, 3106, new Class[]{Contants.CameraCharacteristicsKey.class}, CameraCharacteristics.Key.class);
                                if (proxy.isSupported) {
                                    return (CameraCharacteristics.Key) proxy.result;
                                }
                                if (this.f8349aN == null) {
                                    this.f8349aN = new HashMap<>();
                                }
                                if (this.f8349aN.get(cameraCharacteristicsKey.getKeyName()) != null) {
                                    return this.f8349aN.get(cameraCharacteristicsKey.getKeyName());
                                }
                                Object[] objArr = {cameraCharacteristicsKey.getKeyName(), cameraCharacteristicsKey.getKeyType()};
                                try {
                                    key = (CameraCharacteristics.Key) C2634am.m15990a((Class<?>) CameraCharacteristics.Key.class, objArr);
                                } catch (Exception e) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15949b(aVar, "getCameraCharacteristicsKeys failed : " + e);
                                    e.printStackTrace();
                                    key = null;
                                }
                                this.f8349aN.put((String) objArr[0], key);
                                LogUtil.C2630a aVar2 = f8305s;
                                LogUtil.m15942a(aVar2, "getCustomResultKeys key = " + key);
                                return key;
                            }

                            /* renamed from: ak */
                            public boolean mo19569ak() {
                                return this.f8394bk == -1;
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public void m9084a(RuntimeException runtimeException) {
                                if (!PatchProxy.proxy(new Object[]{runtimeException}, this, f8303o, false, 3107, new Class[]{RuntimeException.class}, Void.TYPE).isSupported) {
                                    DeviceUtil.m16195a(runtimeException);
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: a */
                            public String m9056a(Integer num) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{num}, this, f8303o, false, 3108, new Class[]{Integer.class}, String.class);
                                if (proxy.isSupported) {
                                    return (String) proxy.result;
                                }
                                if (num == null) {
                                    return "NULL";
                                }
                                switch (num.intValue()) {
                                    case 0:
                                        return "CONTROL_AE_STATE_INACTIVE(" + num + ")";
                                    case 1:
                                        return "CONTROL_AE_STATE_SEARCHING(" + num + ")";
                                    case 2:
                                        return "CONTROL_AE_STATE_CONVERGED(" + num + ")";
                                    case 3:
                                        return "CONTROL_AE_STATE_LOCKED(" + num + ")";
                                    case 4:
                                        return "CONTROL_AE_STATE_FLASH_REQUIRED(" + num + ")";
                                    case 5:
                                        return "CONTROL_AE_STATE_PRECAPTURE(" + num + ")";
                                    default:
                                        return String.valueOf(num);
                                }
                            }

                            /* access modifiers changed from: private */
                            /* renamed from: b */
                            public String m9136b(Integer num) {
                                PatchProxyResult proxy = PatchProxy.proxy(new Object[]{num}, this, f8303o, false, 3109, new Class[]{Integer.class}, String.class);
                                if (proxy.isSupported) {
                                    return (String) proxy.result;
                                }
                                if (num == null) {
                                    return "NULL";
                                }
                                switch (num.intValue()) {
                                    case 0:
                                        return "CONTROL_AF_STATE_INACTIVE(" + num + ")";
                                    case 1:
                                        return "CONTROL_AF_STATE_PASSIVE_SCAN(" + num + ")";
                                    case 2:
                                        return "CONTROL_AF_STATE_PASSIVE_FOCUSED(" + num + ")";
                                    case 3:
                                        return "CONTROL_AF_STATE_ACTIVE_SCAN(" + num + ")";
                                    case 4:
                                        return "CONTROL_AF_STATE_FOCUSED_LOCKED(" + num + ")";
                                    case 5:
                                        return "CONTROL_AF_STATE_NOT_FOCUSED_LOCKED(" + num + ")";
                                    case 6:
                                        return "CONTROL_AF_STATE_PASSIVE_UNFOCUSED(" + num + ")";
                                    default:
                                        return String.valueOf(num);
                                }
                            }

                            /* renamed from: a */
                            public void mo19468a(CameraController.C1875b bVar) {
                                if (!PatchProxy.proxy(new Object[]{bVar}, this, f8303o, false, 3110, new Class[]{CameraController.C1875b.class}, Void.TYPE).isSupported) {
                                    LogUtil.C2630a aVar = f8305s;
                                    LogUtil.m15952c(aVar, "setBokehDetectionCallback: " + bVar);
                                    this.f8396bm = bVar;
                                }
                            }

                            /* renamed from: a */
                            public void mo19478a(byte[] bArr) {
                                if (bArr != null && bArr.length > 0) {
                                    if (this.f8358aW == null) {
                                        this.f8358aW = new byte[bArr.length];
                                    }
                                    this.f8358aW = bArr;
                                }
                            }

                            /* renamed from: e */
                            public void mo19511e(boolean z) {
                                this.f8369ak = z;
                            }

                            /* renamed from: f */
                            public void mo19514f(boolean z) {
                                this.f8399bp = z;
                            }
                        }
